
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Truck
 * 
 */
export type Truck = $Result.DefaultSelection<Prisma.$TruckPayload>
/**
 * Model Trailer
 * 
 */
export type Trailer = $Result.DefaultSelection<Prisma.$TrailerPayload>
/**
 * Model Driver
 * 
 */
export type Driver = $Result.DefaultSelection<Prisma.$DriverPayload>
/**
 * Model Load
 * 
 */
export type Load = $Result.DefaultSelection<Prisma.$LoadPayload>
/**
 * Model Location
 * 
 */
export type Location = $Result.DefaultSelection<Prisma.$LocationPayload>
/**
 * Model TruckDocument
 * 
 */
export type TruckDocument = $Result.DefaultSelection<Prisma.$TruckDocumentPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TransmissionType: {
  MANUAL: 'MANUAL',
  AUTOMATIC: 'AUTOMATIC',
  AUTOMATED_MANUAL: 'AUTOMATED_MANUAL'
};

export type TransmissionType = (typeof TransmissionType)[keyof typeof TransmissionType]


export const OwnershipType: {
  OWNED: 'OWNED',
  LEASED: 'LEASED',
  RENTED: 'RENTED'
};

export type OwnershipType = (typeof OwnershipType)[keyof typeof OwnershipType]


export const TruckStatus: {
  available: 'available',
  assigned: 'assigned',
  maintenance: 'maintenance',
  out_of_service: 'out_of_service'
};

export type TruckStatus = (typeof TruckStatus)[keyof typeof TruckStatus]


export const DistanceUnit: {
  MILES: 'MILES',
  KILOMETERS: 'KILOMETERS'
};

export type DistanceUnit = (typeof DistanceUnit)[keyof typeof DistanceUnit]


export const TrailerStatus: {
  AVAILABLE: 'AVAILABLE',
  ASSIGNED: 'ASSIGNED',
  MAINTENANCE: 'MAINTENANCE',
  OUT_OF_SERVICE: 'OUT_OF_SERVICE'
};

export type TrailerStatus = (typeof TrailerStatus)[keyof typeof TrailerStatus]


export const DriverStatus: {
  AVAILABLE: 'AVAILABLE',
  DRIVING: 'DRIVING',
  ON_BREAK: 'ON_BREAK',
  LOADING: 'LOADING',
  UNLOADING: 'UNLOADING',
  MAINTENANCE: 'MAINTENANCE',
  AWAY: 'AWAY',
  OFF_DUTY: 'OFF_DUTY'
};

export type DriverStatus = (typeof DriverStatus)[keyof typeof DriverStatus]


export const LoadStatus: {
  PENDING: 'PENDING',
  ASSIGNED: 'ASSIGNED',
  IN_TRANSIT: 'IN_TRANSIT',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

export type LoadStatus = (typeof LoadStatus)[keyof typeof LoadStatus]


export const LocationType: {
  YARD: 'YARD',
  TERMINAL: 'TERMINAL',
  SHOP: 'SHOP',
  CUSTOMER_SITE: 'CUSTOMER_SITE',
  DROP_YARD: 'DROP_YARD'
};

export type LocationType = (typeof LocationType)[keyof typeof LocationType]


export const DocumentType: {
  VEHICLE_TITLE: 'VEHICLE_TITLE',
  LEASE_AGREEMENT: 'LEASE_AGREEMENT',
  REGISTRATION: 'REGISTRATION',
  INSURANCE_CERTIFICATE: 'INSURANCE_CERTIFICATE',
  INSPECTION_REPORT: 'INSPECTION_REPORT'
};

export type DocumentType = (typeof DocumentType)[keyof typeof DocumentType]

}

export type TransmissionType = $Enums.TransmissionType

export const TransmissionType: typeof $Enums.TransmissionType

export type OwnershipType = $Enums.OwnershipType

export const OwnershipType: typeof $Enums.OwnershipType

export type TruckStatus = $Enums.TruckStatus

export const TruckStatus: typeof $Enums.TruckStatus

export type DistanceUnit = $Enums.DistanceUnit

export const DistanceUnit: typeof $Enums.DistanceUnit

export type TrailerStatus = $Enums.TrailerStatus

export const TrailerStatus: typeof $Enums.TrailerStatus

export type DriverStatus = $Enums.DriverStatus

export const DriverStatus: typeof $Enums.DriverStatus

export type LoadStatus = $Enums.LoadStatus

export const LoadStatus: typeof $Enums.LoadStatus

export type LocationType = $Enums.LocationType

export const LocationType: typeof $Enums.LocationType

export type DocumentType = $Enums.DocumentType

export const DocumentType: typeof $Enums.DocumentType

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Trucks
 * const trucks = await prisma.truck.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Trucks
   * const trucks = await prisma.truck.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.truck`: Exposes CRUD operations for the **Truck** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Trucks
    * const trucks = await prisma.truck.findMany()
    * ```
    */
  get truck(): Prisma.TruckDelegate<ExtArgs>;

  /**
   * `prisma.trailer`: Exposes CRUD operations for the **Trailer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Trailers
    * const trailers = await prisma.trailer.findMany()
    * ```
    */
  get trailer(): Prisma.TrailerDelegate<ExtArgs>;

  /**
   * `prisma.driver`: Exposes CRUD operations for the **Driver** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Drivers
    * const drivers = await prisma.driver.findMany()
    * ```
    */
  get driver(): Prisma.DriverDelegate<ExtArgs>;

  /**
   * `prisma.load`: Exposes CRUD operations for the **Load** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Loads
    * const loads = await prisma.load.findMany()
    * ```
    */
  get load(): Prisma.LoadDelegate<ExtArgs>;

  /**
   * `prisma.location`: Exposes CRUD operations for the **Location** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Locations
    * const locations = await prisma.location.findMany()
    * ```
    */
  get location(): Prisma.LocationDelegate<ExtArgs>;

  /**
   * `prisma.truckDocument`: Exposes CRUD operations for the **TruckDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TruckDocuments
    * const truckDocuments = await prisma.truckDocument.findMany()
    * ```
    */
  get truckDocument(): Prisma.TruckDocumentDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Truck: 'Truck',
    Trailer: 'Trailer',
    Driver: 'Driver',
    Load: 'Load',
    Location: 'Location',
    TruckDocument: 'TruckDocument'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "truck" | "trailer" | "driver" | "load" | "location" | "truckDocument"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Truck: {
        payload: Prisma.$TruckPayload<ExtArgs>
        fields: Prisma.TruckFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TruckFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TruckFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>
          }
          findFirst: {
            args: Prisma.TruckFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TruckFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>
          }
          findMany: {
            args: Prisma.TruckFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>[]
          }
          create: {
            args: Prisma.TruckCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>
          }
          createMany: {
            args: Prisma.TruckCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TruckCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>[]
          }
          delete: {
            args: Prisma.TruckDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>
          }
          update: {
            args: Prisma.TruckUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>
          }
          deleteMany: {
            args: Prisma.TruckDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TruckUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TruckUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckPayload>
          }
          aggregate: {
            args: Prisma.TruckAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTruck>
          }
          groupBy: {
            args: Prisma.TruckGroupByArgs<ExtArgs>
            result: $Utils.Optional<TruckGroupByOutputType>[]
          }
          count: {
            args: Prisma.TruckCountArgs<ExtArgs>
            result: $Utils.Optional<TruckCountAggregateOutputType> | number
          }
        }
      }
      Trailer: {
        payload: Prisma.$TrailerPayload<ExtArgs>
        fields: Prisma.TrailerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TrailerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TrailerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>
          }
          findFirst: {
            args: Prisma.TrailerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TrailerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>
          }
          findMany: {
            args: Prisma.TrailerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>[]
          }
          create: {
            args: Prisma.TrailerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>
          }
          createMany: {
            args: Prisma.TrailerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TrailerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>[]
          }
          delete: {
            args: Prisma.TrailerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>
          }
          update: {
            args: Prisma.TrailerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>
          }
          deleteMany: {
            args: Prisma.TrailerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TrailerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TrailerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrailerPayload>
          }
          aggregate: {
            args: Prisma.TrailerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTrailer>
          }
          groupBy: {
            args: Prisma.TrailerGroupByArgs<ExtArgs>
            result: $Utils.Optional<TrailerGroupByOutputType>[]
          }
          count: {
            args: Prisma.TrailerCountArgs<ExtArgs>
            result: $Utils.Optional<TrailerCountAggregateOutputType> | number
          }
        }
      }
      Driver: {
        payload: Prisma.$DriverPayload<ExtArgs>
        fields: Prisma.DriverFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DriverFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DriverFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          findFirst: {
            args: Prisma.DriverFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DriverFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          findMany: {
            args: Prisma.DriverFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>[]
          }
          create: {
            args: Prisma.DriverCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          createMany: {
            args: Prisma.DriverCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DriverCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>[]
          }
          delete: {
            args: Prisma.DriverDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          update: {
            args: Prisma.DriverUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          deleteMany: {
            args: Prisma.DriverDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DriverUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DriverUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DriverPayload>
          }
          aggregate: {
            args: Prisma.DriverAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDriver>
          }
          groupBy: {
            args: Prisma.DriverGroupByArgs<ExtArgs>
            result: $Utils.Optional<DriverGroupByOutputType>[]
          }
          count: {
            args: Prisma.DriverCountArgs<ExtArgs>
            result: $Utils.Optional<DriverCountAggregateOutputType> | number
          }
        }
      }
      Load: {
        payload: Prisma.$LoadPayload<ExtArgs>
        fields: Prisma.LoadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LoadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LoadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>
          }
          findFirst: {
            args: Prisma.LoadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LoadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>
          }
          findMany: {
            args: Prisma.LoadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>[]
          }
          create: {
            args: Prisma.LoadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>
          }
          createMany: {
            args: Prisma.LoadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LoadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>[]
          }
          delete: {
            args: Prisma.LoadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>
          }
          update: {
            args: Prisma.LoadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>
          }
          deleteMany: {
            args: Prisma.LoadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LoadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LoadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoadPayload>
          }
          aggregate: {
            args: Prisma.LoadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLoad>
          }
          groupBy: {
            args: Prisma.LoadGroupByArgs<ExtArgs>
            result: $Utils.Optional<LoadGroupByOutputType>[]
          }
          count: {
            args: Prisma.LoadCountArgs<ExtArgs>
            result: $Utils.Optional<LoadCountAggregateOutputType> | number
          }
        }
      }
      Location: {
        payload: Prisma.$LocationPayload<ExtArgs>
        fields: Prisma.LocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findFirst: {
            args: Prisma.LocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findMany: {
            args: Prisma.LocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          create: {
            args: Prisma.LocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          createMany: {
            args: Prisma.LocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          delete: {
            args: Prisma.LocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          update: {
            args: Prisma.LocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          deleteMany: {
            args: Prisma.LocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          aggregate: {
            args: Prisma.LocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocation>
          }
          groupBy: {
            args: Prisma.LocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocationCountArgs<ExtArgs>
            result: $Utils.Optional<LocationCountAggregateOutputType> | number
          }
        }
      }
      TruckDocument: {
        payload: Prisma.$TruckDocumentPayload<ExtArgs>
        fields: Prisma.TruckDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TruckDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TruckDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>
          }
          findFirst: {
            args: Prisma.TruckDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TruckDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>
          }
          findMany: {
            args: Prisma.TruckDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>[]
          }
          create: {
            args: Prisma.TruckDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>
          }
          createMany: {
            args: Prisma.TruckDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TruckDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>[]
          }
          delete: {
            args: Prisma.TruckDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>
          }
          update: {
            args: Prisma.TruckDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>
          }
          deleteMany: {
            args: Prisma.TruckDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TruckDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TruckDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TruckDocumentPayload>
          }
          aggregate: {
            args: Prisma.TruckDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTruckDocument>
          }
          groupBy: {
            args: Prisma.TruckDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<TruckDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.TruckDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<TruckDocumentCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type TruckCountOutputType
   */

  export type TruckCountOutputType = {
    documents: number
  }

  export type TruckCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | TruckCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes
  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckCountOutputType
     */
    select?: TruckCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TruckCountOutputType without action
   */
  export type TruckCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TruckDocumentWhereInput
  }


  /**
   * Count Type DriverCountOutputType
   */

  export type DriverCountOutputType = {
    assignedTrucks: number
  }

  export type DriverCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedTrucks?: boolean | DriverCountOutputTypeCountAssignedTrucksArgs
  }

  // Custom InputTypes
  /**
   * DriverCountOutputType without action
   */
  export type DriverCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DriverCountOutputType
     */
    select?: DriverCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DriverCountOutputType without action
   */
  export type DriverCountOutputTypeCountAssignedTrucksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TruckWhereInput
  }


  /**
   * Count Type LoadCountOutputType
   */

  export type LoadCountOutputType = {
    assignedTrucks: number
    assignedTrailers: number
    assignedDrivers: number
  }

  export type LoadCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedTrucks?: boolean | LoadCountOutputTypeCountAssignedTrucksArgs
    assignedTrailers?: boolean | LoadCountOutputTypeCountAssignedTrailersArgs
    assignedDrivers?: boolean | LoadCountOutputTypeCountAssignedDriversArgs
  }

  // Custom InputTypes
  /**
   * LoadCountOutputType without action
   */
  export type LoadCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoadCountOutputType
     */
    select?: LoadCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LoadCountOutputType without action
   */
  export type LoadCountOutputTypeCountAssignedTrucksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TruckWhereInput
  }

  /**
   * LoadCountOutputType without action
   */
  export type LoadCountOutputTypeCountAssignedTrailersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrailerWhereInput
  }

  /**
   * LoadCountOutputType without action
   */
  export type LoadCountOutputTypeCountAssignedDriversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverWhereInput
  }


  /**
   * Count Type LocationCountOutputType
   */

  export type LocationCountOutputType = {
    assignedTrucks: number
    assignedTrailers: number
  }

  export type LocationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedTrucks?: boolean | LocationCountOutputTypeCountAssignedTrucksArgs
    assignedTrailers?: boolean | LocationCountOutputTypeCountAssignedTrailersArgs
  }

  // Custom InputTypes
  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationCountOutputType
     */
    select?: LocationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountAssignedTrucksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TruckWhereInput
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountAssignedTrailersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrailerWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Truck
   */

  export type AggregateTruck = {
    _count: TruckCountAggregateOutputType | null
    _avg: TruckAvgAggregateOutputType | null
    _sum: TruckSumAggregateOutputType | null
    _min: TruckMinAggregateOutputType | null
    _max: TruckMaxAggregateOutputType | null
  }

  export type TruckAvgAggregateOutputType = {
    year: number | null
    horsepower: number | null
    numGears: number | null
    purchasePrice: Decimal | null
    gvwr: number | null
    gcwr: number | null
    odometer: number | null
    engineHours: number | null
  }

  export type TruckSumAggregateOutputType = {
    year: number | null
    horsepower: number | null
    numGears: number | null
    purchasePrice: Decimal | null
    gvwr: number | null
    gcwr: number | null
    odometer: number | null
    engineHours: number | null
  }

  export type TruckMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    vehicleId: string | null
    name: string | null
    vin: string | null
    make: string | null
    model: string | null
    year: number | null
    color: string | null
    engineMake: string | null
    engineModel: string | null
    horsepower: number | null
    transmissionType: $Enums.TransmissionType | null
    numGears: number | null
    ownershipType: $Enums.OwnershipType | null
    purchaseDate: Date | null
    leaseEndDate: Date | null
    purchasePrice: Decimal | null
    licensePlate: string | null
    issuingState: string | null
    registrationExp: Date | null
    insurancePolicy: string | null
    insuranceExp: Date | null
    jurisdiction: string | null
    gvwr: number | null
    gcwr: number | null
    dotNumber: string | null
    status: $Enums.TruckStatus | null
    currentLocation: string | null
    assignedYardId: string | null
    odometer: number | null
    odometerUnit: $Enums.DistanceUnit | null
    engineHours: number | null
    currentDriverId: string | null
    attachedTrailerId: string | null
    currentLoadId: string | null
    lastUpdated: Date | null
  }

  export type TruckMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    vehicleId: string | null
    name: string | null
    vin: string | null
    make: string | null
    model: string | null
    year: number | null
    color: string | null
    engineMake: string | null
    engineModel: string | null
    horsepower: number | null
    transmissionType: $Enums.TransmissionType | null
    numGears: number | null
    ownershipType: $Enums.OwnershipType | null
    purchaseDate: Date | null
    leaseEndDate: Date | null
    purchasePrice: Decimal | null
    licensePlate: string | null
    issuingState: string | null
    registrationExp: Date | null
    insurancePolicy: string | null
    insuranceExp: Date | null
    jurisdiction: string | null
    gvwr: number | null
    gcwr: number | null
    dotNumber: string | null
    status: $Enums.TruckStatus | null
    currentLocation: string | null
    assignedYardId: string | null
    odometer: number | null
    odometerUnit: $Enums.DistanceUnit | null
    engineHours: number | null
    currentDriverId: string | null
    attachedTrailerId: string | null
    currentLoadId: string | null
    lastUpdated: Date | null
  }

  export type TruckCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    vehicleId: number
    name: number
    vin: number
    make: number
    model: number
    year: number
    color: number
    engineMake: number
    engineModel: number
    horsepower: number
    transmissionType: number
    numGears: number
    ownershipType: number
    purchaseDate: number
    leaseEndDate: number
    purchasePrice: number
    licensePlate: number
    issuingState: number
    registrationExp: number
    insurancePolicy: number
    insuranceExp: number
    jurisdiction: number
    gvwr: number
    gcwr: number
    dotNumber: number
    status: number
    currentLocation: number
    assignedYardId: number
    odometer: number
    odometerUnit: number
    engineHours: number
    currentDriverId: number
    attachedTrailerId: number
    currentLoadId: number
    lastUpdated: number
    _all: number
  }


  export type TruckAvgAggregateInputType = {
    year?: true
    horsepower?: true
    numGears?: true
    purchasePrice?: true
    gvwr?: true
    gcwr?: true
    odometer?: true
    engineHours?: true
  }

  export type TruckSumAggregateInputType = {
    year?: true
    horsepower?: true
    numGears?: true
    purchasePrice?: true
    gvwr?: true
    gcwr?: true
    odometer?: true
    engineHours?: true
  }

  export type TruckMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    vehicleId?: true
    name?: true
    vin?: true
    make?: true
    model?: true
    year?: true
    color?: true
    engineMake?: true
    engineModel?: true
    horsepower?: true
    transmissionType?: true
    numGears?: true
    ownershipType?: true
    purchaseDate?: true
    leaseEndDate?: true
    purchasePrice?: true
    licensePlate?: true
    issuingState?: true
    registrationExp?: true
    insurancePolicy?: true
    insuranceExp?: true
    jurisdiction?: true
    gvwr?: true
    gcwr?: true
    dotNumber?: true
    status?: true
    currentLocation?: true
    assignedYardId?: true
    odometer?: true
    odometerUnit?: true
    engineHours?: true
    currentDriverId?: true
    attachedTrailerId?: true
    currentLoadId?: true
    lastUpdated?: true
  }

  export type TruckMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    vehicleId?: true
    name?: true
    vin?: true
    make?: true
    model?: true
    year?: true
    color?: true
    engineMake?: true
    engineModel?: true
    horsepower?: true
    transmissionType?: true
    numGears?: true
    ownershipType?: true
    purchaseDate?: true
    leaseEndDate?: true
    purchasePrice?: true
    licensePlate?: true
    issuingState?: true
    registrationExp?: true
    insurancePolicy?: true
    insuranceExp?: true
    jurisdiction?: true
    gvwr?: true
    gcwr?: true
    dotNumber?: true
    status?: true
    currentLocation?: true
    assignedYardId?: true
    odometer?: true
    odometerUnit?: true
    engineHours?: true
    currentDriverId?: true
    attachedTrailerId?: true
    currentLoadId?: true
    lastUpdated?: true
  }

  export type TruckCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    vehicleId?: true
    name?: true
    vin?: true
    make?: true
    model?: true
    year?: true
    color?: true
    engineMake?: true
    engineModel?: true
    horsepower?: true
    transmissionType?: true
    numGears?: true
    ownershipType?: true
    purchaseDate?: true
    leaseEndDate?: true
    purchasePrice?: true
    licensePlate?: true
    issuingState?: true
    registrationExp?: true
    insurancePolicy?: true
    insuranceExp?: true
    jurisdiction?: true
    gvwr?: true
    gcwr?: true
    dotNumber?: true
    status?: true
    currentLocation?: true
    assignedYardId?: true
    odometer?: true
    odometerUnit?: true
    engineHours?: true
    currentDriverId?: true
    attachedTrailerId?: true
    currentLoadId?: true
    lastUpdated?: true
    _all?: true
  }

  export type TruckAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Truck to aggregate.
     */
    where?: TruckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trucks to fetch.
     */
    orderBy?: TruckOrderByWithRelationInput | TruckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TruckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trucks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Trucks
    **/
    _count?: true | TruckCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TruckAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TruckSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TruckMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TruckMaxAggregateInputType
  }

  export type GetTruckAggregateType<T extends TruckAggregateArgs> = {
        [P in keyof T & keyof AggregateTruck]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTruck[P]>
      : GetScalarType<T[P], AggregateTruck[P]>
  }




  export type TruckGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TruckWhereInput
    orderBy?: TruckOrderByWithAggregationInput | TruckOrderByWithAggregationInput[]
    by: TruckScalarFieldEnum[] | TruckScalarFieldEnum
    having?: TruckScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TruckCountAggregateInputType | true
    _avg?: TruckAvgAggregateInputType
    _sum?: TruckSumAggregateInputType
    _min?: TruckMinAggregateInputType
    _max?: TruckMaxAggregateInputType
  }

  export type TruckGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    vehicleId: string
    name: string | null
    vin: string
    make: string
    model: string
    year: number
    color: string | null
    engineMake: string | null
    engineModel: string | null
    horsepower: number | null
    transmissionType: $Enums.TransmissionType
    numGears: number | null
    ownershipType: $Enums.OwnershipType
    purchaseDate: Date | null
    leaseEndDate: Date | null
    purchasePrice: Decimal | null
    licensePlate: string | null
    issuingState: string | null
    registrationExp: Date | null
    insurancePolicy: string | null
    insuranceExp: Date | null
    jurisdiction: string
    gvwr: number | null
    gcwr: number | null
    dotNumber: string | null
    status: $Enums.TruckStatus
    currentLocation: string | null
    assignedYardId: string | null
    odometer: number | null
    odometerUnit: $Enums.DistanceUnit
    engineHours: number | null
    currentDriverId: string | null
    attachedTrailerId: string | null
    currentLoadId: string | null
    lastUpdated: Date
    _count: TruckCountAggregateOutputType | null
    _avg: TruckAvgAggregateOutputType | null
    _sum: TruckSumAggregateOutputType | null
    _min: TruckMinAggregateOutputType | null
    _max: TruckMaxAggregateOutputType | null
  }

  type GetTruckGroupByPayload<T extends TruckGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TruckGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TruckGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TruckGroupByOutputType[P]>
            : GetScalarType<T[P], TruckGroupByOutputType[P]>
        }
      >
    >


  export type TruckSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    vehicleId?: boolean
    name?: boolean
    vin?: boolean
    make?: boolean
    model?: boolean
    year?: boolean
    color?: boolean
    engineMake?: boolean
    engineModel?: boolean
    horsepower?: boolean
    transmissionType?: boolean
    numGears?: boolean
    ownershipType?: boolean
    purchaseDate?: boolean
    leaseEndDate?: boolean
    purchasePrice?: boolean
    licensePlate?: boolean
    issuingState?: boolean
    registrationExp?: boolean
    insurancePolicy?: boolean
    insuranceExp?: boolean
    jurisdiction?: boolean
    gvwr?: boolean
    gcwr?: boolean
    dotNumber?: boolean
    status?: boolean
    currentLocation?: boolean
    assignedYardId?: boolean
    odometer?: boolean
    odometerUnit?: boolean
    engineHours?: boolean
    currentDriverId?: boolean
    attachedTrailerId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
    assignedYard?: boolean | Truck$assignedYardArgs<ExtArgs>
    currentDriver?: boolean | Truck$currentDriverArgs<ExtArgs>
    attachedTrailer?: boolean | Truck$attachedTrailerArgs<ExtArgs>
    currentLoad?: boolean | Truck$currentLoadArgs<ExtArgs>
    documents?: boolean | Truck$documentsArgs<ExtArgs>
    _count?: boolean | TruckCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["truck"]>

  export type TruckSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    vehicleId?: boolean
    name?: boolean
    vin?: boolean
    make?: boolean
    model?: boolean
    year?: boolean
    color?: boolean
    engineMake?: boolean
    engineModel?: boolean
    horsepower?: boolean
    transmissionType?: boolean
    numGears?: boolean
    ownershipType?: boolean
    purchaseDate?: boolean
    leaseEndDate?: boolean
    purchasePrice?: boolean
    licensePlate?: boolean
    issuingState?: boolean
    registrationExp?: boolean
    insurancePolicy?: boolean
    insuranceExp?: boolean
    jurisdiction?: boolean
    gvwr?: boolean
    gcwr?: boolean
    dotNumber?: boolean
    status?: boolean
    currentLocation?: boolean
    assignedYardId?: boolean
    odometer?: boolean
    odometerUnit?: boolean
    engineHours?: boolean
    currentDriverId?: boolean
    attachedTrailerId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
    assignedYard?: boolean | Truck$assignedYardArgs<ExtArgs>
    currentDriver?: boolean | Truck$currentDriverArgs<ExtArgs>
    currentLoad?: boolean | Truck$currentLoadArgs<ExtArgs>
  }, ExtArgs["result"]["truck"]>

  export type TruckSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    vehicleId?: boolean
    name?: boolean
    vin?: boolean
    make?: boolean
    model?: boolean
    year?: boolean
    color?: boolean
    engineMake?: boolean
    engineModel?: boolean
    horsepower?: boolean
    transmissionType?: boolean
    numGears?: boolean
    ownershipType?: boolean
    purchaseDate?: boolean
    leaseEndDate?: boolean
    purchasePrice?: boolean
    licensePlate?: boolean
    issuingState?: boolean
    registrationExp?: boolean
    insurancePolicy?: boolean
    insuranceExp?: boolean
    jurisdiction?: boolean
    gvwr?: boolean
    gcwr?: boolean
    dotNumber?: boolean
    status?: boolean
    currentLocation?: boolean
    assignedYardId?: boolean
    odometer?: boolean
    odometerUnit?: boolean
    engineHours?: boolean
    currentDriverId?: boolean
    attachedTrailerId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
  }

  export type TruckInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedYard?: boolean | Truck$assignedYardArgs<ExtArgs>
    currentDriver?: boolean | Truck$currentDriverArgs<ExtArgs>
    attachedTrailer?: boolean | Truck$attachedTrailerArgs<ExtArgs>
    currentLoad?: boolean | Truck$currentLoadArgs<ExtArgs>
    documents?: boolean | Truck$documentsArgs<ExtArgs>
    _count?: boolean | TruckCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TruckIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedYard?: boolean | Truck$assignedYardArgs<ExtArgs>
    currentDriver?: boolean | Truck$currentDriverArgs<ExtArgs>
    currentLoad?: boolean | Truck$currentLoadArgs<ExtArgs>
  }

  export type $TruckPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Truck"
    objects: {
      assignedYard: Prisma.$LocationPayload<ExtArgs> | null
      currentDriver: Prisma.$DriverPayload<ExtArgs> | null
      attachedTrailer: Prisma.$TrailerPayload<ExtArgs> | null
      currentLoad: Prisma.$LoadPayload<ExtArgs> | null
      documents: Prisma.$TruckDocumentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      vehicleId: string
      name: string | null
      vin: string
      make: string
      model: string
      year: number
      color: string | null
      engineMake: string | null
      engineModel: string | null
      horsepower: number | null
      transmissionType: $Enums.TransmissionType
      numGears: number | null
      ownershipType: $Enums.OwnershipType
      purchaseDate: Date | null
      leaseEndDate: Date | null
      purchasePrice: Prisma.Decimal | null
      licensePlate: string | null
      issuingState: string | null
      registrationExp: Date | null
      insurancePolicy: string | null
      insuranceExp: Date | null
      jurisdiction: string
      gvwr: number | null
      gcwr: number | null
      dotNumber: string | null
      status: $Enums.TruckStatus
      currentLocation: string | null
      assignedYardId: string | null
      odometer: number | null
      odometerUnit: $Enums.DistanceUnit
      engineHours: number | null
      currentDriverId: string | null
      attachedTrailerId: string | null
      currentLoadId: string | null
      lastUpdated: Date
    }, ExtArgs["result"]["truck"]>
    composites: {}
  }

  type TruckGetPayload<S extends boolean | null | undefined | TruckDefaultArgs> = $Result.GetResult<Prisma.$TruckPayload, S>

  type TruckCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TruckFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TruckCountAggregateInputType | true
    }

  export interface TruckDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Truck'], meta: { name: 'Truck' } }
    /**
     * Find zero or one Truck that matches the filter.
     * @param {TruckFindUniqueArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TruckFindUniqueArgs>(args: SelectSubset<T, TruckFindUniqueArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Truck that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TruckFindUniqueOrThrowArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TruckFindUniqueOrThrowArgs>(args: SelectSubset<T, TruckFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Truck that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckFindFirstArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TruckFindFirstArgs>(args?: SelectSubset<T, TruckFindFirstArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Truck that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckFindFirstOrThrowArgs} args - Arguments to find a Truck
     * @example
     * // Get one Truck
     * const truck = await prisma.truck.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TruckFindFirstOrThrowArgs>(args?: SelectSubset<T, TruckFindFirstOrThrowArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Trucks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Trucks
     * const trucks = await prisma.truck.findMany()
     * 
     * // Get first 10 Trucks
     * const trucks = await prisma.truck.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const truckWithIdOnly = await prisma.truck.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TruckFindManyArgs>(args?: SelectSubset<T, TruckFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Truck.
     * @param {TruckCreateArgs} args - Arguments to create a Truck.
     * @example
     * // Create one Truck
     * const Truck = await prisma.truck.create({
     *   data: {
     *     // ... data to create a Truck
     *   }
     * })
     * 
     */
    create<T extends TruckCreateArgs>(args: SelectSubset<T, TruckCreateArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Trucks.
     * @param {TruckCreateManyArgs} args - Arguments to create many Trucks.
     * @example
     * // Create many Trucks
     * const truck = await prisma.truck.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TruckCreateManyArgs>(args?: SelectSubset<T, TruckCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Trucks and returns the data saved in the database.
     * @param {TruckCreateManyAndReturnArgs} args - Arguments to create many Trucks.
     * @example
     * // Create many Trucks
     * const truck = await prisma.truck.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Trucks and only return the `id`
     * const truckWithIdOnly = await prisma.truck.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TruckCreateManyAndReturnArgs>(args?: SelectSubset<T, TruckCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Truck.
     * @param {TruckDeleteArgs} args - Arguments to delete one Truck.
     * @example
     * // Delete one Truck
     * const Truck = await prisma.truck.delete({
     *   where: {
     *     // ... filter to delete one Truck
     *   }
     * })
     * 
     */
    delete<T extends TruckDeleteArgs>(args: SelectSubset<T, TruckDeleteArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Truck.
     * @param {TruckUpdateArgs} args - Arguments to update one Truck.
     * @example
     * // Update one Truck
     * const truck = await prisma.truck.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TruckUpdateArgs>(args: SelectSubset<T, TruckUpdateArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Trucks.
     * @param {TruckDeleteManyArgs} args - Arguments to filter Trucks to delete.
     * @example
     * // Delete a few Trucks
     * const { count } = await prisma.truck.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TruckDeleteManyArgs>(args?: SelectSubset<T, TruckDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trucks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Trucks
     * const truck = await prisma.truck.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TruckUpdateManyArgs>(args: SelectSubset<T, TruckUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Truck.
     * @param {TruckUpsertArgs} args - Arguments to update or create a Truck.
     * @example
     * // Update or create a Truck
     * const truck = await prisma.truck.upsert({
     *   create: {
     *     // ... data to create a Truck
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Truck we want to update
     *   }
     * })
     */
    upsert<T extends TruckUpsertArgs>(args: SelectSubset<T, TruckUpsertArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Trucks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckCountArgs} args - Arguments to filter Trucks to count.
     * @example
     * // Count the number of Trucks
     * const count = await prisma.truck.count({
     *   where: {
     *     // ... the filter for the Trucks we want to count
     *   }
     * })
    **/
    count<T extends TruckCountArgs>(
      args?: Subset<T, TruckCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TruckCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Truck.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TruckAggregateArgs>(args: Subset<T, TruckAggregateArgs>): Prisma.PrismaPromise<GetTruckAggregateType<T>>

    /**
     * Group by Truck.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TruckGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TruckGroupByArgs['orderBy'] }
        : { orderBy?: TruckGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TruckGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTruckGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Truck model
   */
  readonly fields: TruckFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Truck.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TruckClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignedYard<T extends Truck$assignedYardArgs<ExtArgs> = {}>(args?: Subset<T, Truck$assignedYardArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    currentDriver<T extends Truck$currentDriverArgs<ExtArgs> = {}>(args?: Subset<T, Truck$currentDriverArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    attachedTrailer<T extends Truck$attachedTrailerArgs<ExtArgs> = {}>(args?: Subset<T, Truck$attachedTrailerArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    currentLoad<T extends Truck$currentLoadArgs<ExtArgs> = {}>(args?: Subset<T, Truck$currentLoadArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    documents<T extends Truck$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Truck$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Truck model
   */ 
  interface TruckFieldRefs {
    readonly id: FieldRef<"Truck", 'String'>
    readonly createdAt: FieldRef<"Truck", 'DateTime'>
    readonly updatedAt: FieldRef<"Truck", 'DateTime'>
    readonly vehicleId: FieldRef<"Truck", 'String'>
    readonly name: FieldRef<"Truck", 'String'>
    readonly vin: FieldRef<"Truck", 'String'>
    readonly make: FieldRef<"Truck", 'String'>
    readonly model: FieldRef<"Truck", 'String'>
    readonly year: FieldRef<"Truck", 'Int'>
    readonly color: FieldRef<"Truck", 'String'>
    readonly engineMake: FieldRef<"Truck", 'String'>
    readonly engineModel: FieldRef<"Truck", 'String'>
    readonly horsepower: FieldRef<"Truck", 'Int'>
    readonly transmissionType: FieldRef<"Truck", 'TransmissionType'>
    readonly numGears: FieldRef<"Truck", 'Int'>
    readonly ownershipType: FieldRef<"Truck", 'OwnershipType'>
    readonly purchaseDate: FieldRef<"Truck", 'DateTime'>
    readonly leaseEndDate: FieldRef<"Truck", 'DateTime'>
    readonly purchasePrice: FieldRef<"Truck", 'Decimal'>
    readonly licensePlate: FieldRef<"Truck", 'String'>
    readonly issuingState: FieldRef<"Truck", 'String'>
    readonly registrationExp: FieldRef<"Truck", 'DateTime'>
    readonly insurancePolicy: FieldRef<"Truck", 'String'>
    readonly insuranceExp: FieldRef<"Truck", 'DateTime'>
    readonly jurisdiction: FieldRef<"Truck", 'String'>
    readonly gvwr: FieldRef<"Truck", 'Int'>
    readonly gcwr: FieldRef<"Truck", 'Int'>
    readonly dotNumber: FieldRef<"Truck", 'String'>
    readonly status: FieldRef<"Truck", 'TruckStatus'>
    readonly currentLocation: FieldRef<"Truck", 'String'>
    readonly assignedYardId: FieldRef<"Truck", 'String'>
    readonly odometer: FieldRef<"Truck", 'Int'>
    readonly odometerUnit: FieldRef<"Truck", 'DistanceUnit'>
    readonly engineHours: FieldRef<"Truck", 'Int'>
    readonly currentDriverId: FieldRef<"Truck", 'String'>
    readonly attachedTrailerId: FieldRef<"Truck", 'String'>
    readonly currentLoadId: FieldRef<"Truck", 'String'>
    readonly lastUpdated: FieldRef<"Truck", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Truck findUnique
   */
  export type TruckFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * Filter, which Truck to fetch.
     */
    where: TruckWhereUniqueInput
  }

  /**
   * Truck findUniqueOrThrow
   */
  export type TruckFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * Filter, which Truck to fetch.
     */
    where: TruckWhereUniqueInput
  }

  /**
   * Truck findFirst
   */
  export type TruckFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * Filter, which Truck to fetch.
     */
    where?: TruckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trucks to fetch.
     */
    orderBy?: TruckOrderByWithRelationInput | TruckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Trucks.
     */
    cursor?: TruckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trucks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Trucks.
     */
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * Truck findFirstOrThrow
   */
  export type TruckFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * Filter, which Truck to fetch.
     */
    where?: TruckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trucks to fetch.
     */
    orderBy?: TruckOrderByWithRelationInput | TruckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Trucks.
     */
    cursor?: TruckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trucks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Trucks.
     */
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * Truck findMany
   */
  export type TruckFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * Filter, which Trucks to fetch.
     */
    where?: TruckWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trucks to fetch.
     */
    orderBy?: TruckOrderByWithRelationInput | TruckOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Trucks.
     */
    cursor?: TruckWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trucks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trucks.
     */
    skip?: number
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * Truck create
   */
  export type TruckCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * The data needed to create a Truck.
     */
    data: XOR<TruckCreateInput, TruckUncheckedCreateInput>
  }

  /**
   * Truck createMany
   */
  export type TruckCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Trucks.
     */
    data: TruckCreateManyInput | TruckCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Truck createManyAndReturn
   */
  export type TruckCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Trucks.
     */
    data: TruckCreateManyInput | TruckCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Truck update
   */
  export type TruckUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * The data needed to update a Truck.
     */
    data: XOR<TruckUpdateInput, TruckUncheckedUpdateInput>
    /**
     * Choose, which Truck to update.
     */
    where: TruckWhereUniqueInput
  }

  /**
   * Truck updateMany
   */
  export type TruckUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Trucks.
     */
    data: XOR<TruckUpdateManyMutationInput, TruckUncheckedUpdateManyInput>
    /**
     * Filter which Trucks to update
     */
    where?: TruckWhereInput
  }

  /**
   * Truck upsert
   */
  export type TruckUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * The filter to search for the Truck to update in case it exists.
     */
    where: TruckWhereUniqueInput
    /**
     * In case the Truck found by the `where` argument doesn't exist, create a new Truck with this data.
     */
    create: XOR<TruckCreateInput, TruckUncheckedCreateInput>
    /**
     * In case the Truck was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TruckUpdateInput, TruckUncheckedUpdateInput>
  }

  /**
   * Truck delete
   */
  export type TruckDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    /**
     * Filter which Truck to delete.
     */
    where: TruckWhereUniqueInput
  }

  /**
   * Truck deleteMany
   */
  export type TruckDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Trucks to delete
     */
    where?: TruckWhereInput
  }

  /**
   * Truck.assignedYard
   */
  export type Truck$assignedYardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    where?: LocationWhereInput
  }

  /**
   * Truck.currentDriver
   */
  export type Truck$currentDriverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    where?: DriverWhereInput
  }

  /**
   * Truck.attachedTrailer
   */
  export type Truck$attachedTrailerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    where?: TrailerWhereInput
  }

  /**
   * Truck.currentLoad
   */
  export type Truck$currentLoadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    where?: LoadWhereInput
  }

  /**
   * Truck.documents
   */
  export type Truck$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    where?: TruckDocumentWhereInput
    orderBy?: TruckDocumentOrderByWithRelationInput | TruckDocumentOrderByWithRelationInput[]
    cursor?: TruckDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TruckDocumentScalarFieldEnum | TruckDocumentScalarFieldEnum[]
  }

  /**
   * Truck without action
   */
  export type TruckDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
  }


  /**
   * Model Trailer
   */

  export type AggregateTrailer = {
    _count: TrailerCountAggregateOutputType | null
    _avg: TrailerAvgAggregateOutputType | null
    _sum: TrailerSumAggregateOutputType | null
    _min: TrailerMinAggregateOutputType | null
    _max: TrailerMaxAggregateOutputType | null
  }

  export type TrailerAvgAggregateOutputType = {
    year: number | null
    length: number | null
    capacity: number | null
    axleCount: number | null
  }

  export type TrailerSumAggregateOutputType = {
    year: number | null
    length: number | null
    capacity: number | null
    axleCount: number | null
  }

  export type TrailerMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    trailerId: string | null
    name: string | null
    vin: string | null
    year: number | null
    trailerType: string | null
    length: number | null
    capacity: number | null
    axleCount: number | null
    status: $Enums.TrailerStatus | null
    currentLocation: string | null
    assignedYardId: string | null
    attachedTruckId: string | null
    currentLoadId: string | null
    lastUpdated: Date | null
  }

  export type TrailerMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    trailerId: string | null
    name: string | null
    vin: string | null
    year: number | null
    trailerType: string | null
    length: number | null
    capacity: number | null
    axleCount: number | null
    status: $Enums.TrailerStatus | null
    currentLocation: string | null
    assignedYardId: string | null
    attachedTruckId: string | null
    currentLoadId: string | null
    lastUpdated: Date | null
  }

  export type TrailerCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    trailerId: number
    name: number
    vin: number
    year: number
    trailerType: number
    length: number
    capacity: number
    axleCount: number
    status: number
    currentLocation: number
    assignedYardId: number
    attachedTruckId: number
    currentLoadId: number
    lastUpdated: number
    _all: number
  }


  export type TrailerAvgAggregateInputType = {
    year?: true
    length?: true
    capacity?: true
    axleCount?: true
  }

  export type TrailerSumAggregateInputType = {
    year?: true
    length?: true
    capacity?: true
    axleCount?: true
  }

  export type TrailerMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    trailerId?: true
    name?: true
    vin?: true
    year?: true
    trailerType?: true
    length?: true
    capacity?: true
    axleCount?: true
    status?: true
    currentLocation?: true
    assignedYardId?: true
    attachedTruckId?: true
    currentLoadId?: true
    lastUpdated?: true
  }

  export type TrailerMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    trailerId?: true
    name?: true
    vin?: true
    year?: true
    trailerType?: true
    length?: true
    capacity?: true
    axleCount?: true
    status?: true
    currentLocation?: true
    assignedYardId?: true
    attachedTruckId?: true
    currentLoadId?: true
    lastUpdated?: true
  }

  export type TrailerCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    trailerId?: true
    name?: true
    vin?: true
    year?: true
    trailerType?: true
    length?: true
    capacity?: true
    axleCount?: true
    status?: true
    currentLocation?: true
    assignedYardId?: true
    attachedTruckId?: true
    currentLoadId?: true
    lastUpdated?: true
    _all?: true
  }

  export type TrailerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Trailer to aggregate.
     */
    where?: TrailerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trailers to fetch.
     */
    orderBy?: TrailerOrderByWithRelationInput | TrailerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TrailerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trailers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trailers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Trailers
    **/
    _count?: true | TrailerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TrailerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TrailerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TrailerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TrailerMaxAggregateInputType
  }

  export type GetTrailerAggregateType<T extends TrailerAggregateArgs> = {
        [P in keyof T & keyof AggregateTrailer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrailer[P]>
      : GetScalarType<T[P], AggregateTrailer[P]>
  }




  export type TrailerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrailerWhereInput
    orderBy?: TrailerOrderByWithAggregationInput | TrailerOrderByWithAggregationInput[]
    by: TrailerScalarFieldEnum[] | TrailerScalarFieldEnum
    having?: TrailerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TrailerCountAggregateInputType | true
    _avg?: TrailerAvgAggregateInputType
    _sum?: TrailerSumAggregateInputType
    _min?: TrailerMinAggregateInputType
    _max?: TrailerMaxAggregateInputType
  }

  export type TrailerGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    trailerId: string
    name: string | null
    vin: string
    year: number | null
    trailerType: string | null
    length: number | null
    capacity: number | null
    axleCount: number | null
    status: $Enums.TrailerStatus
    currentLocation: string | null
    assignedYardId: string | null
    attachedTruckId: string | null
    currentLoadId: string | null
    lastUpdated: Date
    _count: TrailerCountAggregateOutputType | null
    _avg: TrailerAvgAggregateOutputType | null
    _sum: TrailerSumAggregateOutputType | null
    _min: TrailerMinAggregateOutputType | null
    _max: TrailerMaxAggregateOutputType | null
  }

  type GetTrailerGroupByPayload<T extends TrailerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TrailerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TrailerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TrailerGroupByOutputType[P]>
            : GetScalarType<T[P], TrailerGroupByOutputType[P]>
        }
      >
    >


  export type TrailerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    trailerId?: boolean
    name?: boolean
    vin?: boolean
    year?: boolean
    trailerType?: boolean
    length?: boolean
    capacity?: boolean
    axleCount?: boolean
    status?: boolean
    currentLocation?: boolean
    assignedYardId?: boolean
    attachedTruckId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
    assignedYard?: boolean | Trailer$assignedYardArgs<ExtArgs>
    attachedTruck?: boolean | Trailer$attachedTruckArgs<ExtArgs>
    currentLoad?: boolean | Trailer$currentLoadArgs<ExtArgs>
  }, ExtArgs["result"]["trailer"]>

  export type TrailerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    trailerId?: boolean
    name?: boolean
    vin?: boolean
    year?: boolean
    trailerType?: boolean
    length?: boolean
    capacity?: boolean
    axleCount?: boolean
    status?: boolean
    currentLocation?: boolean
    assignedYardId?: boolean
    attachedTruckId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
    assignedYard?: boolean | Trailer$assignedYardArgs<ExtArgs>
    attachedTruck?: boolean | Trailer$attachedTruckArgs<ExtArgs>
    currentLoad?: boolean | Trailer$currentLoadArgs<ExtArgs>
  }, ExtArgs["result"]["trailer"]>

  export type TrailerSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    trailerId?: boolean
    name?: boolean
    vin?: boolean
    year?: boolean
    trailerType?: boolean
    length?: boolean
    capacity?: boolean
    axleCount?: boolean
    status?: boolean
    currentLocation?: boolean
    assignedYardId?: boolean
    attachedTruckId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
  }

  export type TrailerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedYard?: boolean | Trailer$assignedYardArgs<ExtArgs>
    attachedTruck?: boolean | Trailer$attachedTruckArgs<ExtArgs>
    currentLoad?: boolean | Trailer$currentLoadArgs<ExtArgs>
  }
  export type TrailerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedYard?: boolean | Trailer$assignedYardArgs<ExtArgs>
    attachedTruck?: boolean | Trailer$attachedTruckArgs<ExtArgs>
    currentLoad?: boolean | Trailer$currentLoadArgs<ExtArgs>
  }

  export type $TrailerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Trailer"
    objects: {
      assignedYard: Prisma.$LocationPayload<ExtArgs> | null
      attachedTruck: Prisma.$TruckPayload<ExtArgs> | null
      currentLoad: Prisma.$LoadPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      trailerId: string
      name: string | null
      vin: string
      year: number | null
      trailerType: string | null
      length: number | null
      capacity: number | null
      axleCount: number | null
      status: $Enums.TrailerStatus
      currentLocation: string | null
      assignedYardId: string | null
      attachedTruckId: string | null
      currentLoadId: string | null
      lastUpdated: Date
    }, ExtArgs["result"]["trailer"]>
    composites: {}
  }

  type TrailerGetPayload<S extends boolean | null | undefined | TrailerDefaultArgs> = $Result.GetResult<Prisma.$TrailerPayload, S>

  type TrailerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TrailerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TrailerCountAggregateInputType | true
    }

  export interface TrailerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Trailer'], meta: { name: 'Trailer' } }
    /**
     * Find zero or one Trailer that matches the filter.
     * @param {TrailerFindUniqueArgs} args - Arguments to find a Trailer
     * @example
     * // Get one Trailer
     * const trailer = await prisma.trailer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TrailerFindUniqueArgs>(args: SelectSubset<T, TrailerFindUniqueArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Trailer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TrailerFindUniqueOrThrowArgs} args - Arguments to find a Trailer
     * @example
     * // Get one Trailer
     * const trailer = await prisma.trailer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TrailerFindUniqueOrThrowArgs>(args: SelectSubset<T, TrailerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Trailer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrailerFindFirstArgs} args - Arguments to find a Trailer
     * @example
     * // Get one Trailer
     * const trailer = await prisma.trailer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TrailerFindFirstArgs>(args?: SelectSubset<T, TrailerFindFirstArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Trailer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrailerFindFirstOrThrowArgs} args - Arguments to find a Trailer
     * @example
     * // Get one Trailer
     * const trailer = await prisma.trailer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TrailerFindFirstOrThrowArgs>(args?: SelectSubset<T, TrailerFindFirstOrThrowArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Trailers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrailerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Trailers
     * const trailers = await prisma.trailer.findMany()
     * 
     * // Get first 10 Trailers
     * const trailers = await prisma.trailer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const trailerWithIdOnly = await prisma.trailer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TrailerFindManyArgs>(args?: SelectSubset<T, TrailerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Trailer.
     * @param {TrailerCreateArgs} args - Arguments to create a Trailer.
     * @example
     * // Create one Trailer
     * const Trailer = await prisma.trailer.create({
     *   data: {
     *     // ... data to create a Trailer
     *   }
     * })
     * 
     */
    create<T extends TrailerCreateArgs>(args: SelectSubset<T, TrailerCreateArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Trailers.
     * @param {TrailerCreateManyArgs} args - Arguments to create many Trailers.
     * @example
     * // Create many Trailers
     * const trailer = await prisma.trailer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TrailerCreateManyArgs>(args?: SelectSubset<T, TrailerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Trailers and returns the data saved in the database.
     * @param {TrailerCreateManyAndReturnArgs} args - Arguments to create many Trailers.
     * @example
     * // Create many Trailers
     * const trailer = await prisma.trailer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Trailers and only return the `id`
     * const trailerWithIdOnly = await prisma.trailer.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TrailerCreateManyAndReturnArgs>(args?: SelectSubset<T, TrailerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Trailer.
     * @param {TrailerDeleteArgs} args - Arguments to delete one Trailer.
     * @example
     * // Delete one Trailer
     * const Trailer = await prisma.trailer.delete({
     *   where: {
     *     // ... filter to delete one Trailer
     *   }
     * })
     * 
     */
    delete<T extends TrailerDeleteArgs>(args: SelectSubset<T, TrailerDeleteArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Trailer.
     * @param {TrailerUpdateArgs} args - Arguments to update one Trailer.
     * @example
     * // Update one Trailer
     * const trailer = await prisma.trailer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TrailerUpdateArgs>(args: SelectSubset<T, TrailerUpdateArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Trailers.
     * @param {TrailerDeleteManyArgs} args - Arguments to filter Trailers to delete.
     * @example
     * // Delete a few Trailers
     * const { count } = await prisma.trailer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TrailerDeleteManyArgs>(args?: SelectSubset<T, TrailerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trailers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrailerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Trailers
     * const trailer = await prisma.trailer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TrailerUpdateManyArgs>(args: SelectSubset<T, TrailerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Trailer.
     * @param {TrailerUpsertArgs} args - Arguments to update or create a Trailer.
     * @example
     * // Update or create a Trailer
     * const trailer = await prisma.trailer.upsert({
     *   create: {
     *     // ... data to create a Trailer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Trailer we want to update
     *   }
     * })
     */
    upsert<T extends TrailerUpsertArgs>(args: SelectSubset<T, TrailerUpsertArgs<ExtArgs>>): Prisma__TrailerClient<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Trailers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrailerCountArgs} args - Arguments to filter Trailers to count.
     * @example
     * // Count the number of Trailers
     * const count = await prisma.trailer.count({
     *   where: {
     *     // ... the filter for the Trailers we want to count
     *   }
     * })
    **/
    count<T extends TrailerCountArgs>(
      args?: Subset<T, TrailerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrailerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Trailer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrailerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrailerAggregateArgs>(args: Subset<T, TrailerAggregateArgs>): Prisma.PrismaPromise<GetTrailerAggregateType<T>>

    /**
     * Group by Trailer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrailerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TrailerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TrailerGroupByArgs['orderBy'] }
        : { orderBy?: TrailerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TrailerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrailerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Trailer model
   */
  readonly fields: TrailerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Trailer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TrailerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignedYard<T extends Trailer$assignedYardArgs<ExtArgs> = {}>(args?: Subset<T, Trailer$assignedYardArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    attachedTruck<T extends Trailer$attachedTruckArgs<ExtArgs> = {}>(args?: Subset<T, Trailer$attachedTruckArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    currentLoad<T extends Trailer$currentLoadArgs<ExtArgs> = {}>(args?: Subset<T, Trailer$currentLoadArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Trailer model
   */ 
  interface TrailerFieldRefs {
    readonly id: FieldRef<"Trailer", 'String'>
    readonly createdAt: FieldRef<"Trailer", 'DateTime'>
    readonly updatedAt: FieldRef<"Trailer", 'DateTime'>
    readonly trailerId: FieldRef<"Trailer", 'String'>
    readonly name: FieldRef<"Trailer", 'String'>
    readonly vin: FieldRef<"Trailer", 'String'>
    readonly year: FieldRef<"Trailer", 'Int'>
    readonly trailerType: FieldRef<"Trailer", 'String'>
    readonly length: FieldRef<"Trailer", 'Int'>
    readonly capacity: FieldRef<"Trailer", 'Int'>
    readonly axleCount: FieldRef<"Trailer", 'Int'>
    readonly status: FieldRef<"Trailer", 'TrailerStatus'>
    readonly currentLocation: FieldRef<"Trailer", 'String'>
    readonly assignedYardId: FieldRef<"Trailer", 'String'>
    readonly attachedTruckId: FieldRef<"Trailer", 'String'>
    readonly currentLoadId: FieldRef<"Trailer", 'String'>
    readonly lastUpdated: FieldRef<"Trailer", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Trailer findUnique
   */
  export type TrailerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * Filter, which Trailer to fetch.
     */
    where: TrailerWhereUniqueInput
  }

  /**
   * Trailer findUniqueOrThrow
   */
  export type TrailerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * Filter, which Trailer to fetch.
     */
    where: TrailerWhereUniqueInput
  }

  /**
   * Trailer findFirst
   */
  export type TrailerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * Filter, which Trailer to fetch.
     */
    where?: TrailerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trailers to fetch.
     */
    orderBy?: TrailerOrderByWithRelationInput | TrailerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Trailers.
     */
    cursor?: TrailerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trailers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trailers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Trailers.
     */
    distinct?: TrailerScalarFieldEnum | TrailerScalarFieldEnum[]
  }

  /**
   * Trailer findFirstOrThrow
   */
  export type TrailerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * Filter, which Trailer to fetch.
     */
    where?: TrailerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trailers to fetch.
     */
    orderBy?: TrailerOrderByWithRelationInput | TrailerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Trailers.
     */
    cursor?: TrailerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trailers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trailers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Trailers.
     */
    distinct?: TrailerScalarFieldEnum | TrailerScalarFieldEnum[]
  }

  /**
   * Trailer findMany
   */
  export type TrailerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * Filter, which Trailers to fetch.
     */
    where?: TrailerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Trailers to fetch.
     */
    orderBy?: TrailerOrderByWithRelationInput | TrailerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Trailers.
     */
    cursor?: TrailerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Trailers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Trailers.
     */
    skip?: number
    distinct?: TrailerScalarFieldEnum | TrailerScalarFieldEnum[]
  }

  /**
   * Trailer create
   */
  export type TrailerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * The data needed to create a Trailer.
     */
    data: XOR<TrailerCreateInput, TrailerUncheckedCreateInput>
  }

  /**
   * Trailer createMany
   */
  export type TrailerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Trailers.
     */
    data: TrailerCreateManyInput | TrailerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Trailer createManyAndReturn
   */
  export type TrailerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Trailers.
     */
    data: TrailerCreateManyInput | TrailerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Trailer update
   */
  export type TrailerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * The data needed to update a Trailer.
     */
    data: XOR<TrailerUpdateInput, TrailerUncheckedUpdateInput>
    /**
     * Choose, which Trailer to update.
     */
    where: TrailerWhereUniqueInput
  }

  /**
   * Trailer updateMany
   */
  export type TrailerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Trailers.
     */
    data: XOR<TrailerUpdateManyMutationInput, TrailerUncheckedUpdateManyInput>
    /**
     * Filter which Trailers to update
     */
    where?: TrailerWhereInput
  }

  /**
   * Trailer upsert
   */
  export type TrailerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * The filter to search for the Trailer to update in case it exists.
     */
    where: TrailerWhereUniqueInput
    /**
     * In case the Trailer found by the `where` argument doesn't exist, create a new Trailer with this data.
     */
    create: XOR<TrailerCreateInput, TrailerUncheckedCreateInput>
    /**
     * In case the Trailer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TrailerUpdateInput, TrailerUncheckedUpdateInput>
  }

  /**
   * Trailer delete
   */
  export type TrailerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    /**
     * Filter which Trailer to delete.
     */
    where: TrailerWhereUniqueInput
  }

  /**
   * Trailer deleteMany
   */
  export type TrailerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Trailers to delete
     */
    where?: TrailerWhereInput
  }

  /**
   * Trailer.assignedYard
   */
  export type Trailer$assignedYardArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    where?: LocationWhereInput
  }

  /**
   * Trailer.attachedTruck
   */
  export type Trailer$attachedTruckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    where?: TruckWhereInput
  }

  /**
   * Trailer.currentLoad
   */
  export type Trailer$currentLoadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    where?: LoadWhereInput
  }

  /**
   * Trailer without action
   */
  export type TrailerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
  }


  /**
   * Model Driver
   */

  export type AggregateDriver = {
    _count: DriverCountAggregateOutputType | null
    _min: DriverMinAggregateOutputType | null
    _max: DriverMaxAggregateOutputType | null
  }

  export type DriverMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    driverId: string | null
    name: string | null
    email: string | null
    phone: string | null
    status: $Enums.DriverStatus | null
    operatingBaseCity: string | null
    operatingBaseState: string | null
    assignedFleetId: string | null
    currentLoadId: string | null
    lastUpdated: Date | null
  }

  export type DriverMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    driverId: string | null
    name: string | null
    email: string | null
    phone: string | null
    status: $Enums.DriverStatus | null
    operatingBaseCity: string | null
    operatingBaseState: string | null
    assignedFleetId: string | null
    currentLoadId: string | null
    lastUpdated: Date | null
  }

  export type DriverCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    driverId: number
    name: number
    email: number
    phone: number
    status: number
    operatingBaseCity: number
    operatingBaseState: number
    assignedFleetId: number
    currentLoadId: number
    lastUpdated: number
    _all: number
  }


  export type DriverMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    driverId?: true
    name?: true
    email?: true
    phone?: true
    status?: true
    operatingBaseCity?: true
    operatingBaseState?: true
    assignedFleetId?: true
    currentLoadId?: true
    lastUpdated?: true
  }

  export type DriverMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    driverId?: true
    name?: true
    email?: true
    phone?: true
    status?: true
    operatingBaseCity?: true
    operatingBaseState?: true
    assignedFleetId?: true
    currentLoadId?: true
    lastUpdated?: true
  }

  export type DriverCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    driverId?: true
    name?: true
    email?: true
    phone?: true
    status?: true
    operatingBaseCity?: true
    operatingBaseState?: true
    assignedFleetId?: true
    currentLoadId?: true
    lastUpdated?: true
    _all?: true
  }

  export type DriverAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Driver to aggregate.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Drivers
    **/
    _count?: true | DriverCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DriverMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DriverMaxAggregateInputType
  }

  export type GetDriverAggregateType<T extends DriverAggregateArgs> = {
        [P in keyof T & keyof AggregateDriver]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDriver[P]>
      : GetScalarType<T[P], AggregateDriver[P]>
  }




  export type DriverGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DriverWhereInput
    orderBy?: DriverOrderByWithAggregationInput | DriverOrderByWithAggregationInput[]
    by: DriverScalarFieldEnum[] | DriverScalarFieldEnum
    having?: DriverScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DriverCountAggregateInputType | true
    _min?: DriverMinAggregateInputType
    _max?: DriverMaxAggregateInputType
  }

  export type DriverGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    driverId: string
    name: string
    email: string | null
    phone: string | null
    status: $Enums.DriverStatus
    operatingBaseCity: string | null
    operatingBaseState: string | null
    assignedFleetId: string | null
    currentLoadId: string | null
    lastUpdated: Date
    _count: DriverCountAggregateOutputType | null
    _min: DriverMinAggregateOutputType | null
    _max: DriverMaxAggregateOutputType | null
  }

  type GetDriverGroupByPayload<T extends DriverGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DriverGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DriverGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DriverGroupByOutputType[P]>
            : GetScalarType<T[P], DriverGroupByOutputType[P]>
        }
      >
    >


  export type DriverSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverId?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    status?: boolean
    operatingBaseCity?: boolean
    operatingBaseState?: boolean
    assignedFleetId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
    assignedTrucks?: boolean | Driver$assignedTrucksArgs<ExtArgs>
    currentLoad?: boolean | Driver$currentLoadArgs<ExtArgs>
    _count?: boolean | DriverCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["driver"]>

  export type DriverSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverId?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    status?: boolean
    operatingBaseCity?: boolean
    operatingBaseState?: boolean
    assignedFleetId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
    currentLoad?: boolean | Driver$currentLoadArgs<ExtArgs>
  }, ExtArgs["result"]["driver"]>

  export type DriverSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverId?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    status?: boolean
    operatingBaseCity?: boolean
    operatingBaseState?: boolean
    assignedFleetId?: boolean
    currentLoadId?: boolean
    lastUpdated?: boolean
  }

  export type DriverInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedTrucks?: boolean | Driver$assignedTrucksArgs<ExtArgs>
    currentLoad?: boolean | Driver$currentLoadArgs<ExtArgs>
    _count?: boolean | DriverCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DriverIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    currentLoad?: boolean | Driver$currentLoadArgs<ExtArgs>
  }

  export type $DriverPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Driver"
    objects: {
      assignedTrucks: Prisma.$TruckPayload<ExtArgs>[]
      currentLoad: Prisma.$LoadPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      driverId: string
      name: string
      email: string | null
      phone: string | null
      status: $Enums.DriverStatus
      operatingBaseCity: string | null
      operatingBaseState: string | null
      assignedFleetId: string | null
      currentLoadId: string | null
      lastUpdated: Date
    }, ExtArgs["result"]["driver"]>
    composites: {}
  }

  type DriverGetPayload<S extends boolean | null | undefined | DriverDefaultArgs> = $Result.GetResult<Prisma.$DriverPayload, S>

  type DriverCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DriverFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DriverCountAggregateInputType | true
    }

  export interface DriverDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Driver'], meta: { name: 'Driver' } }
    /**
     * Find zero or one Driver that matches the filter.
     * @param {DriverFindUniqueArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DriverFindUniqueArgs>(args: SelectSubset<T, DriverFindUniqueArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Driver that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DriverFindUniqueOrThrowArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DriverFindUniqueOrThrowArgs>(args: SelectSubset<T, DriverFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Driver that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverFindFirstArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DriverFindFirstArgs>(args?: SelectSubset<T, DriverFindFirstArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Driver that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverFindFirstOrThrowArgs} args - Arguments to find a Driver
     * @example
     * // Get one Driver
     * const driver = await prisma.driver.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DriverFindFirstOrThrowArgs>(args?: SelectSubset<T, DriverFindFirstOrThrowArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Drivers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Drivers
     * const drivers = await prisma.driver.findMany()
     * 
     * // Get first 10 Drivers
     * const drivers = await prisma.driver.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const driverWithIdOnly = await prisma.driver.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DriverFindManyArgs>(args?: SelectSubset<T, DriverFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Driver.
     * @param {DriverCreateArgs} args - Arguments to create a Driver.
     * @example
     * // Create one Driver
     * const Driver = await prisma.driver.create({
     *   data: {
     *     // ... data to create a Driver
     *   }
     * })
     * 
     */
    create<T extends DriverCreateArgs>(args: SelectSubset<T, DriverCreateArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Drivers.
     * @param {DriverCreateManyArgs} args - Arguments to create many Drivers.
     * @example
     * // Create many Drivers
     * const driver = await prisma.driver.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DriverCreateManyArgs>(args?: SelectSubset<T, DriverCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Drivers and returns the data saved in the database.
     * @param {DriverCreateManyAndReturnArgs} args - Arguments to create many Drivers.
     * @example
     * // Create many Drivers
     * const driver = await prisma.driver.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Drivers and only return the `id`
     * const driverWithIdOnly = await prisma.driver.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DriverCreateManyAndReturnArgs>(args?: SelectSubset<T, DriverCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Driver.
     * @param {DriverDeleteArgs} args - Arguments to delete one Driver.
     * @example
     * // Delete one Driver
     * const Driver = await prisma.driver.delete({
     *   where: {
     *     // ... filter to delete one Driver
     *   }
     * })
     * 
     */
    delete<T extends DriverDeleteArgs>(args: SelectSubset<T, DriverDeleteArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Driver.
     * @param {DriverUpdateArgs} args - Arguments to update one Driver.
     * @example
     * // Update one Driver
     * const driver = await prisma.driver.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DriverUpdateArgs>(args: SelectSubset<T, DriverUpdateArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Drivers.
     * @param {DriverDeleteManyArgs} args - Arguments to filter Drivers to delete.
     * @example
     * // Delete a few Drivers
     * const { count } = await prisma.driver.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DriverDeleteManyArgs>(args?: SelectSubset<T, DriverDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Drivers
     * const driver = await prisma.driver.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DriverUpdateManyArgs>(args: SelectSubset<T, DriverUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Driver.
     * @param {DriverUpsertArgs} args - Arguments to update or create a Driver.
     * @example
     * // Update or create a Driver
     * const driver = await prisma.driver.upsert({
     *   create: {
     *     // ... data to create a Driver
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Driver we want to update
     *   }
     * })
     */
    upsert<T extends DriverUpsertArgs>(args: SelectSubset<T, DriverUpsertArgs<ExtArgs>>): Prisma__DriverClient<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Drivers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverCountArgs} args - Arguments to filter Drivers to count.
     * @example
     * // Count the number of Drivers
     * const count = await prisma.driver.count({
     *   where: {
     *     // ... the filter for the Drivers we want to count
     *   }
     * })
    **/
    count<T extends DriverCountArgs>(
      args?: Subset<T, DriverCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DriverCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Driver.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DriverAggregateArgs>(args: Subset<T, DriverAggregateArgs>): Prisma.PrismaPromise<GetDriverAggregateType<T>>

    /**
     * Group by Driver.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DriverGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DriverGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DriverGroupByArgs['orderBy'] }
        : { orderBy?: DriverGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DriverGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDriverGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Driver model
   */
  readonly fields: DriverFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Driver.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DriverClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignedTrucks<T extends Driver$assignedTrucksArgs<ExtArgs> = {}>(args?: Subset<T, Driver$assignedTrucksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findMany"> | Null>
    currentLoad<T extends Driver$currentLoadArgs<ExtArgs> = {}>(args?: Subset<T, Driver$currentLoadArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Driver model
   */ 
  interface DriverFieldRefs {
    readonly id: FieldRef<"Driver", 'String'>
    readonly createdAt: FieldRef<"Driver", 'DateTime'>
    readonly updatedAt: FieldRef<"Driver", 'DateTime'>
    readonly driverId: FieldRef<"Driver", 'String'>
    readonly name: FieldRef<"Driver", 'String'>
    readonly email: FieldRef<"Driver", 'String'>
    readonly phone: FieldRef<"Driver", 'String'>
    readonly status: FieldRef<"Driver", 'DriverStatus'>
    readonly operatingBaseCity: FieldRef<"Driver", 'String'>
    readonly operatingBaseState: FieldRef<"Driver", 'String'>
    readonly assignedFleetId: FieldRef<"Driver", 'String'>
    readonly currentLoadId: FieldRef<"Driver", 'String'>
    readonly lastUpdated: FieldRef<"Driver", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Driver findUnique
   */
  export type DriverFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver findUniqueOrThrow
   */
  export type DriverFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver findFirst
   */
  export type DriverFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Drivers.
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Drivers.
     */
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * Driver findFirstOrThrow
   */
  export type DriverFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Driver to fetch.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Drivers.
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Drivers.
     */
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * Driver findMany
   */
  export type DriverFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter, which Drivers to fetch.
     */
    where?: DriverWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Drivers to fetch.
     */
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Drivers.
     */
    cursor?: DriverWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Drivers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Drivers.
     */
    skip?: number
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * Driver create
   */
  export type DriverCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * The data needed to create a Driver.
     */
    data: XOR<DriverCreateInput, DriverUncheckedCreateInput>
  }

  /**
   * Driver createMany
   */
  export type DriverCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Drivers.
     */
    data: DriverCreateManyInput | DriverCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Driver createManyAndReturn
   */
  export type DriverCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Drivers.
     */
    data: DriverCreateManyInput | DriverCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Driver update
   */
  export type DriverUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * The data needed to update a Driver.
     */
    data: XOR<DriverUpdateInput, DriverUncheckedUpdateInput>
    /**
     * Choose, which Driver to update.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver updateMany
   */
  export type DriverUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Drivers.
     */
    data: XOR<DriverUpdateManyMutationInput, DriverUncheckedUpdateManyInput>
    /**
     * Filter which Drivers to update
     */
    where?: DriverWhereInput
  }

  /**
   * Driver upsert
   */
  export type DriverUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * The filter to search for the Driver to update in case it exists.
     */
    where: DriverWhereUniqueInput
    /**
     * In case the Driver found by the `where` argument doesn't exist, create a new Driver with this data.
     */
    create: XOR<DriverCreateInput, DriverUncheckedCreateInput>
    /**
     * In case the Driver was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DriverUpdateInput, DriverUncheckedUpdateInput>
  }

  /**
   * Driver delete
   */
  export type DriverDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    /**
     * Filter which Driver to delete.
     */
    where: DriverWhereUniqueInput
  }

  /**
   * Driver deleteMany
   */
  export type DriverDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Drivers to delete
     */
    where?: DriverWhereInput
  }

  /**
   * Driver.assignedTrucks
   */
  export type Driver$assignedTrucksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    where?: TruckWhereInput
    orderBy?: TruckOrderByWithRelationInput | TruckOrderByWithRelationInput[]
    cursor?: TruckWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * Driver.currentLoad
   */
  export type Driver$currentLoadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    where?: LoadWhereInput
  }

  /**
   * Driver without action
   */
  export type DriverDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
  }


  /**
   * Model Load
   */

  export type AggregateLoad = {
    _count: LoadCountAggregateOutputType | null
    _avg: LoadAvgAggregateOutputType | null
    _sum: LoadSumAggregateOutputType | null
    _min: LoadMinAggregateOutputType | null
    _max: LoadMaxAggregateOutputType | null
  }

  export type LoadAvgAggregateOutputType = {
    originLat: number | null
    originLng: number | null
    destinationLat: number | null
    destinationLng: number | null
  }

  export type LoadSumAggregateOutputType = {
    originLat: number | null
    originLng: number | null
    destinationLat: number | null
    destinationLng: number | null
  }

  export type LoadMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    loadId: string | null
    reference: string | null
    status: $Enums.LoadStatus | null
    trackingNumber: string | null
    customerId: string | null
    customerName: string | null
    originAddress: string | null
    originLat: number | null
    originLng: number | null
    destinationAddress: string | null
    destinationLat: number | null
    destinationLng: number | null
    scheduledPickup: Date | null
    scheduledDelivery: Date | null
    lastUpdated: Date | null
  }

  export type LoadMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    loadId: string | null
    reference: string | null
    status: $Enums.LoadStatus | null
    trackingNumber: string | null
    customerId: string | null
    customerName: string | null
    originAddress: string | null
    originLat: number | null
    originLng: number | null
    destinationAddress: string | null
    destinationLat: number | null
    destinationLng: number | null
    scheduledPickup: Date | null
    scheduledDelivery: Date | null
    lastUpdated: Date | null
  }

  export type LoadCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    loadId: number
    reference: number
    status: number
    trackingNumber: number
    customerId: number
    customerName: number
    originAddress: number
    originLat: number
    originLng: number
    destinationAddress: number
    destinationLat: number
    destinationLng: number
    scheduledPickup: number
    scheduledDelivery: number
    lastUpdated: number
    _all: number
  }


  export type LoadAvgAggregateInputType = {
    originLat?: true
    originLng?: true
    destinationLat?: true
    destinationLng?: true
  }

  export type LoadSumAggregateInputType = {
    originLat?: true
    originLng?: true
    destinationLat?: true
    destinationLng?: true
  }

  export type LoadMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    loadId?: true
    reference?: true
    status?: true
    trackingNumber?: true
    customerId?: true
    customerName?: true
    originAddress?: true
    originLat?: true
    originLng?: true
    destinationAddress?: true
    destinationLat?: true
    destinationLng?: true
    scheduledPickup?: true
    scheduledDelivery?: true
    lastUpdated?: true
  }

  export type LoadMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    loadId?: true
    reference?: true
    status?: true
    trackingNumber?: true
    customerId?: true
    customerName?: true
    originAddress?: true
    originLat?: true
    originLng?: true
    destinationAddress?: true
    destinationLat?: true
    destinationLng?: true
    scheduledPickup?: true
    scheduledDelivery?: true
    lastUpdated?: true
  }

  export type LoadCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    loadId?: true
    reference?: true
    status?: true
    trackingNumber?: true
    customerId?: true
    customerName?: true
    originAddress?: true
    originLat?: true
    originLng?: true
    destinationAddress?: true
    destinationLat?: true
    destinationLng?: true
    scheduledPickup?: true
    scheduledDelivery?: true
    lastUpdated?: true
    _all?: true
  }

  export type LoadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Load to aggregate.
     */
    where?: LoadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loads to fetch.
     */
    orderBy?: LoadOrderByWithRelationInput | LoadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LoadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Loads
    **/
    _count?: true | LoadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoadMaxAggregateInputType
  }

  export type GetLoadAggregateType<T extends LoadAggregateArgs> = {
        [P in keyof T & keyof AggregateLoad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoad[P]>
      : GetScalarType<T[P], AggregateLoad[P]>
  }




  export type LoadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LoadWhereInput
    orderBy?: LoadOrderByWithAggregationInput | LoadOrderByWithAggregationInput[]
    by: LoadScalarFieldEnum[] | LoadScalarFieldEnum
    having?: LoadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoadCountAggregateInputType | true
    _avg?: LoadAvgAggregateInputType
    _sum?: LoadSumAggregateInputType
    _min?: LoadMinAggregateInputType
    _max?: LoadMaxAggregateInputType
  }

  export type LoadGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    loadId: string
    reference: string
    status: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat: number | null
    originLng: number | null
    destinationAddress: string
    destinationLat: number | null
    destinationLng: number | null
    scheduledPickup: Date
    scheduledDelivery: Date
    lastUpdated: Date
    _count: LoadCountAggregateOutputType | null
    _avg: LoadAvgAggregateOutputType | null
    _sum: LoadSumAggregateOutputType | null
    _min: LoadMinAggregateOutputType | null
    _max: LoadMaxAggregateOutputType | null
  }

  type GetLoadGroupByPayload<T extends LoadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LoadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LoadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LoadGroupByOutputType[P]>
            : GetScalarType<T[P], LoadGroupByOutputType[P]>
        }
      >
    >


  export type LoadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    loadId?: boolean
    reference?: boolean
    status?: boolean
    trackingNumber?: boolean
    customerId?: boolean
    customerName?: boolean
    originAddress?: boolean
    originLat?: boolean
    originLng?: boolean
    destinationAddress?: boolean
    destinationLat?: boolean
    destinationLng?: boolean
    scheduledPickup?: boolean
    scheduledDelivery?: boolean
    lastUpdated?: boolean
    assignedTrucks?: boolean | Load$assignedTrucksArgs<ExtArgs>
    assignedTrailers?: boolean | Load$assignedTrailersArgs<ExtArgs>
    assignedDrivers?: boolean | Load$assignedDriversArgs<ExtArgs>
    _count?: boolean | LoadCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["load"]>

  export type LoadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    loadId?: boolean
    reference?: boolean
    status?: boolean
    trackingNumber?: boolean
    customerId?: boolean
    customerName?: boolean
    originAddress?: boolean
    originLat?: boolean
    originLng?: boolean
    destinationAddress?: boolean
    destinationLat?: boolean
    destinationLng?: boolean
    scheduledPickup?: boolean
    scheduledDelivery?: boolean
    lastUpdated?: boolean
  }, ExtArgs["result"]["load"]>

  export type LoadSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    loadId?: boolean
    reference?: boolean
    status?: boolean
    trackingNumber?: boolean
    customerId?: boolean
    customerName?: boolean
    originAddress?: boolean
    originLat?: boolean
    originLng?: boolean
    destinationAddress?: boolean
    destinationLat?: boolean
    destinationLng?: boolean
    scheduledPickup?: boolean
    scheduledDelivery?: boolean
    lastUpdated?: boolean
  }

  export type LoadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedTrucks?: boolean | Load$assignedTrucksArgs<ExtArgs>
    assignedTrailers?: boolean | Load$assignedTrailersArgs<ExtArgs>
    assignedDrivers?: boolean | Load$assignedDriversArgs<ExtArgs>
    _count?: boolean | LoadCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LoadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LoadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Load"
    objects: {
      assignedTrucks: Prisma.$TruckPayload<ExtArgs>[]
      assignedTrailers: Prisma.$TrailerPayload<ExtArgs>[]
      assignedDrivers: Prisma.$DriverPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      loadId: string
      reference: string
      status: $Enums.LoadStatus
      trackingNumber: string
      customerId: string
      customerName: string
      originAddress: string
      originLat: number | null
      originLng: number | null
      destinationAddress: string
      destinationLat: number | null
      destinationLng: number | null
      scheduledPickup: Date
      scheduledDelivery: Date
      lastUpdated: Date
    }, ExtArgs["result"]["load"]>
    composites: {}
  }

  type LoadGetPayload<S extends boolean | null | undefined | LoadDefaultArgs> = $Result.GetResult<Prisma.$LoadPayload, S>

  type LoadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LoadFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LoadCountAggregateInputType | true
    }

  export interface LoadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Load'], meta: { name: 'Load' } }
    /**
     * Find zero or one Load that matches the filter.
     * @param {LoadFindUniqueArgs} args - Arguments to find a Load
     * @example
     * // Get one Load
     * const load = await prisma.load.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LoadFindUniqueArgs>(args: SelectSubset<T, LoadFindUniqueArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Load that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LoadFindUniqueOrThrowArgs} args - Arguments to find a Load
     * @example
     * // Get one Load
     * const load = await prisma.load.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LoadFindUniqueOrThrowArgs>(args: SelectSubset<T, LoadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Load that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoadFindFirstArgs} args - Arguments to find a Load
     * @example
     * // Get one Load
     * const load = await prisma.load.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LoadFindFirstArgs>(args?: SelectSubset<T, LoadFindFirstArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Load that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoadFindFirstOrThrowArgs} args - Arguments to find a Load
     * @example
     * // Get one Load
     * const load = await prisma.load.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LoadFindFirstOrThrowArgs>(args?: SelectSubset<T, LoadFindFirstOrThrowArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Loads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Loads
     * const loads = await prisma.load.findMany()
     * 
     * // Get first 10 Loads
     * const loads = await prisma.load.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loadWithIdOnly = await prisma.load.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LoadFindManyArgs>(args?: SelectSubset<T, LoadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Load.
     * @param {LoadCreateArgs} args - Arguments to create a Load.
     * @example
     * // Create one Load
     * const Load = await prisma.load.create({
     *   data: {
     *     // ... data to create a Load
     *   }
     * })
     * 
     */
    create<T extends LoadCreateArgs>(args: SelectSubset<T, LoadCreateArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Loads.
     * @param {LoadCreateManyArgs} args - Arguments to create many Loads.
     * @example
     * // Create many Loads
     * const load = await prisma.load.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LoadCreateManyArgs>(args?: SelectSubset<T, LoadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Loads and returns the data saved in the database.
     * @param {LoadCreateManyAndReturnArgs} args - Arguments to create many Loads.
     * @example
     * // Create many Loads
     * const load = await prisma.load.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Loads and only return the `id`
     * const loadWithIdOnly = await prisma.load.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LoadCreateManyAndReturnArgs>(args?: SelectSubset<T, LoadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Load.
     * @param {LoadDeleteArgs} args - Arguments to delete one Load.
     * @example
     * // Delete one Load
     * const Load = await prisma.load.delete({
     *   where: {
     *     // ... filter to delete one Load
     *   }
     * })
     * 
     */
    delete<T extends LoadDeleteArgs>(args: SelectSubset<T, LoadDeleteArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Load.
     * @param {LoadUpdateArgs} args - Arguments to update one Load.
     * @example
     * // Update one Load
     * const load = await prisma.load.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LoadUpdateArgs>(args: SelectSubset<T, LoadUpdateArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Loads.
     * @param {LoadDeleteManyArgs} args - Arguments to filter Loads to delete.
     * @example
     * // Delete a few Loads
     * const { count } = await prisma.load.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LoadDeleteManyArgs>(args?: SelectSubset<T, LoadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Loads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Loads
     * const load = await prisma.load.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LoadUpdateManyArgs>(args: SelectSubset<T, LoadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Load.
     * @param {LoadUpsertArgs} args - Arguments to update or create a Load.
     * @example
     * // Update or create a Load
     * const load = await prisma.load.upsert({
     *   create: {
     *     // ... data to create a Load
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Load we want to update
     *   }
     * })
     */
    upsert<T extends LoadUpsertArgs>(args: SelectSubset<T, LoadUpsertArgs<ExtArgs>>): Prisma__LoadClient<$Result.GetResult<Prisma.$LoadPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Loads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoadCountArgs} args - Arguments to filter Loads to count.
     * @example
     * // Count the number of Loads
     * const count = await prisma.load.count({
     *   where: {
     *     // ... the filter for the Loads we want to count
     *   }
     * })
    **/
    count<T extends LoadCountArgs>(
      args?: Subset<T, LoadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Load.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoadAggregateArgs>(args: Subset<T, LoadAggregateArgs>): Prisma.PrismaPromise<GetLoadAggregateType<T>>

    /**
     * Group by Load.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoadGroupByArgs['orderBy'] }
        : { orderBy?: LoadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Load model
   */
  readonly fields: LoadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Load.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LoadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignedTrucks<T extends Load$assignedTrucksArgs<ExtArgs> = {}>(args?: Subset<T, Load$assignedTrucksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findMany"> | Null>
    assignedTrailers<T extends Load$assignedTrailersArgs<ExtArgs> = {}>(args?: Subset<T, Load$assignedTrailersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findMany"> | Null>
    assignedDrivers<T extends Load$assignedDriversArgs<ExtArgs> = {}>(args?: Subset<T, Load$assignedDriversArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DriverPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Load model
   */ 
  interface LoadFieldRefs {
    readonly id: FieldRef<"Load", 'String'>
    readonly createdAt: FieldRef<"Load", 'DateTime'>
    readonly updatedAt: FieldRef<"Load", 'DateTime'>
    readonly loadId: FieldRef<"Load", 'String'>
    readonly reference: FieldRef<"Load", 'String'>
    readonly status: FieldRef<"Load", 'LoadStatus'>
    readonly trackingNumber: FieldRef<"Load", 'String'>
    readonly customerId: FieldRef<"Load", 'String'>
    readonly customerName: FieldRef<"Load", 'String'>
    readonly originAddress: FieldRef<"Load", 'String'>
    readonly originLat: FieldRef<"Load", 'Float'>
    readonly originLng: FieldRef<"Load", 'Float'>
    readonly destinationAddress: FieldRef<"Load", 'String'>
    readonly destinationLat: FieldRef<"Load", 'Float'>
    readonly destinationLng: FieldRef<"Load", 'Float'>
    readonly scheduledPickup: FieldRef<"Load", 'DateTime'>
    readonly scheduledDelivery: FieldRef<"Load", 'DateTime'>
    readonly lastUpdated: FieldRef<"Load", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Load findUnique
   */
  export type LoadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * Filter, which Load to fetch.
     */
    where: LoadWhereUniqueInput
  }

  /**
   * Load findUniqueOrThrow
   */
  export type LoadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * Filter, which Load to fetch.
     */
    where: LoadWhereUniqueInput
  }

  /**
   * Load findFirst
   */
  export type LoadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * Filter, which Load to fetch.
     */
    where?: LoadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loads to fetch.
     */
    orderBy?: LoadOrderByWithRelationInput | LoadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Loads.
     */
    cursor?: LoadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Loads.
     */
    distinct?: LoadScalarFieldEnum | LoadScalarFieldEnum[]
  }

  /**
   * Load findFirstOrThrow
   */
  export type LoadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * Filter, which Load to fetch.
     */
    where?: LoadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loads to fetch.
     */
    orderBy?: LoadOrderByWithRelationInput | LoadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Loads.
     */
    cursor?: LoadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Loads.
     */
    distinct?: LoadScalarFieldEnum | LoadScalarFieldEnum[]
  }

  /**
   * Load findMany
   */
  export type LoadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * Filter, which Loads to fetch.
     */
    where?: LoadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loads to fetch.
     */
    orderBy?: LoadOrderByWithRelationInput | LoadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Loads.
     */
    cursor?: LoadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loads.
     */
    skip?: number
    distinct?: LoadScalarFieldEnum | LoadScalarFieldEnum[]
  }

  /**
   * Load create
   */
  export type LoadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * The data needed to create a Load.
     */
    data: XOR<LoadCreateInput, LoadUncheckedCreateInput>
  }

  /**
   * Load createMany
   */
  export type LoadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Loads.
     */
    data: LoadCreateManyInput | LoadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Load createManyAndReturn
   */
  export type LoadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Loads.
     */
    data: LoadCreateManyInput | LoadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Load update
   */
  export type LoadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * The data needed to update a Load.
     */
    data: XOR<LoadUpdateInput, LoadUncheckedUpdateInput>
    /**
     * Choose, which Load to update.
     */
    where: LoadWhereUniqueInput
  }

  /**
   * Load updateMany
   */
  export type LoadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Loads.
     */
    data: XOR<LoadUpdateManyMutationInput, LoadUncheckedUpdateManyInput>
    /**
     * Filter which Loads to update
     */
    where?: LoadWhereInput
  }

  /**
   * Load upsert
   */
  export type LoadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * The filter to search for the Load to update in case it exists.
     */
    where: LoadWhereUniqueInput
    /**
     * In case the Load found by the `where` argument doesn't exist, create a new Load with this data.
     */
    create: XOR<LoadCreateInput, LoadUncheckedCreateInput>
    /**
     * In case the Load was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LoadUpdateInput, LoadUncheckedUpdateInput>
  }

  /**
   * Load delete
   */
  export type LoadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
    /**
     * Filter which Load to delete.
     */
    where: LoadWhereUniqueInput
  }

  /**
   * Load deleteMany
   */
  export type LoadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Loads to delete
     */
    where?: LoadWhereInput
  }

  /**
   * Load.assignedTrucks
   */
  export type Load$assignedTrucksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    where?: TruckWhereInput
    orderBy?: TruckOrderByWithRelationInput | TruckOrderByWithRelationInput[]
    cursor?: TruckWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * Load.assignedTrailers
   */
  export type Load$assignedTrailersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    where?: TrailerWhereInput
    orderBy?: TrailerOrderByWithRelationInput | TrailerOrderByWithRelationInput[]
    cursor?: TrailerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TrailerScalarFieldEnum | TrailerScalarFieldEnum[]
  }

  /**
   * Load.assignedDrivers
   */
  export type Load$assignedDriversArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Driver
     */
    select?: DriverSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DriverInclude<ExtArgs> | null
    where?: DriverWhereInput
    orderBy?: DriverOrderByWithRelationInput | DriverOrderByWithRelationInput[]
    cursor?: DriverWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DriverScalarFieldEnum | DriverScalarFieldEnum[]
  }

  /**
   * Load without action
   */
  export type LoadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Load
     */
    select?: LoadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoadInclude<ExtArgs> | null
  }


  /**
   * Model Location
   */

  export type AggregateLocation = {
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  export type LocationAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type LocationSumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type LocationMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    locationId: string | null
    name: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    locationType: $Enums.LocationType | null
    lastUpdated: Date | null
  }

  export type LocationMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    locationId: string | null
    name: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    locationType: $Enums.LocationType | null
    lastUpdated: Date | null
  }

  export type LocationCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    locationId: number
    name: number
    address: number
    city: number
    state: number
    zipCode: number
    country: number
    latitude: number
    longitude: number
    locationType: number
    lastUpdated: number
    _all: number
  }


  export type LocationAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type LocationSumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type LocationMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    locationId?: true
    name?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    locationType?: true
    lastUpdated?: true
  }

  export type LocationMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    locationId?: true
    name?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    locationType?: true
    lastUpdated?: true
  }

  export type LocationCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    locationId?: true
    name?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    locationType?: true
    lastUpdated?: true
    _all?: true
  }

  export type LocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Location to aggregate.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Locations
    **/
    _count?: true | LocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationMaxAggregateInputType
  }

  export type GetLocationAggregateType<T extends LocationAggregateArgs> = {
        [P in keyof T & keyof AggregateLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocation[P]>
      : GetScalarType<T[P], AggregateLocation[P]>
  }




  export type LocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocationWhereInput
    orderBy?: LocationOrderByWithAggregationInput | LocationOrderByWithAggregationInput[]
    by: LocationScalarFieldEnum[] | LocationScalarFieldEnum
    having?: LocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationCountAggregateInputType | true
    _avg?: LocationAvgAggregateInputType
    _sum?: LocationSumAggregateInputType
    _min?: LocationMinAggregateInputType
    _max?: LocationMaxAggregateInputType
  }

  export type LocationGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    locationId: string
    name: string
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    locationType: $Enums.LocationType
    lastUpdated: Date
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  type GetLocationGroupByPayload<T extends LocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationGroupByOutputType[P]>
            : GetScalarType<T[P], LocationGroupByOutputType[P]>
        }
      >
    >


  export type LocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    locationId?: boolean
    name?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    locationType?: boolean
    lastUpdated?: boolean
    assignedTrucks?: boolean | Location$assignedTrucksArgs<ExtArgs>
    assignedTrailers?: boolean | Location$assignedTrailersArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type LocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    locationId?: boolean
    name?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    locationType?: boolean
    lastUpdated?: boolean
  }, ExtArgs["result"]["location"]>

  export type LocationSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    locationId?: boolean
    name?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    locationType?: boolean
    lastUpdated?: boolean
  }

  export type LocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignedTrucks?: boolean | Location$assignedTrucksArgs<ExtArgs>
    assignedTrailers?: boolean | Location$assignedTrailersArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Location"
    objects: {
      assignedTrucks: Prisma.$TruckPayload<ExtArgs>[]
      assignedTrailers: Prisma.$TrailerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      locationId: string
      name: string
      address: string | null
      city: string | null
      state: string | null
      zipCode: string | null
      country: string | null
      latitude: number | null
      longitude: number | null
      locationType: $Enums.LocationType
      lastUpdated: Date
    }, ExtArgs["result"]["location"]>
    composites: {}
  }

  type LocationGetPayload<S extends boolean | null | undefined | LocationDefaultArgs> = $Result.GetResult<Prisma.$LocationPayload, S>

  type LocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LocationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LocationCountAggregateInputType | true
    }

  export interface LocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Location'], meta: { name: 'Location' } }
    /**
     * Find zero or one Location that matches the filter.
     * @param {LocationFindUniqueArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocationFindUniqueArgs>(args: SelectSubset<T, LocationFindUniqueArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Location that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LocationFindUniqueOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocationFindUniqueOrThrowArgs>(args: SelectSubset<T, LocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Location that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocationFindFirstArgs>(args?: SelectSubset<T, LocationFindFirstArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Location that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocationFindFirstOrThrowArgs>(args?: SelectSubset<T, LocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Locations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Locations
     * const locations = await prisma.location.findMany()
     * 
     * // Get first 10 Locations
     * const locations = await prisma.location.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locationWithIdOnly = await prisma.location.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LocationFindManyArgs>(args?: SelectSubset<T, LocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Location.
     * @param {LocationCreateArgs} args - Arguments to create a Location.
     * @example
     * // Create one Location
     * const Location = await prisma.location.create({
     *   data: {
     *     // ... data to create a Location
     *   }
     * })
     * 
     */
    create<T extends LocationCreateArgs>(args: SelectSubset<T, LocationCreateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Locations.
     * @param {LocationCreateManyArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocationCreateManyArgs>(args?: SelectSubset<T, LocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Locations and returns the data saved in the database.
     * @param {LocationCreateManyAndReturnArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocationCreateManyAndReturnArgs>(args?: SelectSubset<T, LocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Location.
     * @param {LocationDeleteArgs} args - Arguments to delete one Location.
     * @example
     * // Delete one Location
     * const Location = await prisma.location.delete({
     *   where: {
     *     // ... filter to delete one Location
     *   }
     * })
     * 
     */
    delete<T extends LocationDeleteArgs>(args: SelectSubset<T, LocationDeleteArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Location.
     * @param {LocationUpdateArgs} args - Arguments to update one Location.
     * @example
     * // Update one Location
     * const location = await prisma.location.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocationUpdateArgs>(args: SelectSubset<T, LocationUpdateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Locations.
     * @param {LocationDeleteManyArgs} args - Arguments to filter Locations to delete.
     * @example
     * // Delete a few Locations
     * const { count } = await prisma.location.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocationDeleteManyArgs>(args?: SelectSubset<T, LocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocationUpdateManyArgs>(args: SelectSubset<T, LocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Location.
     * @param {LocationUpsertArgs} args - Arguments to update or create a Location.
     * @example
     * // Update or create a Location
     * const location = await prisma.location.upsert({
     *   create: {
     *     // ... data to create a Location
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Location we want to update
     *   }
     * })
     */
    upsert<T extends LocationUpsertArgs>(args: SelectSubset<T, LocationUpsertArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationCountArgs} args - Arguments to filter Locations to count.
     * @example
     * // Count the number of Locations
     * const count = await prisma.location.count({
     *   where: {
     *     // ... the filter for the Locations we want to count
     *   }
     * })
    **/
    count<T extends LocationCountArgs>(
      args?: Subset<T, LocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationAggregateArgs>(args: Subset<T, LocationAggregateArgs>): Prisma.PrismaPromise<GetLocationAggregateType<T>>

    /**
     * Group by Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocationGroupByArgs['orderBy'] }
        : { orderBy?: LocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Location model
   */
  readonly fields: LocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Location.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignedTrucks<T extends Location$assignedTrucksArgs<ExtArgs> = {}>(args?: Subset<T, Location$assignedTrucksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findMany"> | Null>
    assignedTrailers<T extends Location$assignedTrailersArgs<ExtArgs> = {}>(args?: Subset<T, Location$assignedTrailersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrailerPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Location model
   */ 
  interface LocationFieldRefs {
    readonly id: FieldRef<"Location", 'String'>
    readonly createdAt: FieldRef<"Location", 'DateTime'>
    readonly updatedAt: FieldRef<"Location", 'DateTime'>
    readonly locationId: FieldRef<"Location", 'String'>
    readonly name: FieldRef<"Location", 'String'>
    readonly address: FieldRef<"Location", 'String'>
    readonly city: FieldRef<"Location", 'String'>
    readonly state: FieldRef<"Location", 'String'>
    readonly zipCode: FieldRef<"Location", 'String'>
    readonly country: FieldRef<"Location", 'String'>
    readonly latitude: FieldRef<"Location", 'Float'>
    readonly longitude: FieldRef<"Location", 'Float'>
    readonly locationType: FieldRef<"Location", 'LocationType'>
    readonly lastUpdated: FieldRef<"Location", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Location findUnique
   */
  export type LocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findUniqueOrThrow
   */
  export type LocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findFirst
   */
  export type LocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findFirstOrThrow
   */
  export type LocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findMany
   */
  export type LocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Locations to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location create
   */
  export type LocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to create a Location.
     */
    data: XOR<LocationCreateInput, LocationUncheckedCreateInput>
  }

  /**
   * Location createMany
   */
  export type LocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location createManyAndReturn
   */
  export type LocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location update
   */
  export type LocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to update a Location.
     */
    data: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
    /**
     * Choose, which Location to update.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location updateMany
   */
  export type LocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Locations.
     */
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyInput>
    /**
     * Filter which Locations to update
     */
    where?: LocationWhereInput
  }

  /**
   * Location upsert
   */
  export type LocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The filter to search for the Location to update in case it exists.
     */
    where: LocationWhereUniqueInput
    /**
     * In case the Location found by the `where` argument doesn't exist, create a new Location with this data.
     */
    create: XOR<LocationCreateInput, LocationUncheckedCreateInput>
    /**
     * In case the Location was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
  }

  /**
   * Location delete
   */
  export type LocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter which Location to delete.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location deleteMany
   */
  export type LocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Locations to delete
     */
    where?: LocationWhereInput
  }

  /**
   * Location.assignedTrucks
   */
  export type Location$assignedTrucksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Truck
     */
    select?: TruckSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckInclude<ExtArgs> | null
    where?: TruckWhereInput
    orderBy?: TruckOrderByWithRelationInput | TruckOrderByWithRelationInput[]
    cursor?: TruckWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TruckScalarFieldEnum | TruckScalarFieldEnum[]
  }

  /**
   * Location.assignedTrailers
   */
  export type Location$assignedTrailersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Trailer
     */
    select?: TrailerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrailerInclude<ExtArgs> | null
    where?: TrailerWhereInput
    orderBy?: TrailerOrderByWithRelationInput | TrailerOrderByWithRelationInput[]
    cursor?: TrailerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TrailerScalarFieldEnum | TrailerScalarFieldEnum[]
  }

  /**
   * Location without action
   */
  export type LocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
  }


  /**
   * Model TruckDocument
   */

  export type AggregateTruckDocument = {
    _count: TruckDocumentCountAggregateOutputType | null
    _avg: TruckDocumentAvgAggregateOutputType | null
    _sum: TruckDocumentSumAggregateOutputType | null
    _min: TruckDocumentMinAggregateOutputType | null
    _max: TruckDocumentMaxAggregateOutputType | null
  }

  export type TruckDocumentAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type TruckDocumentSumAggregateOutputType = {
    fileSize: number | null
  }

  export type TruckDocumentMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    documentType: $Enums.DocumentType | null
    fileName: string | null
    filePath: string | null
    fileSize: number | null
    mimeType: string | null
    description: string | null
    uploadedBy: string | null
    truckId: string | null
    lastUpdated: Date | null
  }

  export type TruckDocumentMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    documentType: $Enums.DocumentType | null
    fileName: string | null
    filePath: string | null
    fileSize: number | null
    mimeType: string | null
    description: string | null
    uploadedBy: string | null
    truckId: string | null
    lastUpdated: Date | null
  }

  export type TruckDocumentCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    documentType: number
    fileName: number
    filePath: number
    fileSize: number
    mimeType: number
    description: number
    uploadedBy: number
    truckId: number
    lastUpdated: number
    _all: number
  }


  export type TruckDocumentAvgAggregateInputType = {
    fileSize?: true
  }

  export type TruckDocumentSumAggregateInputType = {
    fileSize?: true
  }

  export type TruckDocumentMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    documentType?: true
    fileName?: true
    filePath?: true
    fileSize?: true
    mimeType?: true
    description?: true
    uploadedBy?: true
    truckId?: true
    lastUpdated?: true
  }

  export type TruckDocumentMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    documentType?: true
    fileName?: true
    filePath?: true
    fileSize?: true
    mimeType?: true
    description?: true
    uploadedBy?: true
    truckId?: true
    lastUpdated?: true
  }

  export type TruckDocumentCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    documentType?: true
    fileName?: true
    filePath?: true
    fileSize?: true
    mimeType?: true
    description?: true
    uploadedBy?: true
    truckId?: true
    lastUpdated?: true
    _all?: true
  }

  export type TruckDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TruckDocument to aggregate.
     */
    where?: TruckDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TruckDocuments to fetch.
     */
    orderBy?: TruckDocumentOrderByWithRelationInput | TruckDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TruckDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TruckDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TruckDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TruckDocuments
    **/
    _count?: true | TruckDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TruckDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TruckDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TruckDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TruckDocumentMaxAggregateInputType
  }

  export type GetTruckDocumentAggregateType<T extends TruckDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateTruckDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTruckDocument[P]>
      : GetScalarType<T[P], AggregateTruckDocument[P]>
  }




  export type TruckDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TruckDocumentWhereInput
    orderBy?: TruckDocumentOrderByWithAggregationInput | TruckDocumentOrderByWithAggregationInput[]
    by: TruckDocumentScalarFieldEnum[] | TruckDocumentScalarFieldEnum
    having?: TruckDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TruckDocumentCountAggregateInputType | true
    _avg?: TruckDocumentAvgAggregateInputType
    _sum?: TruckDocumentSumAggregateInputType
    _min?: TruckDocumentMinAggregateInputType
    _max?: TruckDocumentMaxAggregateInputType
  }

  export type TruckDocumentGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    documentType: $Enums.DocumentType
    fileName: string
    filePath: string
    fileSize: number | null
    mimeType: string | null
    description: string | null
    uploadedBy: string | null
    truckId: string
    lastUpdated: Date
    _count: TruckDocumentCountAggregateOutputType | null
    _avg: TruckDocumentAvgAggregateOutputType | null
    _sum: TruckDocumentSumAggregateOutputType | null
    _min: TruckDocumentMinAggregateOutputType | null
    _max: TruckDocumentMaxAggregateOutputType | null
  }

  type GetTruckDocumentGroupByPayload<T extends TruckDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TruckDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TruckDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TruckDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], TruckDocumentGroupByOutputType[P]>
        }
      >
    >


  export type TruckDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    documentType?: boolean
    fileName?: boolean
    filePath?: boolean
    fileSize?: boolean
    mimeType?: boolean
    description?: boolean
    uploadedBy?: boolean
    truckId?: boolean
    lastUpdated?: boolean
    truck?: boolean | TruckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["truckDocument"]>

  export type TruckDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    documentType?: boolean
    fileName?: boolean
    filePath?: boolean
    fileSize?: boolean
    mimeType?: boolean
    description?: boolean
    uploadedBy?: boolean
    truckId?: boolean
    lastUpdated?: boolean
    truck?: boolean | TruckDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["truckDocument"]>

  export type TruckDocumentSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    documentType?: boolean
    fileName?: boolean
    filePath?: boolean
    fileSize?: boolean
    mimeType?: boolean
    description?: boolean
    uploadedBy?: boolean
    truckId?: boolean
    lastUpdated?: boolean
  }

  export type TruckDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | TruckDefaultArgs<ExtArgs>
  }
  export type TruckDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    truck?: boolean | TruckDefaultArgs<ExtArgs>
  }

  export type $TruckDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TruckDocument"
    objects: {
      truck: Prisma.$TruckPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      documentType: $Enums.DocumentType
      fileName: string
      filePath: string
      fileSize: number | null
      mimeType: string | null
      description: string | null
      uploadedBy: string | null
      truckId: string
      lastUpdated: Date
    }, ExtArgs["result"]["truckDocument"]>
    composites: {}
  }

  type TruckDocumentGetPayload<S extends boolean | null | undefined | TruckDocumentDefaultArgs> = $Result.GetResult<Prisma.$TruckDocumentPayload, S>

  type TruckDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TruckDocumentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TruckDocumentCountAggregateInputType | true
    }

  export interface TruckDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TruckDocument'], meta: { name: 'TruckDocument' } }
    /**
     * Find zero or one TruckDocument that matches the filter.
     * @param {TruckDocumentFindUniqueArgs} args - Arguments to find a TruckDocument
     * @example
     * // Get one TruckDocument
     * const truckDocument = await prisma.truckDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TruckDocumentFindUniqueArgs>(args: SelectSubset<T, TruckDocumentFindUniqueArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TruckDocument that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TruckDocumentFindUniqueOrThrowArgs} args - Arguments to find a TruckDocument
     * @example
     * // Get one TruckDocument
     * const truckDocument = await prisma.truckDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TruckDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, TruckDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TruckDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckDocumentFindFirstArgs} args - Arguments to find a TruckDocument
     * @example
     * // Get one TruckDocument
     * const truckDocument = await prisma.truckDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TruckDocumentFindFirstArgs>(args?: SelectSubset<T, TruckDocumentFindFirstArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TruckDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckDocumentFindFirstOrThrowArgs} args - Arguments to find a TruckDocument
     * @example
     * // Get one TruckDocument
     * const truckDocument = await prisma.truckDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TruckDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, TruckDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TruckDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TruckDocuments
     * const truckDocuments = await prisma.truckDocument.findMany()
     * 
     * // Get first 10 TruckDocuments
     * const truckDocuments = await prisma.truckDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const truckDocumentWithIdOnly = await prisma.truckDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TruckDocumentFindManyArgs>(args?: SelectSubset<T, TruckDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TruckDocument.
     * @param {TruckDocumentCreateArgs} args - Arguments to create a TruckDocument.
     * @example
     * // Create one TruckDocument
     * const TruckDocument = await prisma.truckDocument.create({
     *   data: {
     *     // ... data to create a TruckDocument
     *   }
     * })
     * 
     */
    create<T extends TruckDocumentCreateArgs>(args: SelectSubset<T, TruckDocumentCreateArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TruckDocuments.
     * @param {TruckDocumentCreateManyArgs} args - Arguments to create many TruckDocuments.
     * @example
     * // Create many TruckDocuments
     * const truckDocument = await prisma.truckDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TruckDocumentCreateManyArgs>(args?: SelectSubset<T, TruckDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TruckDocuments and returns the data saved in the database.
     * @param {TruckDocumentCreateManyAndReturnArgs} args - Arguments to create many TruckDocuments.
     * @example
     * // Create many TruckDocuments
     * const truckDocument = await prisma.truckDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TruckDocuments and only return the `id`
     * const truckDocumentWithIdOnly = await prisma.truckDocument.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TruckDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, TruckDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TruckDocument.
     * @param {TruckDocumentDeleteArgs} args - Arguments to delete one TruckDocument.
     * @example
     * // Delete one TruckDocument
     * const TruckDocument = await prisma.truckDocument.delete({
     *   where: {
     *     // ... filter to delete one TruckDocument
     *   }
     * })
     * 
     */
    delete<T extends TruckDocumentDeleteArgs>(args: SelectSubset<T, TruckDocumentDeleteArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TruckDocument.
     * @param {TruckDocumentUpdateArgs} args - Arguments to update one TruckDocument.
     * @example
     * // Update one TruckDocument
     * const truckDocument = await prisma.truckDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TruckDocumentUpdateArgs>(args: SelectSubset<T, TruckDocumentUpdateArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TruckDocuments.
     * @param {TruckDocumentDeleteManyArgs} args - Arguments to filter TruckDocuments to delete.
     * @example
     * // Delete a few TruckDocuments
     * const { count } = await prisma.truckDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TruckDocumentDeleteManyArgs>(args?: SelectSubset<T, TruckDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TruckDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TruckDocuments
     * const truckDocument = await prisma.truckDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TruckDocumentUpdateManyArgs>(args: SelectSubset<T, TruckDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TruckDocument.
     * @param {TruckDocumentUpsertArgs} args - Arguments to update or create a TruckDocument.
     * @example
     * // Update or create a TruckDocument
     * const truckDocument = await prisma.truckDocument.upsert({
     *   create: {
     *     // ... data to create a TruckDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TruckDocument we want to update
     *   }
     * })
     */
    upsert<T extends TruckDocumentUpsertArgs>(args: SelectSubset<T, TruckDocumentUpsertArgs<ExtArgs>>): Prisma__TruckDocumentClient<$Result.GetResult<Prisma.$TruckDocumentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TruckDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckDocumentCountArgs} args - Arguments to filter TruckDocuments to count.
     * @example
     * // Count the number of TruckDocuments
     * const count = await prisma.truckDocument.count({
     *   where: {
     *     // ... the filter for the TruckDocuments we want to count
     *   }
     * })
    **/
    count<T extends TruckDocumentCountArgs>(
      args?: Subset<T, TruckDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TruckDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TruckDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TruckDocumentAggregateArgs>(args: Subset<T, TruckDocumentAggregateArgs>): Prisma.PrismaPromise<GetTruckDocumentAggregateType<T>>

    /**
     * Group by TruckDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TruckDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TruckDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TruckDocumentGroupByArgs['orderBy'] }
        : { orderBy?: TruckDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TruckDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTruckDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TruckDocument model
   */
  readonly fields: TruckDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TruckDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TruckDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    truck<T extends TruckDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TruckDefaultArgs<ExtArgs>>): Prisma__TruckClient<$Result.GetResult<Prisma.$TruckPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TruckDocument model
   */ 
  interface TruckDocumentFieldRefs {
    readonly id: FieldRef<"TruckDocument", 'String'>
    readonly createdAt: FieldRef<"TruckDocument", 'DateTime'>
    readonly updatedAt: FieldRef<"TruckDocument", 'DateTime'>
    readonly documentType: FieldRef<"TruckDocument", 'DocumentType'>
    readonly fileName: FieldRef<"TruckDocument", 'String'>
    readonly filePath: FieldRef<"TruckDocument", 'String'>
    readonly fileSize: FieldRef<"TruckDocument", 'Int'>
    readonly mimeType: FieldRef<"TruckDocument", 'String'>
    readonly description: FieldRef<"TruckDocument", 'String'>
    readonly uploadedBy: FieldRef<"TruckDocument", 'String'>
    readonly truckId: FieldRef<"TruckDocument", 'String'>
    readonly lastUpdated: FieldRef<"TruckDocument", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TruckDocument findUnique
   */
  export type TruckDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TruckDocument to fetch.
     */
    where: TruckDocumentWhereUniqueInput
  }

  /**
   * TruckDocument findUniqueOrThrow
   */
  export type TruckDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TruckDocument to fetch.
     */
    where: TruckDocumentWhereUniqueInput
  }

  /**
   * TruckDocument findFirst
   */
  export type TruckDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TruckDocument to fetch.
     */
    where?: TruckDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TruckDocuments to fetch.
     */
    orderBy?: TruckDocumentOrderByWithRelationInput | TruckDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TruckDocuments.
     */
    cursor?: TruckDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TruckDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TruckDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TruckDocuments.
     */
    distinct?: TruckDocumentScalarFieldEnum | TruckDocumentScalarFieldEnum[]
  }

  /**
   * TruckDocument findFirstOrThrow
   */
  export type TruckDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TruckDocument to fetch.
     */
    where?: TruckDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TruckDocuments to fetch.
     */
    orderBy?: TruckDocumentOrderByWithRelationInput | TruckDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TruckDocuments.
     */
    cursor?: TruckDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TruckDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TruckDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TruckDocuments.
     */
    distinct?: TruckDocumentScalarFieldEnum | TruckDocumentScalarFieldEnum[]
  }

  /**
   * TruckDocument findMany
   */
  export type TruckDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TruckDocuments to fetch.
     */
    where?: TruckDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TruckDocuments to fetch.
     */
    orderBy?: TruckDocumentOrderByWithRelationInput | TruckDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TruckDocuments.
     */
    cursor?: TruckDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TruckDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TruckDocuments.
     */
    skip?: number
    distinct?: TruckDocumentScalarFieldEnum | TruckDocumentScalarFieldEnum[]
  }

  /**
   * TruckDocument create
   */
  export type TruckDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a TruckDocument.
     */
    data: XOR<TruckDocumentCreateInput, TruckDocumentUncheckedCreateInput>
  }

  /**
   * TruckDocument createMany
   */
  export type TruckDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TruckDocuments.
     */
    data: TruckDocumentCreateManyInput | TruckDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TruckDocument createManyAndReturn
   */
  export type TruckDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TruckDocuments.
     */
    data: TruckDocumentCreateManyInput | TruckDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TruckDocument update
   */
  export type TruckDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a TruckDocument.
     */
    data: XOR<TruckDocumentUpdateInput, TruckDocumentUncheckedUpdateInput>
    /**
     * Choose, which TruckDocument to update.
     */
    where: TruckDocumentWhereUniqueInput
  }

  /**
   * TruckDocument updateMany
   */
  export type TruckDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TruckDocuments.
     */
    data: XOR<TruckDocumentUpdateManyMutationInput, TruckDocumentUncheckedUpdateManyInput>
    /**
     * Filter which TruckDocuments to update
     */
    where?: TruckDocumentWhereInput
  }

  /**
   * TruckDocument upsert
   */
  export type TruckDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the TruckDocument to update in case it exists.
     */
    where: TruckDocumentWhereUniqueInput
    /**
     * In case the TruckDocument found by the `where` argument doesn't exist, create a new TruckDocument with this data.
     */
    create: XOR<TruckDocumentCreateInput, TruckDocumentUncheckedCreateInput>
    /**
     * In case the TruckDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TruckDocumentUpdateInput, TruckDocumentUncheckedUpdateInput>
  }

  /**
   * TruckDocument delete
   */
  export type TruckDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
    /**
     * Filter which TruckDocument to delete.
     */
    where: TruckDocumentWhereUniqueInput
  }

  /**
   * TruckDocument deleteMany
   */
  export type TruckDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TruckDocuments to delete
     */
    where?: TruckDocumentWhereInput
  }

  /**
   * TruckDocument without action
   */
  export type TruckDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TruckDocument
     */
    select?: TruckDocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TruckDocumentInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const TruckScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    vehicleId: 'vehicleId',
    name: 'name',
    vin: 'vin',
    make: 'make',
    model: 'model',
    year: 'year',
    color: 'color',
    engineMake: 'engineMake',
    engineModel: 'engineModel',
    horsepower: 'horsepower',
    transmissionType: 'transmissionType',
    numGears: 'numGears',
    ownershipType: 'ownershipType',
    purchaseDate: 'purchaseDate',
    leaseEndDate: 'leaseEndDate',
    purchasePrice: 'purchasePrice',
    licensePlate: 'licensePlate',
    issuingState: 'issuingState',
    registrationExp: 'registrationExp',
    insurancePolicy: 'insurancePolicy',
    insuranceExp: 'insuranceExp',
    jurisdiction: 'jurisdiction',
    gvwr: 'gvwr',
    gcwr: 'gcwr',
    dotNumber: 'dotNumber',
    status: 'status',
    currentLocation: 'currentLocation',
    assignedYardId: 'assignedYardId',
    odometer: 'odometer',
    odometerUnit: 'odometerUnit',
    engineHours: 'engineHours',
    currentDriverId: 'currentDriverId',
    attachedTrailerId: 'attachedTrailerId',
    currentLoadId: 'currentLoadId',
    lastUpdated: 'lastUpdated'
  };

  export type TruckScalarFieldEnum = (typeof TruckScalarFieldEnum)[keyof typeof TruckScalarFieldEnum]


  export const TrailerScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    trailerId: 'trailerId',
    name: 'name',
    vin: 'vin',
    year: 'year',
    trailerType: 'trailerType',
    length: 'length',
    capacity: 'capacity',
    axleCount: 'axleCount',
    status: 'status',
    currentLocation: 'currentLocation',
    assignedYardId: 'assignedYardId',
    attachedTruckId: 'attachedTruckId',
    currentLoadId: 'currentLoadId',
    lastUpdated: 'lastUpdated'
  };

  export type TrailerScalarFieldEnum = (typeof TrailerScalarFieldEnum)[keyof typeof TrailerScalarFieldEnum]


  export const DriverScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    driverId: 'driverId',
    name: 'name',
    email: 'email',
    phone: 'phone',
    status: 'status',
    operatingBaseCity: 'operatingBaseCity',
    operatingBaseState: 'operatingBaseState',
    assignedFleetId: 'assignedFleetId',
    currentLoadId: 'currentLoadId',
    lastUpdated: 'lastUpdated'
  };

  export type DriverScalarFieldEnum = (typeof DriverScalarFieldEnum)[keyof typeof DriverScalarFieldEnum]


  export const LoadScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    loadId: 'loadId',
    reference: 'reference',
    status: 'status',
    trackingNumber: 'trackingNumber',
    customerId: 'customerId',
    customerName: 'customerName',
    originAddress: 'originAddress',
    originLat: 'originLat',
    originLng: 'originLng',
    destinationAddress: 'destinationAddress',
    destinationLat: 'destinationLat',
    destinationLng: 'destinationLng',
    scheduledPickup: 'scheduledPickup',
    scheduledDelivery: 'scheduledDelivery',
    lastUpdated: 'lastUpdated'
  };

  export type LoadScalarFieldEnum = (typeof LoadScalarFieldEnum)[keyof typeof LoadScalarFieldEnum]


  export const LocationScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    locationId: 'locationId',
    name: 'name',
    address: 'address',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    country: 'country',
    latitude: 'latitude',
    longitude: 'longitude',
    locationType: 'locationType',
    lastUpdated: 'lastUpdated'
  };

  export type LocationScalarFieldEnum = (typeof LocationScalarFieldEnum)[keyof typeof LocationScalarFieldEnum]


  export const TruckDocumentScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    documentType: 'documentType',
    fileName: 'fileName',
    filePath: 'filePath',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    description: 'description',
    uploadedBy: 'uploadedBy',
    truckId: 'truckId',
    lastUpdated: 'lastUpdated'
  };

  export type TruckDocumentScalarFieldEnum = (typeof TruckDocumentScalarFieldEnum)[keyof typeof TruckDocumentScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'TransmissionType'
   */
  export type EnumTransmissionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransmissionType'>
    


  /**
   * Reference to a field of type 'TransmissionType[]'
   */
  export type ListEnumTransmissionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransmissionType[]'>
    


  /**
   * Reference to a field of type 'OwnershipType'
   */
  export type EnumOwnershipTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OwnershipType'>
    


  /**
   * Reference to a field of type 'OwnershipType[]'
   */
  export type ListEnumOwnershipTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OwnershipType[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'TruckStatus'
   */
  export type EnumTruckStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TruckStatus'>
    


  /**
   * Reference to a field of type 'TruckStatus[]'
   */
  export type ListEnumTruckStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TruckStatus[]'>
    


  /**
   * Reference to a field of type 'DistanceUnit'
   */
  export type EnumDistanceUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DistanceUnit'>
    


  /**
   * Reference to a field of type 'DistanceUnit[]'
   */
  export type ListEnumDistanceUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DistanceUnit[]'>
    


  /**
   * Reference to a field of type 'TrailerStatus'
   */
  export type EnumTrailerStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TrailerStatus'>
    


  /**
   * Reference to a field of type 'TrailerStatus[]'
   */
  export type ListEnumTrailerStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TrailerStatus[]'>
    


  /**
   * Reference to a field of type 'DriverStatus'
   */
  export type EnumDriverStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DriverStatus'>
    


  /**
   * Reference to a field of type 'DriverStatus[]'
   */
  export type ListEnumDriverStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DriverStatus[]'>
    


  /**
   * Reference to a field of type 'LoadStatus'
   */
  export type EnumLoadStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LoadStatus'>
    


  /**
   * Reference to a field of type 'LoadStatus[]'
   */
  export type ListEnumLoadStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LoadStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'LocationType'
   */
  export type EnumLocationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LocationType'>
    


  /**
   * Reference to a field of type 'LocationType[]'
   */
  export type ListEnumLocationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LocationType[]'>
    


  /**
   * Reference to a field of type 'DocumentType'
   */
  export type EnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType'>
    


  /**
   * Reference to a field of type 'DocumentType[]'
   */
  export type ListEnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType[]'>
    
  /**
   * Deep Input Types
   */


  export type TruckWhereInput = {
    AND?: TruckWhereInput | TruckWhereInput[]
    OR?: TruckWhereInput[]
    NOT?: TruckWhereInput | TruckWhereInput[]
    id?: StringFilter<"Truck"> | string
    createdAt?: DateTimeFilter<"Truck"> | Date | string
    updatedAt?: DateTimeFilter<"Truck"> | Date | string
    vehicleId?: StringFilter<"Truck"> | string
    name?: StringNullableFilter<"Truck"> | string | null
    vin?: StringFilter<"Truck"> | string
    make?: StringFilter<"Truck"> | string
    model?: StringFilter<"Truck"> | string
    year?: IntFilter<"Truck"> | number
    color?: StringNullableFilter<"Truck"> | string | null
    engineMake?: StringNullableFilter<"Truck"> | string | null
    engineModel?: StringNullableFilter<"Truck"> | string | null
    horsepower?: IntNullableFilter<"Truck"> | number | null
    transmissionType?: EnumTransmissionTypeFilter<"Truck"> | $Enums.TransmissionType
    numGears?: IntNullableFilter<"Truck"> | number | null
    ownershipType?: EnumOwnershipTypeFilter<"Truck"> | $Enums.OwnershipType
    purchaseDate?: DateTimeNullableFilter<"Truck"> | Date | string | null
    leaseEndDate?: DateTimeNullableFilter<"Truck"> | Date | string | null
    purchasePrice?: DecimalNullableFilter<"Truck"> | Decimal | DecimalJsLike | number | string | null
    licensePlate?: StringNullableFilter<"Truck"> | string | null
    issuingState?: StringNullableFilter<"Truck"> | string | null
    registrationExp?: DateTimeNullableFilter<"Truck"> | Date | string | null
    insurancePolicy?: StringNullableFilter<"Truck"> | string | null
    insuranceExp?: DateTimeNullableFilter<"Truck"> | Date | string | null
    jurisdiction?: StringFilter<"Truck"> | string
    gvwr?: IntNullableFilter<"Truck"> | number | null
    gcwr?: IntNullableFilter<"Truck"> | number | null
    dotNumber?: StringNullableFilter<"Truck"> | string | null
    status?: EnumTruckStatusFilter<"Truck"> | $Enums.TruckStatus
    currentLocation?: StringNullableFilter<"Truck"> | string | null
    assignedYardId?: StringNullableFilter<"Truck"> | string | null
    odometer?: IntNullableFilter<"Truck"> | number | null
    odometerUnit?: EnumDistanceUnitFilter<"Truck"> | $Enums.DistanceUnit
    engineHours?: IntNullableFilter<"Truck"> | number | null
    currentDriverId?: StringNullableFilter<"Truck"> | string | null
    attachedTrailerId?: StringNullableFilter<"Truck"> | string | null
    currentLoadId?: StringNullableFilter<"Truck"> | string | null
    lastUpdated?: DateTimeFilter<"Truck"> | Date | string
    assignedYard?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
    currentDriver?: XOR<DriverNullableRelationFilter, DriverWhereInput> | null
    attachedTrailer?: XOR<TrailerNullableRelationFilter, TrailerWhereInput> | null
    currentLoad?: XOR<LoadNullableRelationFilter, LoadWhereInput> | null
    documents?: TruckDocumentListRelationFilter
  }

  export type TruckOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    vehicleId?: SortOrder
    name?: SortOrderInput | SortOrder
    vin?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrderInput | SortOrder
    engineMake?: SortOrderInput | SortOrder
    engineModel?: SortOrderInput | SortOrder
    horsepower?: SortOrderInput | SortOrder
    transmissionType?: SortOrder
    numGears?: SortOrderInput | SortOrder
    ownershipType?: SortOrder
    purchaseDate?: SortOrderInput | SortOrder
    leaseEndDate?: SortOrderInput | SortOrder
    purchasePrice?: SortOrderInput | SortOrder
    licensePlate?: SortOrderInput | SortOrder
    issuingState?: SortOrderInput | SortOrder
    registrationExp?: SortOrderInput | SortOrder
    insurancePolicy?: SortOrderInput | SortOrder
    insuranceExp?: SortOrderInput | SortOrder
    jurisdiction?: SortOrder
    gvwr?: SortOrderInput | SortOrder
    gcwr?: SortOrderInput | SortOrder
    dotNumber?: SortOrderInput | SortOrder
    status?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    assignedYardId?: SortOrderInput | SortOrder
    odometer?: SortOrderInput | SortOrder
    odometerUnit?: SortOrder
    engineHours?: SortOrderInput | SortOrder
    currentDriverId?: SortOrderInput | SortOrder
    attachedTrailerId?: SortOrderInput | SortOrder
    currentLoadId?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
    assignedYard?: LocationOrderByWithRelationInput
    currentDriver?: DriverOrderByWithRelationInput
    attachedTrailer?: TrailerOrderByWithRelationInput
    currentLoad?: LoadOrderByWithRelationInput
    documents?: TruckDocumentOrderByRelationAggregateInput
  }

  export type TruckWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    vehicleId?: string
    vin?: string
    attachedTrailerId?: string
    AND?: TruckWhereInput | TruckWhereInput[]
    OR?: TruckWhereInput[]
    NOT?: TruckWhereInput | TruckWhereInput[]
    createdAt?: DateTimeFilter<"Truck"> | Date | string
    updatedAt?: DateTimeFilter<"Truck"> | Date | string
    name?: StringNullableFilter<"Truck"> | string | null
    make?: StringFilter<"Truck"> | string
    model?: StringFilter<"Truck"> | string
    year?: IntFilter<"Truck"> | number
    color?: StringNullableFilter<"Truck"> | string | null
    engineMake?: StringNullableFilter<"Truck"> | string | null
    engineModel?: StringNullableFilter<"Truck"> | string | null
    horsepower?: IntNullableFilter<"Truck"> | number | null
    transmissionType?: EnumTransmissionTypeFilter<"Truck"> | $Enums.TransmissionType
    numGears?: IntNullableFilter<"Truck"> | number | null
    ownershipType?: EnumOwnershipTypeFilter<"Truck"> | $Enums.OwnershipType
    purchaseDate?: DateTimeNullableFilter<"Truck"> | Date | string | null
    leaseEndDate?: DateTimeNullableFilter<"Truck"> | Date | string | null
    purchasePrice?: DecimalNullableFilter<"Truck"> | Decimal | DecimalJsLike | number | string | null
    licensePlate?: StringNullableFilter<"Truck"> | string | null
    issuingState?: StringNullableFilter<"Truck"> | string | null
    registrationExp?: DateTimeNullableFilter<"Truck"> | Date | string | null
    insurancePolicy?: StringNullableFilter<"Truck"> | string | null
    insuranceExp?: DateTimeNullableFilter<"Truck"> | Date | string | null
    jurisdiction?: StringFilter<"Truck"> | string
    gvwr?: IntNullableFilter<"Truck"> | number | null
    gcwr?: IntNullableFilter<"Truck"> | number | null
    dotNumber?: StringNullableFilter<"Truck"> | string | null
    status?: EnumTruckStatusFilter<"Truck"> | $Enums.TruckStatus
    currentLocation?: StringNullableFilter<"Truck"> | string | null
    assignedYardId?: StringNullableFilter<"Truck"> | string | null
    odometer?: IntNullableFilter<"Truck"> | number | null
    odometerUnit?: EnumDistanceUnitFilter<"Truck"> | $Enums.DistanceUnit
    engineHours?: IntNullableFilter<"Truck"> | number | null
    currentDriverId?: StringNullableFilter<"Truck"> | string | null
    currentLoadId?: StringNullableFilter<"Truck"> | string | null
    lastUpdated?: DateTimeFilter<"Truck"> | Date | string
    assignedYard?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
    currentDriver?: XOR<DriverNullableRelationFilter, DriverWhereInput> | null
    attachedTrailer?: XOR<TrailerNullableRelationFilter, TrailerWhereInput> | null
    currentLoad?: XOR<LoadNullableRelationFilter, LoadWhereInput> | null
    documents?: TruckDocumentListRelationFilter
  }, "id" | "vehicleId" | "vin" | "attachedTrailerId">

  export type TruckOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    vehicleId?: SortOrder
    name?: SortOrderInput | SortOrder
    vin?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrderInput | SortOrder
    engineMake?: SortOrderInput | SortOrder
    engineModel?: SortOrderInput | SortOrder
    horsepower?: SortOrderInput | SortOrder
    transmissionType?: SortOrder
    numGears?: SortOrderInput | SortOrder
    ownershipType?: SortOrder
    purchaseDate?: SortOrderInput | SortOrder
    leaseEndDate?: SortOrderInput | SortOrder
    purchasePrice?: SortOrderInput | SortOrder
    licensePlate?: SortOrderInput | SortOrder
    issuingState?: SortOrderInput | SortOrder
    registrationExp?: SortOrderInput | SortOrder
    insurancePolicy?: SortOrderInput | SortOrder
    insuranceExp?: SortOrderInput | SortOrder
    jurisdiction?: SortOrder
    gvwr?: SortOrderInput | SortOrder
    gcwr?: SortOrderInput | SortOrder
    dotNumber?: SortOrderInput | SortOrder
    status?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    assignedYardId?: SortOrderInput | SortOrder
    odometer?: SortOrderInput | SortOrder
    odometerUnit?: SortOrder
    engineHours?: SortOrderInput | SortOrder
    currentDriverId?: SortOrderInput | SortOrder
    attachedTrailerId?: SortOrderInput | SortOrder
    currentLoadId?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
    _count?: TruckCountOrderByAggregateInput
    _avg?: TruckAvgOrderByAggregateInput
    _max?: TruckMaxOrderByAggregateInput
    _min?: TruckMinOrderByAggregateInput
    _sum?: TruckSumOrderByAggregateInput
  }

  export type TruckScalarWhereWithAggregatesInput = {
    AND?: TruckScalarWhereWithAggregatesInput | TruckScalarWhereWithAggregatesInput[]
    OR?: TruckScalarWhereWithAggregatesInput[]
    NOT?: TruckScalarWhereWithAggregatesInput | TruckScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Truck"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Truck"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Truck"> | Date | string
    vehicleId?: StringWithAggregatesFilter<"Truck"> | string
    name?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    vin?: StringWithAggregatesFilter<"Truck"> | string
    make?: StringWithAggregatesFilter<"Truck"> | string
    model?: StringWithAggregatesFilter<"Truck"> | string
    year?: IntWithAggregatesFilter<"Truck"> | number
    color?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    engineMake?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    engineModel?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    horsepower?: IntNullableWithAggregatesFilter<"Truck"> | number | null
    transmissionType?: EnumTransmissionTypeWithAggregatesFilter<"Truck"> | $Enums.TransmissionType
    numGears?: IntNullableWithAggregatesFilter<"Truck"> | number | null
    ownershipType?: EnumOwnershipTypeWithAggregatesFilter<"Truck"> | $Enums.OwnershipType
    purchaseDate?: DateTimeNullableWithAggregatesFilter<"Truck"> | Date | string | null
    leaseEndDate?: DateTimeNullableWithAggregatesFilter<"Truck"> | Date | string | null
    purchasePrice?: DecimalNullableWithAggregatesFilter<"Truck"> | Decimal | DecimalJsLike | number | string | null
    licensePlate?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    issuingState?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    registrationExp?: DateTimeNullableWithAggregatesFilter<"Truck"> | Date | string | null
    insurancePolicy?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    insuranceExp?: DateTimeNullableWithAggregatesFilter<"Truck"> | Date | string | null
    jurisdiction?: StringWithAggregatesFilter<"Truck"> | string
    gvwr?: IntNullableWithAggregatesFilter<"Truck"> | number | null
    gcwr?: IntNullableWithAggregatesFilter<"Truck"> | number | null
    dotNumber?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    status?: EnumTruckStatusWithAggregatesFilter<"Truck"> | $Enums.TruckStatus
    currentLocation?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    assignedYardId?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    odometer?: IntNullableWithAggregatesFilter<"Truck"> | number | null
    odometerUnit?: EnumDistanceUnitWithAggregatesFilter<"Truck"> | $Enums.DistanceUnit
    engineHours?: IntNullableWithAggregatesFilter<"Truck"> | number | null
    currentDriverId?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    attachedTrailerId?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    currentLoadId?: StringNullableWithAggregatesFilter<"Truck"> | string | null
    lastUpdated?: DateTimeWithAggregatesFilter<"Truck"> | Date | string
  }

  export type TrailerWhereInput = {
    AND?: TrailerWhereInput | TrailerWhereInput[]
    OR?: TrailerWhereInput[]
    NOT?: TrailerWhereInput | TrailerWhereInput[]
    id?: StringFilter<"Trailer"> | string
    createdAt?: DateTimeFilter<"Trailer"> | Date | string
    updatedAt?: DateTimeFilter<"Trailer"> | Date | string
    trailerId?: StringFilter<"Trailer"> | string
    name?: StringNullableFilter<"Trailer"> | string | null
    vin?: StringFilter<"Trailer"> | string
    year?: IntNullableFilter<"Trailer"> | number | null
    trailerType?: StringNullableFilter<"Trailer"> | string | null
    length?: IntNullableFilter<"Trailer"> | number | null
    capacity?: IntNullableFilter<"Trailer"> | number | null
    axleCount?: IntNullableFilter<"Trailer"> | number | null
    status?: EnumTrailerStatusFilter<"Trailer"> | $Enums.TrailerStatus
    currentLocation?: StringNullableFilter<"Trailer"> | string | null
    assignedYardId?: StringNullableFilter<"Trailer"> | string | null
    attachedTruckId?: StringNullableFilter<"Trailer"> | string | null
    currentLoadId?: StringNullableFilter<"Trailer"> | string | null
    lastUpdated?: DateTimeFilter<"Trailer"> | Date | string
    assignedYard?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
    attachedTruck?: XOR<TruckNullableRelationFilter, TruckWhereInput> | null
    currentLoad?: XOR<LoadNullableRelationFilter, LoadWhereInput> | null
  }

  export type TrailerOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    trailerId?: SortOrder
    name?: SortOrderInput | SortOrder
    vin?: SortOrder
    year?: SortOrderInput | SortOrder
    trailerType?: SortOrderInput | SortOrder
    length?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    axleCount?: SortOrderInput | SortOrder
    status?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    assignedYardId?: SortOrderInput | SortOrder
    attachedTruckId?: SortOrderInput | SortOrder
    currentLoadId?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
    assignedYard?: LocationOrderByWithRelationInput
    attachedTruck?: TruckOrderByWithRelationInput
    currentLoad?: LoadOrderByWithRelationInput
  }

  export type TrailerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    trailerId?: string
    vin?: string
    attachedTruckId?: string
    AND?: TrailerWhereInput | TrailerWhereInput[]
    OR?: TrailerWhereInput[]
    NOT?: TrailerWhereInput | TrailerWhereInput[]
    createdAt?: DateTimeFilter<"Trailer"> | Date | string
    updatedAt?: DateTimeFilter<"Trailer"> | Date | string
    name?: StringNullableFilter<"Trailer"> | string | null
    year?: IntNullableFilter<"Trailer"> | number | null
    trailerType?: StringNullableFilter<"Trailer"> | string | null
    length?: IntNullableFilter<"Trailer"> | number | null
    capacity?: IntNullableFilter<"Trailer"> | number | null
    axleCount?: IntNullableFilter<"Trailer"> | number | null
    status?: EnumTrailerStatusFilter<"Trailer"> | $Enums.TrailerStatus
    currentLocation?: StringNullableFilter<"Trailer"> | string | null
    assignedYardId?: StringNullableFilter<"Trailer"> | string | null
    currentLoadId?: StringNullableFilter<"Trailer"> | string | null
    lastUpdated?: DateTimeFilter<"Trailer"> | Date | string
    assignedYard?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
    attachedTruck?: XOR<TruckNullableRelationFilter, TruckWhereInput> | null
    currentLoad?: XOR<LoadNullableRelationFilter, LoadWhereInput> | null
  }, "id" | "trailerId" | "vin" | "attachedTruckId">

  export type TrailerOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    trailerId?: SortOrder
    name?: SortOrderInput | SortOrder
    vin?: SortOrder
    year?: SortOrderInput | SortOrder
    trailerType?: SortOrderInput | SortOrder
    length?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    axleCount?: SortOrderInput | SortOrder
    status?: SortOrder
    currentLocation?: SortOrderInput | SortOrder
    assignedYardId?: SortOrderInput | SortOrder
    attachedTruckId?: SortOrderInput | SortOrder
    currentLoadId?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
    _count?: TrailerCountOrderByAggregateInput
    _avg?: TrailerAvgOrderByAggregateInput
    _max?: TrailerMaxOrderByAggregateInput
    _min?: TrailerMinOrderByAggregateInput
    _sum?: TrailerSumOrderByAggregateInput
  }

  export type TrailerScalarWhereWithAggregatesInput = {
    AND?: TrailerScalarWhereWithAggregatesInput | TrailerScalarWhereWithAggregatesInput[]
    OR?: TrailerScalarWhereWithAggregatesInput[]
    NOT?: TrailerScalarWhereWithAggregatesInput | TrailerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Trailer"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Trailer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Trailer"> | Date | string
    trailerId?: StringWithAggregatesFilter<"Trailer"> | string
    name?: StringNullableWithAggregatesFilter<"Trailer"> | string | null
    vin?: StringWithAggregatesFilter<"Trailer"> | string
    year?: IntNullableWithAggregatesFilter<"Trailer"> | number | null
    trailerType?: StringNullableWithAggregatesFilter<"Trailer"> | string | null
    length?: IntNullableWithAggregatesFilter<"Trailer"> | number | null
    capacity?: IntNullableWithAggregatesFilter<"Trailer"> | number | null
    axleCount?: IntNullableWithAggregatesFilter<"Trailer"> | number | null
    status?: EnumTrailerStatusWithAggregatesFilter<"Trailer"> | $Enums.TrailerStatus
    currentLocation?: StringNullableWithAggregatesFilter<"Trailer"> | string | null
    assignedYardId?: StringNullableWithAggregatesFilter<"Trailer"> | string | null
    attachedTruckId?: StringNullableWithAggregatesFilter<"Trailer"> | string | null
    currentLoadId?: StringNullableWithAggregatesFilter<"Trailer"> | string | null
    lastUpdated?: DateTimeWithAggregatesFilter<"Trailer"> | Date | string
  }

  export type DriverWhereInput = {
    AND?: DriverWhereInput | DriverWhereInput[]
    OR?: DriverWhereInput[]
    NOT?: DriverWhereInput | DriverWhereInput[]
    id?: StringFilter<"Driver"> | string
    createdAt?: DateTimeFilter<"Driver"> | Date | string
    updatedAt?: DateTimeFilter<"Driver"> | Date | string
    driverId?: StringFilter<"Driver"> | string
    name?: StringFilter<"Driver"> | string
    email?: StringNullableFilter<"Driver"> | string | null
    phone?: StringNullableFilter<"Driver"> | string | null
    status?: EnumDriverStatusFilter<"Driver"> | $Enums.DriverStatus
    operatingBaseCity?: StringNullableFilter<"Driver"> | string | null
    operatingBaseState?: StringNullableFilter<"Driver"> | string | null
    assignedFleetId?: StringNullableFilter<"Driver"> | string | null
    currentLoadId?: StringNullableFilter<"Driver"> | string | null
    lastUpdated?: DateTimeFilter<"Driver"> | Date | string
    assignedTrucks?: TruckListRelationFilter
    currentLoad?: XOR<LoadNullableRelationFilter, LoadWhereInput> | null
  }

  export type DriverOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverId?: SortOrder
    name?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    status?: SortOrder
    operatingBaseCity?: SortOrderInput | SortOrder
    operatingBaseState?: SortOrderInput | SortOrder
    assignedFleetId?: SortOrderInput | SortOrder
    currentLoadId?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
    assignedTrucks?: TruckOrderByRelationAggregateInput
    currentLoad?: LoadOrderByWithRelationInput
  }

  export type DriverWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    driverId?: string
    AND?: DriverWhereInput | DriverWhereInput[]
    OR?: DriverWhereInput[]
    NOT?: DriverWhereInput | DriverWhereInput[]
    createdAt?: DateTimeFilter<"Driver"> | Date | string
    updatedAt?: DateTimeFilter<"Driver"> | Date | string
    name?: StringFilter<"Driver"> | string
    email?: StringNullableFilter<"Driver"> | string | null
    phone?: StringNullableFilter<"Driver"> | string | null
    status?: EnumDriverStatusFilter<"Driver"> | $Enums.DriverStatus
    operatingBaseCity?: StringNullableFilter<"Driver"> | string | null
    operatingBaseState?: StringNullableFilter<"Driver"> | string | null
    assignedFleetId?: StringNullableFilter<"Driver"> | string | null
    currentLoadId?: StringNullableFilter<"Driver"> | string | null
    lastUpdated?: DateTimeFilter<"Driver"> | Date | string
    assignedTrucks?: TruckListRelationFilter
    currentLoad?: XOR<LoadNullableRelationFilter, LoadWhereInput> | null
  }, "id" | "driverId">

  export type DriverOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverId?: SortOrder
    name?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    status?: SortOrder
    operatingBaseCity?: SortOrderInput | SortOrder
    operatingBaseState?: SortOrderInput | SortOrder
    assignedFleetId?: SortOrderInput | SortOrder
    currentLoadId?: SortOrderInput | SortOrder
    lastUpdated?: SortOrder
    _count?: DriverCountOrderByAggregateInput
    _max?: DriverMaxOrderByAggregateInput
    _min?: DriverMinOrderByAggregateInput
  }

  export type DriverScalarWhereWithAggregatesInput = {
    AND?: DriverScalarWhereWithAggregatesInput | DriverScalarWhereWithAggregatesInput[]
    OR?: DriverScalarWhereWithAggregatesInput[]
    NOT?: DriverScalarWhereWithAggregatesInput | DriverScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Driver"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Driver"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Driver"> | Date | string
    driverId?: StringWithAggregatesFilter<"Driver"> | string
    name?: StringWithAggregatesFilter<"Driver"> | string
    email?: StringNullableWithAggregatesFilter<"Driver"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Driver"> | string | null
    status?: EnumDriverStatusWithAggregatesFilter<"Driver"> | $Enums.DriverStatus
    operatingBaseCity?: StringNullableWithAggregatesFilter<"Driver"> | string | null
    operatingBaseState?: StringNullableWithAggregatesFilter<"Driver"> | string | null
    assignedFleetId?: StringNullableWithAggregatesFilter<"Driver"> | string | null
    currentLoadId?: StringNullableWithAggregatesFilter<"Driver"> | string | null
    lastUpdated?: DateTimeWithAggregatesFilter<"Driver"> | Date | string
  }

  export type LoadWhereInput = {
    AND?: LoadWhereInput | LoadWhereInput[]
    OR?: LoadWhereInput[]
    NOT?: LoadWhereInput | LoadWhereInput[]
    id?: StringFilter<"Load"> | string
    createdAt?: DateTimeFilter<"Load"> | Date | string
    updatedAt?: DateTimeFilter<"Load"> | Date | string
    loadId?: StringFilter<"Load"> | string
    reference?: StringFilter<"Load"> | string
    status?: EnumLoadStatusFilter<"Load"> | $Enums.LoadStatus
    trackingNumber?: StringFilter<"Load"> | string
    customerId?: StringFilter<"Load"> | string
    customerName?: StringFilter<"Load"> | string
    originAddress?: StringFilter<"Load"> | string
    originLat?: FloatNullableFilter<"Load"> | number | null
    originLng?: FloatNullableFilter<"Load"> | number | null
    destinationAddress?: StringFilter<"Load"> | string
    destinationLat?: FloatNullableFilter<"Load"> | number | null
    destinationLng?: FloatNullableFilter<"Load"> | number | null
    scheduledPickup?: DateTimeFilter<"Load"> | Date | string
    scheduledDelivery?: DateTimeFilter<"Load"> | Date | string
    lastUpdated?: DateTimeFilter<"Load"> | Date | string
    assignedTrucks?: TruckListRelationFilter
    assignedTrailers?: TrailerListRelationFilter
    assignedDrivers?: DriverListRelationFilter
  }

  export type LoadOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    loadId?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    trackingNumber?: SortOrder
    customerId?: SortOrder
    customerName?: SortOrder
    originAddress?: SortOrder
    originLat?: SortOrderInput | SortOrder
    originLng?: SortOrderInput | SortOrder
    destinationAddress?: SortOrder
    destinationLat?: SortOrderInput | SortOrder
    destinationLng?: SortOrderInput | SortOrder
    scheduledPickup?: SortOrder
    scheduledDelivery?: SortOrder
    lastUpdated?: SortOrder
    assignedTrucks?: TruckOrderByRelationAggregateInput
    assignedTrailers?: TrailerOrderByRelationAggregateInput
    assignedDrivers?: DriverOrderByRelationAggregateInput
  }

  export type LoadWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    loadId?: string
    trackingNumber?: string
    AND?: LoadWhereInput | LoadWhereInput[]
    OR?: LoadWhereInput[]
    NOT?: LoadWhereInput | LoadWhereInput[]
    createdAt?: DateTimeFilter<"Load"> | Date | string
    updatedAt?: DateTimeFilter<"Load"> | Date | string
    reference?: StringFilter<"Load"> | string
    status?: EnumLoadStatusFilter<"Load"> | $Enums.LoadStatus
    customerId?: StringFilter<"Load"> | string
    customerName?: StringFilter<"Load"> | string
    originAddress?: StringFilter<"Load"> | string
    originLat?: FloatNullableFilter<"Load"> | number | null
    originLng?: FloatNullableFilter<"Load"> | number | null
    destinationAddress?: StringFilter<"Load"> | string
    destinationLat?: FloatNullableFilter<"Load"> | number | null
    destinationLng?: FloatNullableFilter<"Load"> | number | null
    scheduledPickup?: DateTimeFilter<"Load"> | Date | string
    scheduledDelivery?: DateTimeFilter<"Load"> | Date | string
    lastUpdated?: DateTimeFilter<"Load"> | Date | string
    assignedTrucks?: TruckListRelationFilter
    assignedTrailers?: TrailerListRelationFilter
    assignedDrivers?: DriverListRelationFilter
  }, "id" | "loadId" | "trackingNumber">

  export type LoadOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    loadId?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    trackingNumber?: SortOrder
    customerId?: SortOrder
    customerName?: SortOrder
    originAddress?: SortOrder
    originLat?: SortOrderInput | SortOrder
    originLng?: SortOrderInput | SortOrder
    destinationAddress?: SortOrder
    destinationLat?: SortOrderInput | SortOrder
    destinationLng?: SortOrderInput | SortOrder
    scheduledPickup?: SortOrder
    scheduledDelivery?: SortOrder
    lastUpdated?: SortOrder
    _count?: LoadCountOrderByAggregateInput
    _avg?: LoadAvgOrderByAggregateInput
    _max?: LoadMaxOrderByAggregateInput
    _min?: LoadMinOrderByAggregateInput
    _sum?: LoadSumOrderByAggregateInput
  }

  export type LoadScalarWhereWithAggregatesInput = {
    AND?: LoadScalarWhereWithAggregatesInput | LoadScalarWhereWithAggregatesInput[]
    OR?: LoadScalarWhereWithAggregatesInput[]
    NOT?: LoadScalarWhereWithAggregatesInput | LoadScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Load"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Load"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Load"> | Date | string
    loadId?: StringWithAggregatesFilter<"Load"> | string
    reference?: StringWithAggregatesFilter<"Load"> | string
    status?: EnumLoadStatusWithAggregatesFilter<"Load"> | $Enums.LoadStatus
    trackingNumber?: StringWithAggregatesFilter<"Load"> | string
    customerId?: StringWithAggregatesFilter<"Load"> | string
    customerName?: StringWithAggregatesFilter<"Load"> | string
    originAddress?: StringWithAggregatesFilter<"Load"> | string
    originLat?: FloatNullableWithAggregatesFilter<"Load"> | number | null
    originLng?: FloatNullableWithAggregatesFilter<"Load"> | number | null
    destinationAddress?: StringWithAggregatesFilter<"Load"> | string
    destinationLat?: FloatNullableWithAggregatesFilter<"Load"> | number | null
    destinationLng?: FloatNullableWithAggregatesFilter<"Load"> | number | null
    scheduledPickup?: DateTimeWithAggregatesFilter<"Load"> | Date | string
    scheduledDelivery?: DateTimeWithAggregatesFilter<"Load"> | Date | string
    lastUpdated?: DateTimeWithAggregatesFilter<"Load"> | Date | string
  }

  export type LocationWhereInput = {
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    id?: StringFilter<"Location"> | string
    createdAt?: DateTimeFilter<"Location"> | Date | string
    updatedAt?: DateTimeFilter<"Location"> | Date | string
    locationId?: StringFilter<"Location"> | string
    name?: StringFilter<"Location"> | string
    address?: StringNullableFilter<"Location"> | string | null
    city?: StringNullableFilter<"Location"> | string | null
    state?: StringNullableFilter<"Location"> | string | null
    zipCode?: StringNullableFilter<"Location"> | string | null
    country?: StringNullableFilter<"Location"> | string | null
    latitude?: FloatNullableFilter<"Location"> | number | null
    longitude?: FloatNullableFilter<"Location"> | number | null
    locationType?: EnumLocationTypeFilter<"Location"> | $Enums.LocationType
    lastUpdated?: DateTimeFilter<"Location"> | Date | string
    assignedTrucks?: TruckListRelationFilter
    assignedTrailers?: TrailerListRelationFilter
  }

  export type LocationOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    locationId?: SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    locationType?: SortOrder
    lastUpdated?: SortOrder
    assignedTrucks?: TruckOrderByRelationAggregateInput
    assignedTrailers?: TrailerOrderByRelationAggregateInput
  }

  export type LocationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    locationId?: string
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    createdAt?: DateTimeFilter<"Location"> | Date | string
    updatedAt?: DateTimeFilter<"Location"> | Date | string
    name?: StringFilter<"Location"> | string
    address?: StringNullableFilter<"Location"> | string | null
    city?: StringNullableFilter<"Location"> | string | null
    state?: StringNullableFilter<"Location"> | string | null
    zipCode?: StringNullableFilter<"Location"> | string | null
    country?: StringNullableFilter<"Location"> | string | null
    latitude?: FloatNullableFilter<"Location"> | number | null
    longitude?: FloatNullableFilter<"Location"> | number | null
    locationType?: EnumLocationTypeFilter<"Location"> | $Enums.LocationType
    lastUpdated?: DateTimeFilter<"Location"> | Date | string
    assignedTrucks?: TruckListRelationFilter
    assignedTrailers?: TrailerListRelationFilter
  }, "id" | "locationId">

  export type LocationOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    locationId?: SortOrder
    name?: SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    locationType?: SortOrder
    lastUpdated?: SortOrder
    _count?: LocationCountOrderByAggregateInput
    _avg?: LocationAvgOrderByAggregateInput
    _max?: LocationMaxOrderByAggregateInput
    _min?: LocationMinOrderByAggregateInput
    _sum?: LocationSumOrderByAggregateInput
  }

  export type LocationScalarWhereWithAggregatesInput = {
    AND?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    OR?: LocationScalarWhereWithAggregatesInput[]
    NOT?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Location"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Location"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Location"> | Date | string
    locationId?: StringWithAggregatesFilter<"Location"> | string
    name?: StringWithAggregatesFilter<"Location"> | string
    address?: StringNullableWithAggregatesFilter<"Location"> | string | null
    city?: StringNullableWithAggregatesFilter<"Location"> | string | null
    state?: StringNullableWithAggregatesFilter<"Location"> | string | null
    zipCode?: StringNullableWithAggregatesFilter<"Location"> | string | null
    country?: StringNullableWithAggregatesFilter<"Location"> | string | null
    latitude?: FloatNullableWithAggregatesFilter<"Location"> | number | null
    longitude?: FloatNullableWithAggregatesFilter<"Location"> | number | null
    locationType?: EnumLocationTypeWithAggregatesFilter<"Location"> | $Enums.LocationType
    lastUpdated?: DateTimeWithAggregatesFilter<"Location"> | Date | string
  }

  export type TruckDocumentWhereInput = {
    AND?: TruckDocumentWhereInput | TruckDocumentWhereInput[]
    OR?: TruckDocumentWhereInput[]
    NOT?: TruckDocumentWhereInput | TruckDocumentWhereInput[]
    id?: StringFilter<"TruckDocument"> | string
    createdAt?: DateTimeFilter<"TruckDocument"> | Date | string
    updatedAt?: DateTimeFilter<"TruckDocument"> | Date | string
    documentType?: EnumDocumentTypeFilter<"TruckDocument"> | $Enums.DocumentType
    fileName?: StringFilter<"TruckDocument"> | string
    filePath?: StringFilter<"TruckDocument"> | string
    fileSize?: IntNullableFilter<"TruckDocument"> | number | null
    mimeType?: StringNullableFilter<"TruckDocument"> | string | null
    description?: StringNullableFilter<"TruckDocument"> | string | null
    uploadedBy?: StringNullableFilter<"TruckDocument"> | string | null
    truckId?: StringFilter<"TruckDocument"> | string
    lastUpdated?: DateTimeFilter<"TruckDocument"> | Date | string
    truck?: XOR<TruckRelationFilter, TruckWhereInput>
  }

  export type TruckDocumentOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    uploadedBy?: SortOrderInput | SortOrder
    truckId?: SortOrder
    lastUpdated?: SortOrder
    truck?: TruckOrderByWithRelationInput
  }

  export type TruckDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TruckDocumentWhereInput | TruckDocumentWhereInput[]
    OR?: TruckDocumentWhereInput[]
    NOT?: TruckDocumentWhereInput | TruckDocumentWhereInput[]
    createdAt?: DateTimeFilter<"TruckDocument"> | Date | string
    updatedAt?: DateTimeFilter<"TruckDocument"> | Date | string
    documentType?: EnumDocumentTypeFilter<"TruckDocument"> | $Enums.DocumentType
    fileName?: StringFilter<"TruckDocument"> | string
    filePath?: StringFilter<"TruckDocument"> | string
    fileSize?: IntNullableFilter<"TruckDocument"> | number | null
    mimeType?: StringNullableFilter<"TruckDocument"> | string | null
    description?: StringNullableFilter<"TruckDocument"> | string | null
    uploadedBy?: StringNullableFilter<"TruckDocument"> | string | null
    truckId?: StringFilter<"TruckDocument"> | string
    lastUpdated?: DateTimeFilter<"TruckDocument"> | Date | string
    truck?: XOR<TruckRelationFilter, TruckWhereInput>
  }, "id">

  export type TruckDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    uploadedBy?: SortOrderInput | SortOrder
    truckId?: SortOrder
    lastUpdated?: SortOrder
    _count?: TruckDocumentCountOrderByAggregateInput
    _avg?: TruckDocumentAvgOrderByAggregateInput
    _max?: TruckDocumentMaxOrderByAggregateInput
    _min?: TruckDocumentMinOrderByAggregateInput
    _sum?: TruckDocumentSumOrderByAggregateInput
  }

  export type TruckDocumentScalarWhereWithAggregatesInput = {
    AND?: TruckDocumentScalarWhereWithAggregatesInput | TruckDocumentScalarWhereWithAggregatesInput[]
    OR?: TruckDocumentScalarWhereWithAggregatesInput[]
    NOT?: TruckDocumentScalarWhereWithAggregatesInput | TruckDocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TruckDocument"> | string
    createdAt?: DateTimeWithAggregatesFilter<"TruckDocument"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TruckDocument"> | Date | string
    documentType?: EnumDocumentTypeWithAggregatesFilter<"TruckDocument"> | $Enums.DocumentType
    fileName?: StringWithAggregatesFilter<"TruckDocument"> | string
    filePath?: StringWithAggregatesFilter<"TruckDocument"> | string
    fileSize?: IntNullableWithAggregatesFilter<"TruckDocument"> | number | null
    mimeType?: StringNullableWithAggregatesFilter<"TruckDocument"> | string | null
    description?: StringNullableWithAggregatesFilter<"TruckDocument"> | string | null
    uploadedBy?: StringNullableWithAggregatesFilter<"TruckDocument"> | string | null
    truckId?: StringWithAggregatesFilter<"TruckDocument"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"TruckDocument"> | Date | string
  }

  export type TruckCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrucksInput
    currentDriver?: DriverCreateNestedOneWithoutAssignedTrucksInput
    attachedTrailer?: TrailerCreateNestedOneWithoutAttachedTruckInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrucksInput
    documents?: TruckDocumentCreateNestedManyWithoutTruckInput
  }

  export type TruckUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
    attachedTrailer?: TrailerUncheckedCreateNestedOneWithoutAttachedTruckInput
    documents?: TruckDocumentUncheckedCreateNestedManyWithoutTruckInput
  }

  export type TruckUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrucksNestedInput
    currentDriver?: DriverUpdateOneWithoutAssignedTrucksNestedInput
    attachedTrailer?: TrailerUpdateOneWithoutAttachedTruckNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrucksNestedInput
    documents?: TruckDocumentUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    attachedTrailer?: TrailerUncheckedUpdateOneWithoutAttachedTruckNestedInput
    documents?: TruckDocumentUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type TruckCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TruckUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrailersInput
    attachedTruck?: TruckCreateNestedOneWithoutAttachedTrailerInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrailersInput
  }

  export type TrailerUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    attachedTruckId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TrailerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrailersNestedInput
    attachedTruck?: TruckUpdateOneWithoutAttachedTrailerNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrailersNestedInput
  }

  export type TrailerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTruckId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    attachedTruckId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TrailerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTruckId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    lastUpdated?: Date | string
    assignedTrucks?: TruckCreateNestedManyWithoutCurrentDriverInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedDriversInput
  }

  export type DriverUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
    assignedTrucks?: TruckUncheckedCreateNestedManyWithoutCurrentDriverInput
  }

  export type DriverUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUpdateManyWithoutCurrentDriverNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedDriversNestedInput
  }

  export type DriverUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUncheckedUpdateManyWithoutCurrentDriverNestedInput
  }

  export type DriverCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type DriverUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LoadCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrucks?: TruckCreateNestedManyWithoutCurrentLoadInput
    assignedTrailers?: TrailerCreateNestedManyWithoutCurrentLoadInput
    assignedDrivers?: DriverCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrucks?: TruckUncheckedCreateNestedManyWithoutCurrentLoadInput
    assignedTrailers?: TrailerUncheckedCreateNestedManyWithoutCurrentLoadInput
    assignedDrivers?: DriverUncheckedCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUpdateManyWithoutCurrentLoadNestedInput
    assignedTrailers?: TrailerUpdateManyWithoutCurrentLoadNestedInput
    assignedDrivers?: DriverUpdateManyWithoutCurrentLoadNestedInput
  }

  export type LoadUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUncheckedUpdateManyWithoutCurrentLoadNestedInput
    assignedTrailers?: TrailerUncheckedUpdateManyWithoutCurrentLoadNestedInput
    assignedDrivers?: DriverUncheckedUpdateManyWithoutCurrentLoadNestedInput
  }

  export type LoadCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
  }

  export type LoadUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LoadUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LocationCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    locationId: string
    name: string
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    locationType?: $Enums.LocationType
    lastUpdated?: Date | string
    assignedTrucks?: TruckCreateNestedManyWithoutAssignedYardInput
    assignedTrailers?: TrailerCreateNestedManyWithoutAssignedYardInput
  }

  export type LocationUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    locationId: string
    name: string
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    locationType?: $Enums.LocationType
    lastUpdated?: Date | string
    assignedTrucks?: TruckUncheckedCreateNestedManyWithoutAssignedYardInput
    assignedTrailers?: TrailerUncheckedCreateNestedManyWithoutAssignedYardInput
  }

  export type LocationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUpdateManyWithoutAssignedYardNestedInput
    assignedTrailers?: TrailerUpdateManyWithoutAssignedYardNestedInput
  }

  export type LocationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUncheckedUpdateManyWithoutAssignedYardNestedInput
    assignedTrailers?: TrailerUncheckedUpdateManyWithoutAssignedYardNestedInput
  }

  export type LocationCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    locationId: string
    name: string
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    locationType?: $Enums.LocationType
    lastUpdated?: Date | string
  }

  export type LocationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LocationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckDocumentCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    documentType: $Enums.DocumentType
    fileName: string
    filePath: string
    fileSize?: number | null
    mimeType?: string | null
    description?: string | null
    uploadedBy?: string | null
    lastUpdated?: Date | string
    truck: TruckCreateNestedOneWithoutDocumentsInput
  }

  export type TruckDocumentUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    documentType: $Enums.DocumentType
    fileName: string
    filePath: string
    fileSize?: number | null
    mimeType?: string | null
    description?: string | null
    uploadedBy?: string | null
    truckId: string
    lastUpdated?: Date | string
  }

  export type TruckDocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    fileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    truck?: TruckUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type TruckDocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    fileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedBy?: NullableStringFieldUpdateOperationsInput | string | null
    truckId?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckDocumentCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    documentType: $Enums.DocumentType
    fileName: string
    filePath: string
    fileSize?: number | null
    mimeType?: string | null
    description?: string | null
    uploadedBy?: string | null
    truckId: string
    lastUpdated?: Date | string
  }

  export type TruckDocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    fileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckDocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    fileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedBy?: NullableStringFieldUpdateOperationsInput | string | null
    truckId?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumTransmissionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransmissionType | EnumTransmissionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransmissionTypeFilter<$PrismaModel> | $Enums.TransmissionType
  }

  export type EnumOwnershipTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OwnershipType | EnumOwnershipTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOwnershipTypeFilter<$PrismaModel> | $Enums.OwnershipType
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumTruckStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TruckStatus | EnumTruckStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTruckStatusFilter<$PrismaModel> | $Enums.TruckStatus
  }

  export type EnumDistanceUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitFilter<$PrismaModel> | $Enums.DistanceUnit
  }

  export type LocationNullableRelationFilter = {
    is?: LocationWhereInput | null
    isNot?: LocationWhereInput | null
  }

  export type DriverNullableRelationFilter = {
    is?: DriverWhereInput | null
    isNot?: DriverWhereInput | null
  }

  export type TrailerNullableRelationFilter = {
    is?: TrailerWhereInput | null
    isNot?: TrailerWhereInput | null
  }

  export type LoadNullableRelationFilter = {
    is?: LoadWhereInput | null
    isNot?: LoadWhereInput | null
  }

  export type TruckDocumentListRelationFilter = {
    every?: TruckDocumentWhereInput
    some?: TruckDocumentWhereInput
    none?: TruckDocumentWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type TruckDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TruckCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    vehicleId?: SortOrder
    name?: SortOrder
    vin?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrder
    engineMake?: SortOrder
    engineModel?: SortOrder
    horsepower?: SortOrder
    transmissionType?: SortOrder
    numGears?: SortOrder
    ownershipType?: SortOrder
    purchaseDate?: SortOrder
    leaseEndDate?: SortOrder
    purchasePrice?: SortOrder
    licensePlate?: SortOrder
    issuingState?: SortOrder
    registrationExp?: SortOrder
    insurancePolicy?: SortOrder
    insuranceExp?: SortOrder
    jurisdiction?: SortOrder
    gvwr?: SortOrder
    gcwr?: SortOrder
    dotNumber?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrder
    assignedYardId?: SortOrder
    odometer?: SortOrder
    odometerUnit?: SortOrder
    engineHours?: SortOrder
    currentDriverId?: SortOrder
    attachedTrailerId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TruckAvgOrderByAggregateInput = {
    year?: SortOrder
    horsepower?: SortOrder
    numGears?: SortOrder
    purchasePrice?: SortOrder
    gvwr?: SortOrder
    gcwr?: SortOrder
    odometer?: SortOrder
    engineHours?: SortOrder
  }

  export type TruckMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    vehicleId?: SortOrder
    name?: SortOrder
    vin?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrder
    engineMake?: SortOrder
    engineModel?: SortOrder
    horsepower?: SortOrder
    transmissionType?: SortOrder
    numGears?: SortOrder
    ownershipType?: SortOrder
    purchaseDate?: SortOrder
    leaseEndDate?: SortOrder
    purchasePrice?: SortOrder
    licensePlate?: SortOrder
    issuingState?: SortOrder
    registrationExp?: SortOrder
    insurancePolicy?: SortOrder
    insuranceExp?: SortOrder
    jurisdiction?: SortOrder
    gvwr?: SortOrder
    gcwr?: SortOrder
    dotNumber?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrder
    assignedYardId?: SortOrder
    odometer?: SortOrder
    odometerUnit?: SortOrder
    engineHours?: SortOrder
    currentDriverId?: SortOrder
    attachedTrailerId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TruckMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    vehicleId?: SortOrder
    name?: SortOrder
    vin?: SortOrder
    make?: SortOrder
    model?: SortOrder
    year?: SortOrder
    color?: SortOrder
    engineMake?: SortOrder
    engineModel?: SortOrder
    horsepower?: SortOrder
    transmissionType?: SortOrder
    numGears?: SortOrder
    ownershipType?: SortOrder
    purchaseDate?: SortOrder
    leaseEndDate?: SortOrder
    purchasePrice?: SortOrder
    licensePlate?: SortOrder
    issuingState?: SortOrder
    registrationExp?: SortOrder
    insurancePolicy?: SortOrder
    insuranceExp?: SortOrder
    jurisdiction?: SortOrder
    gvwr?: SortOrder
    gcwr?: SortOrder
    dotNumber?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrder
    assignedYardId?: SortOrder
    odometer?: SortOrder
    odometerUnit?: SortOrder
    engineHours?: SortOrder
    currentDriverId?: SortOrder
    attachedTrailerId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TruckSumOrderByAggregateInput = {
    year?: SortOrder
    horsepower?: SortOrder
    numGears?: SortOrder
    purchasePrice?: SortOrder
    gvwr?: SortOrder
    gcwr?: SortOrder
    odometer?: SortOrder
    engineHours?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumTransmissionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransmissionType | EnumTransmissionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransmissionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransmissionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransmissionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransmissionTypeFilter<$PrismaModel>
  }

  export type EnumOwnershipTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OwnershipType | EnumOwnershipTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOwnershipTypeWithAggregatesFilter<$PrismaModel> | $Enums.OwnershipType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOwnershipTypeFilter<$PrismaModel>
    _max?: NestedEnumOwnershipTypeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumTruckStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TruckStatus | EnumTruckStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTruckStatusWithAggregatesFilter<$PrismaModel> | $Enums.TruckStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTruckStatusFilter<$PrismaModel>
    _max?: NestedEnumTruckStatusFilter<$PrismaModel>
  }

  export type EnumDistanceUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitWithAggregatesFilter<$PrismaModel> | $Enums.DistanceUnit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDistanceUnitFilter<$PrismaModel>
    _max?: NestedEnumDistanceUnitFilter<$PrismaModel>
  }

  export type EnumTrailerStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TrailerStatus | EnumTrailerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTrailerStatusFilter<$PrismaModel> | $Enums.TrailerStatus
  }

  export type TruckNullableRelationFilter = {
    is?: TruckWhereInput | null
    isNot?: TruckWhereInput | null
  }

  export type TrailerCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    trailerId?: SortOrder
    name?: SortOrder
    vin?: SortOrder
    year?: SortOrder
    trailerType?: SortOrder
    length?: SortOrder
    capacity?: SortOrder
    axleCount?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrder
    assignedYardId?: SortOrder
    attachedTruckId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TrailerAvgOrderByAggregateInput = {
    year?: SortOrder
    length?: SortOrder
    capacity?: SortOrder
    axleCount?: SortOrder
  }

  export type TrailerMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    trailerId?: SortOrder
    name?: SortOrder
    vin?: SortOrder
    year?: SortOrder
    trailerType?: SortOrder
    length?: SortOrder
    capacity?: SortOrder
    axleCount?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrder
    assignedYardId?: SortOrder
    attachedTruckId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TrailerMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    trailerId?: SortOrder
    name?: SortOrder
    vin?: SortOrder
    year?: SortOrder
    trailerType?: SortOrder
    length?: SortOrder
    capacity?: SortOrder
    axleCount?: SortOrder
    status?: SortOrder
    currentLocation?: SortOrder
    assignedYardId?: SortOrder
    attachedTruckId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TrailerSumOrderByAggregateInput = {
    year?: SortOrder
    length?: SortOrder
    capacity?: SortOrder
    axleCount?: SortOrder
  }

  export type EnumTrailerStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TrailerStatus | EnumTrailerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTrailerStatusWithAggregatesFilter<$PrismaModel> | $Enums.TrailerStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTrailerStatusFilter<$PrismaModel>
    _max?: NestedEnumTrailerStatusFilter<$PrismaModel>
  }

  export type EnumDriverStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusFilter<$PrismaModel> | $Enums.DriverStatus
  }

  export type TruckListRelationFilter = {
    every?: TruckWhereInput
    some?: TruckWhereInput
    none?: TruckWhereInput
  }

  export type TruckOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DriverCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverId?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    status?: SortOrder
    operatingBaseCity?: SortOrder
    operatingBaseState?: SortOrder
    assignedFleetId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type DriverMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverId?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    status?: SortOrder
    operatingBaseCity?: SortOrder
    operatingBaseState?: SortOrder
    assignedFleetId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type DriverMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverId?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    status?: SortOrder
    operatingBaseCity?: SortOrder
    operatingBaseState?: SortOrder
    assignedFleetId?: SortOrder
    currentLoadId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type EnumDriverStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusWithAggregatesFilter<$PrismaModel> | $Enums.DriverStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDriverStatusFilter<$PrismaModel>
    _max?: NestedEnumDriverStatusFilter<$PrismaModel>
  }

  export type EnumLoadStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LoadStatus | EnumLoadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLoadStatusFilter<$PrismaModel> | $Enums.LoadStatus
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type TrailerListRelationFilter = {
    every?: TrailerWhereInput
    some?: TrailerWhereInput
    none?: TrailerWhereInput
  }

  export type DriverListRelationFilter = {
    every?: DriverWhereInput
    some?: DriverWhereInput
    none?: DriverWhereInput
  }

  export type TrailerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DriverOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LoadCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    loadId?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    trackingNumber?: SortOrder
    customerId?: SortOrder
    customerName?: SortOrder
    originAddress?: SortOrder
    originLat?: SortOrder
    originLng?: SortOrder
    destinationAddress?: SortOrder
    destinationLat?: SortOrder
    destinationLng?: SortOrder
    scheduledPickup?: SortOrder
    scheduledDelivery?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LoadAvgOrderByAggregateInput = {
    originLat?: SortOrder
    originLng?: SortOrder
    destinationLat?: SortOrder
    destinationLng?: SortOrder
  }

  export type LoadMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    loadId?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    trackingNumber?: SortOrder
    customerId?: SortOrder
    customerName?: SortOrder
    originAddress?: SortOrder
    originLat?: SortOrder
    originLng?: SortOrder
    destinationAddress?: SortOrder
    destinationLat?: SortOrder
    destinationLng?: SortOrder
    scheduledPickup?: SortOrder
    scheduledDelivery?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LoadMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    loadId?: SortOrder
    reference?: SortOrder
    status?: SortOrder
    trackingNumber?: SortOrder
    customerId?: SortOrder
    customerName?: SortOrder
    originAddress?: SortOrder
    originLat?: SortOrder
    originLng?: SortOrder
    destinationAddress?: SortOrder
    destinationLat?: SortOrder
    destinationLng?: SortOrder
    scheduledPickup?: SortOrder
    scheduledDelivery?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LoadSumOrderByAggregateInput = {
    originLat?: SortOrder
    originLng?: SortOrder
    destinationLat?: SortOrder
    destinationLng?: SortOrder
  }

  export type EnumLoadStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LoadStatus | EnumLoadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLoadStatusWithAggregatesFilter<$PrismaModel> | $Enums.LoadStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLoadStatusFilter<$PrismaModel>
    _max?: NestedEnumLoadStatusFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumLocationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LocationType | EnumLocationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLocationTypeFilter<$PrismaModel> | $Enums.LocationType
  }

  export type LocationCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    locationId?: SortOrder
    name?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    locationType?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LocationAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type LocationMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    locationId?: SortOrder
    name?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    locationType?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LocationMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    locationId?: SortOrder
    name?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    locationType?: SortOrder
    lastUpdated?: SortOrder
  }

  export type LocationSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type EnumLocationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LocationType | EnumLocationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLocationTypeWithAggregatesFilter<$PrismaModel> | $Enums.LocationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLocationTypeFilter<$PrismaModel>
    _max?: NestedEnumLocationTypeFilter<$PrismaModel>
  }

  export type EnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type TruckRelationFilter = {
    is?: TruckWhereInput
    isNot?: TruckWhereInput
  }

  export type TruckDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    description?: SortOrder
    uploadedBy?: SortOrder
    truckId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TruckDocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type TruckDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    description?: SortOrder
    uploadedBy?: SortOrder
    truckId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TruckDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    filePath?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    description?: SortOrder
    uploadedBy?: SortOrder
    truckId?: SortOrder
    lastUpdated?: SortOrder
  }

  export type TruckDocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type EnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type LocationCreateNestedOneWithoutAssignedTrucksInput = {
    create?: XOR<LocationCreateWithoutAssignedTrucksInput, LocationUncheckedCreateWithoutAssignedTrucksInput>
    connectOrCreate?: LocationCreateOrConnectWithoutAssignedTrucksInput
    connect?: LocationWhereUniqueInput
  }

  export type DriverCreateNestedOneWithoutAssignedTrucksInput = {
    create?: XOR<DriverCreateWithoutAssignedTrucksInput, DriverUncheckedCreateWithoutAssignedTrucksInput>
    connectOrCreate?: DriverCreateOrConnectWithoutAssignedTrucksInput
    connect?: DriverWhereUniqueInput
  }

  export type TrailerCreateNestedOneWithoutAttachedTruckInput = {
    create?: XOR<TrailerCreateWithoutAttachedTruckInput, TrailerUncheckedCreateWithoutAttachedTruckInput>
    connectOrCreate?: TrailerCreateOrConnectWithoutAttachedTruckInput
    connect?: TrailerWhereUniqueInput
  }

  export type LoadCreateNestedOneWithoutAssignedTrucksInput = {
    create?: XOR<LoadCreateWithoutAssignedTrucksInput, LoadUncheckedCreateWithoutAssignedTrucksInput>
    connectOrCreate?: LoadCreateOrConnectWithoutAssignedTrucksInput
    connect?: LoadWhereUniqueInput
  }

  export type TruckDocumentCreateNestedManyWithoutTruckInput = {
    create?: XOR<TruckDocumentCreateWithoutTruckInput, TruckDocumentUncheckedCreateWithoutTruckInput> | TruckDocumentCreateWithoutTruckInput[] | TruckDocumentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: TruckDocumentCreateOrConnectWithoutTruckInput | TruckDocumentCreateOrConnectWithoutTruckInput[]
    createMany?: TruckDocumentCreateManyTruckInputEnvelope
    connect?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
  }

  export type TrailerUncheckedCreateNestedOneWithoutAttachedTruckInput = {
    create?: XOR<TrailerCreateWithoutAttachedTruckInput, TrailerUncheckedCreateWithoutAttachedTruckInput>
    connectOrCreate?: TrailerCreateOrConnectWithoutAttachedTruckInput
    connect?: TrailerWhereUniqueInput
  }

  export type TruckDocumentUncheckedCreateNestedManyWithoutTruckInput = {
    create?: XOR<TruckDocumentCreateWithoutTruckInput, TruckDocumentUncheckedCreateWithoutTruckInput> | TruckDocumentCreateWithoutTruckInput[] | TruckDocumentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: TruckDocumentCreateOrConnectWithoutTruckInput | TruckDocumentCreateOrConnectWithoutTruckInput[]
    createMany?: TruckDocumentCreateManyTruckInputEnvelope
    connect?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumTransmissionTypeFieldUpdateOperationsInput = {
    set?: $Enums.TransmissionType
  }

  export type EnumOwnershipTypeFieldUpdateOperationsInput = {
    set?: $Enums.OwnershipType
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumTruckStatusFieldUpdateOperationsInput = {
    set?: $Enums.TruckStatus
  }

  export type EnumDistanceUnitFieldUpdateOperationsInput = {
    set?: $Enums.DistanceUnit
  }

  export type LocationUpdateOneWithoutAssignedTrucksNestedInput = {
    create?: XOR<LocationCreateWithoutAssignedTrucksInput, LocationUncheckedCreateWithoutAssignedTrucksInput>
    connectOrCreate?: LocationCreateOrConnectWithoutAssignedTrucksInput
    upsert?: LocationUpsertWithoutAssignedTrucksInput
    disconnect?: LocationWhereInput | boolean
    delete?: LocationWhereInput | boolean
    connect?: LocationWhereUniqueInput
    update?: XOR<XOR<LocationUpdateToOneWithWhereWithoutAssignedTrucksInput, LocationUpdateWithoutAssignedTrucksInput>, LocationUncheckedUpdateWithoutAssignedTrucksInput>
  }

  export type DriverUpdateOneWithoutAssignedTrucksNestedInput = {
    create?: XOR<DriverCreateWithoutAssignedTrucksInput, DriverUncheckedCreateWithoutAssignedTrucksInput>
    connectOrCreate?: DriverCreateOrConnectWithoutAssignedTrucksInput
    upsert?: DriverUpsertWithoutAssignedTrucksInput
    disconnect?: DriverWhereInput | boolean
    delete?: DriverWhereInput | boolean
    connect?: DriverWhereUniqueInput
    update?: XOR<XOR<DriverUpdateToOneWithWhereWithoutAssignedTrucksInput, DriverUpdateWithoutAssignedTrucksInput>, DriverUncheckedUpdateWithoutAssignedTrucksInput>
  }

  export type TrailerUpdateOneWithoutAttachedTruckNestedInput = {
    create?: XOR<TrailerCreateWithoutAttachedTruckInput, TrailerUncheckedCreateWithoutAttachedTruckInput>
    connectOrCreate?: TrailerCreateOrConnectWithoutAttachedTruckInput
    upsert?: TrailerUpsertWithoutAttachedTruckInput
    disconnect?: TrailerWhereInput | boolean
    delete?: TrailerWhereInput | boolean
    connect?: TrailerWhereUniqueInput
    update?: XOR<XOR<TrailerUpdateToOneWithWhereWithoutAttachedTruckInput, TrailerUpdateWithoutAttachedTruckInput>, TrailerUncheckedUpdateWithoutAttachedTruckInput>
  }

  export type LoadUpdateOneWithoutAssignedTrucksNestedInput = {
    create?: XOR<LoadCreateWithoutAssignedTrucksInput, LoadUncheckedCreateWithoutAssignedTrucksInput>
    connectOrCreate?: LoadCreateOrConnectWithoutAssignedTrucksInput
    upsert?: LoadUpsertWithoutAssignedTrucksInput
    disconnect?: LoadWhereInput | boolean
    delete?: LoadWhereInput | boolean
    connect?: LoadWhereUniqueInput
    update?: XOR<XOR<LoadUpdateToOneWithWhereWithoutAssignedTrucksInput, LoadUpdateWithoutAssignedTrucksInput>, LoadUncheckedUpdateWithoutAssignedTrucksInput>
  }

  export type TruckDocumentUpdateManyWithoutTruckNestedInput = {
    create?: XOR<TruckDocumentCreateWithoutTruckInput, TruckDocumentUncheckedCreateWithoutTruckInput> | TruckDocumentCreateWithoutTruckInput[] | TruckDocumentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: TruckDocumentCreateOrConnectWithoutTruckInput | TruckDocumentCreateOrConnectWithoutTruckInput[]
    upsert?: TruckDocumentUpsertWithWhereUniqueWithoutTruckInput | TruckDocumentUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: TruckDocumentCreateManyTruckInputEnvelope
    set?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    disconnect?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    delete?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    connect?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    update?: TruckDocumentUpdateWithWhereUniqueWithoutTruckInput | TruckDocumentUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: TruckDocumentUpdateManyWithWhereWithoutTruckInput | TruckDocumentUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: TruckDocumentScalarWhereInput | TruckDocumentScalarWhereInput[]
  }

  export type TrailerUncheckedUpdateOneWithoutAttachedTruckNestedInput = {
    create?: XOR<TrailerCreateWithoutAttachedTruckInput, TrailerUncheckedCreateWithoutAttachedTruckInput>
    connectOrCreate?: TrailerCreateOrConnectWithoutAttachedTruckInput
    upsert?: TrailerUpsertWithoutAttachedTruckInput
    disconnect?: TrailerWhereInput | boolean
    delete?: TrailerWhereInput | boolean
    connect?: TrailerWhereUniqueInput
    update?: XOR<XOR<TrailerUpdateToOneWithWhereWithoutAttachedTruckInput, TrailerUpdateWithoutAttachedTruckInput>, TrailerUncheckedUpdateWithoutAttachedTruckInput>
  }

  export type TruckDocumentUncheckedUpdateManyWithoutTruckNestedInput = {
    create?: XOR<TruckDocumentCreateWithoutTruckInput, TruckDocumentUncheckedCreateWithoutTruckInput> | TruckDocumentCreateWithoutTruckInput[] | TruckDocumentUncheckedCreateWithoutTruckInput[]
    connectOrCreate?: TruckDocumentCreateOrConnectWithoutTruckInput | TruckDocumentCreateOrConnectWithoutTruckInput[]
    upsert?: TruckDocumentUpsertWithWhereUniqueWithoutTruckInput | TruckDocumentUpsertWithWhereUniqueWithoutTruckInput[]
    createMany?: TruckDocumentCreateManyTruckInputEnvelope
    set?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    disconnect?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    delete?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    connect?: TruckDocumentWhereUniqueInput | TruckDocumentWhereUniqueInput[]
    update?: TruckDocumentUpdateWithWhereUniqueWithoutTruckInput | TruckDocumentUpdateWithWhereUniqueWithoutTruckInput[]
    updateMany?: TruckDocumentUpdateManyWithWhereWithoutTruckInput | TruckDocumentUpdateManyWithWhereWithoutTruckInput[]
    deleteMany?: TruckDocumentScalarWhereInput | TruckDocumentScalarWhereInput[]
  }

  export type LocationCreateNestedOneWithoutAssignedTrailersInput = {
    create?: XOR<LocationCreateWithoutAssignedTrailersInput, LocationUncheckedCreateWithoutAssignedTrailersInput>
    connectOrCreate?: LocationCreateOrConnectWithoutAssignedTrailersInput
    connect?: LocationWhereUniqueInput
  }

  export type TruckCreateNestedOneWithoutAttachedTrailerInput = {
    create?: XOR<TruckCreateWithoutAttachedTrailerInput, TruckUncheckedCreateWithoutAttachedTrailerInput>
    connectOrCreate?: TruckCreateOrConnectWithoutAttachedTrailerInput
    connect?: TruckWhereUniqueInput
  }

  export type LoadCreateNestedOneWithoutAssignedTrailersInput = {
    create?: XOR<LoadCreateWithoutAssignedTrailersInput, LoadUncheckedCreateWithoutAssignedTrailersInput>
    connectOrCreate?: LoadCreateOrConnectWithoutAssignedTrailersInput
    connect?: LoadWhereUniqueInput
  }

  export type EnumTrailerStatusFieldUpdateOperationsInput = {
    set?: $Enums.TrailerStatus
  }

  export type LocationUpdateOneWithoutAssignedTrailersNestedInput = {
    create?: XOR<LocationCreateWithoutAssignedTrailersInput, LocationUncheckedCreateWithoutAssignedTrailersInput>
    connectOrCreate?: LocationCreateOrConnectWithoutAssignedTrailersInput
    upsert?: LocationUpsertWithoutAssignedTrailersInput
    disconnect?: LocationWhereInput | boolean
    delete?: LocationWhereInput | boolean
    connect?: LocationWhereUniqueInput
    update?: XOR<XOR<LocationUpdateToOneWithWhereWithoutAssignedTrailersInput, LocationUpdateWithoutAssignedTrailersInput>, LocationUncheckedUpdateWithoutAssignedTrailersInput>
  }

  export type TruckUpdateOneWithoutAttachedTrailerNestedInput = {
    create?: XOR<TruckCreateWithoutAttachedTrailerInput, TruckUncheckedCreateWithoutAttachedTrailerInput>
    connectOrCreate?: TruckCreateOrConnectWithoutAttachedTrailerInput
    upsert?: TruckUpsertWithoutAttachedTrailerInput
    disconnect?: TruckWhereInput | boolean
    delete?: TruckWhereInput | boolean
    connect?: TruckWhereUniqueInput
    update?: XOR<XOR<TruckUpdateToOneWithWhereWithoutAttachedTrailerInput, TruckUpdateWithoutAttachedTrailerInput>, TruckUncheckedUpdateWithoutAttachedTrailerInput>
  }

  export type LoadUpdateOneWithoutAssignedTrailersNestedInput = {
    create?: XOR<LoadCreateWithoutAssignedTrailersInput, LoadUncheckedCreateWithoutAssignedTrailersInput>
    connectOrCreate?: LoadCreateOrConnectWithoutAssignedTrailersInput
    upsert?: LoadUpsertWithoutAssignedTrailersInput
    disconnect?: LoadWhereInput | boolean
    delete?: LoadWhereInput | boolean
    connect?: LoadWhereUniqueInput
    update?: XOR<XOR<LoadUpdateToOneWithWhereWithoutAssignedTrailersInput, LoadUpdateWithoutAssignedTrailersInput>, LoadUncheckedUpdateWithoutAssignedTrailersInput>
  }

  export type TruckCreateNestedManyWithoutCurrentDriverInput = {
    create?: XOR<TruckCreateWithoutCurrentDriverInput, TruckUncheckedCreateWithoutCurrentDriverInput> | TruckCreateWithoutCurrentDriverInput[] | TruckUncheckedCreateWithoutCurrentDriverInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentDriverInput | TruckCreateOrConnectWithoutCurrentDriverInput[]
    createMany?: TruckCreateManyCurrentDriverInputEnvelope
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
  }

  export type LoadCreateNestedOneWithoutAssignedDriversInput = {
    create?: XOR<LoadCreateWithoutAssignedDriversInput, LoadUncheckedCreateWithoutAssignedDriversInput>
    connectOrCreate?: LoadCreateOrConnectWithoutAssignedDriversInput
    connect?: LoadWhereUniqueInput
  }

  export type TruckUncheckedCreateNestedManyWithoutCurrentDriverInput = {
    create?: XOR<TruckCreateWithoutCurrentDriverInput, TruckUncheckedCreateWithoutCurrentDriverInput> | TruckCreateWithoutCurrentDriverInput[] | TruckUncheckedCreateWithoutCurrentDriverInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentDriverInput | TruckCreateOrConnectWithoutCurrentDriverInput[]
    createMany?: TruckCreateManyCurrentDriverInputEnvelope
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
  }

  export type EnumDriverStatusFieldUpdateOperationsInput = {
    set?: $Enums.DriverStatus
  }

  export type TruckUpdateManyWithoutCurrentDriverNestedInput = {
    create?: XOR<TruckCreateWithoutCurrentDriverInput, TruckUncheckedCreateWithoutCurrentDriverInput> | TruckCreateWithoutCurrentDriverInput[] | TruckUncheckedCreateWithoutCurrentDriverInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentDriverInput | TruckCreateOrConnectWithoutCurrentDriverInput[]
    upsert?: TruckUpsertWithWhereUniqueWithoutCurrentDriverInput | TruckUpsertWithWhereUniqueWithoutCurrentDriverInput[]
    createMany?: TruckCreateManyCurrentDriverInputEnvelope
    set?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    disconnect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    delete?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    update?: TruckUpdateWithWhereUniqueWithoutCurrentDriverInput | TruckUpdateWithWhereUniqueWithoutCurrentDriverInput[]
    updateMany?: TruckUpdateManyWithWhereWithoutCurrentDriverInput | TruckUpdateManyWithWhereWithoutCurrentDriverInput[]
    deleteMany?: TruckScalarWhereInput | TruckScalarWhereInput[]
  }

  export type LoadUpdateOneWithoutAssignedDriversNestedInput = {
    create?: XOR<LoadCreateWithoutAssignedDriversInput, LoadUncheckedCreateWithoutAssignedDriversInput>
    connectOrCreate?: LoadCreateOrConnectWithoutAssignedDriversInput
    upsert?: LoadUpsertWithoutAssignedDriversInput
    disconnect?: LoadWhereInput | boolean
    delete?: LoadWhereInput | boolean
    connect?: LoadWhereUniqueInput
    update?: XOR<XOR<LoadUpdateToOneWithWhereWithoutAssignedDriversInput, LoadUpdateWithoutAssignedDriversInput>, LoadUncheckedUpdateWithoutAssignedDriversInput>
  }

  export type TruckUncheckedUpdateManyWithoutCurrentDriverNestedInput = {
    create?: XOR<TruckCreateWithoutCurrentDriverInput, TruckUncheckedCreateWithoutCurrentDriverInput> | TruckCreateWithoutCurrentDriverInput[] | TruckUncheckedCreateWithoutCurrentDriverInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentDriverInput | TruckCreateOrConnectWithoutCurrentDriverInput[]
    upsert?: TruckUpsertWithWhereUniqueWithoutCurrentDriverInput | TruckUpsertWithWhereUniqueWithoutCurrentDriverInput[]
    createMany?: TruckCreateManyCurrentDriverInputEnvelope
    set?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    disconnect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    delete?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    update?: TruckUpdateWithWhereUniqueWithoutCurrentDriverInput | TruckUpdateWithWhereUniqueWithoutCurrentDriverInput[]
    updateMany?: TruckUpdateManyWithWhereWithoutCurrentDriverInput | TruckUpdateManyWithWhereWithoutCurrentDriverInput[]
    deleteMany?: TruckScalarWhereInput | TruckScalarWhereInput[]
  }

  export type TruckCreateNestedManyWithoutCurrentLoadInput = {
    create?: XOR<TruckCreateWithoutCurrentLoadInput, TruckUncheckedCreateWithoutCurrentLoadInput> | TruckCreateWithoutCurrentLoadInput[] | TruckUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentLoadInput | TruckCreateOrConnectWithoutCurrentLoadInput[]
    createMany?: TruckCreateManyCurrentLoadInputEnvelope
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
  }

  export type TrailerCreateNestedManyWithoutCurrentLoadInput = {
    create?: XOR<TrailerCreateWithoutCurrentLoadInput, TrailerUncheckedCreateWithoutCurrentLoadInput> | TrailerCreateWithoutCurrentLoadInput[] | TrailerUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutCurrentLoadInput | TrailerCreateOrConnectWithoutCurrentLoadInput[]
    createMany?: TrailerCreateManyCurrentLoadInputEnvelope
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
  }

  export type DriverCreateNestedManyWithoutCurrentLoadInput = {
    create?: XOR<DriverCreateWithoutCurrentLoadInput, DriverUncheckedCreateWithoutCurrentLoadInput> | DriverCreateWithoutCurrentLoadInput[] | DriverUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutCurrentLoadInput | DriverCreateOrConnectWithoutCurrentLoadInput[]
    createMany?: DriverCreateManyCurrentLoadInputEnvelope
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
  }

  export type TruckUncheckedCreateNestedManyWithoutCurrentLoadInput = {
    create?: XOR<TruckCreateWithoutCurrentLoadInput, TruckUncheckedCreateWithoutCurrentLoadInput> | TruckCreateWithoutCurrentLoadInput[] | TruckUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentLoadInput | TruckCreateOrConnectWithoutCurrentLoadInput[]
    createMany?: TruckCreateManyCurrentLoadInputEnvelope
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
  }

  export type TrailerUncheckedCreateNestedManyWithoutCurrentLoadInput = {
    create?: XOR<TrailerCreateWithoutCurrentLoadInput, TrailerUncheckedCreateWithoutCurrentLoadInput> | TrailerCreateWithoutCurrentLoadInput[] | TrailerUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutCurrentLoadInput | TrailerCreateOrConnectWithoutCurrentLoadInput[]
    createMany?: TrailerCreateManyCurrentLoadInputEnvelope
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
  }

  export type DriverUncheckedCreateNestedManyWithoutCurrentLoadInput = {
    create?: XOR<DriverCreateWithoutCurrentLoadInput, DriverUncheckedCreateWithoutCurrentLoadInput> | DriverCreateWithoutCurrentLoadInput[] | DriverUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutCurrentLoadInput | DriverCreateOrConnectWithoutCurrentLoadInput[]
    createMany?: DriverCreateManyCurrentLoadInputEnvelope
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
  }

  export type EnumLoadStatusFieldUpdateOperationsInput = {
    set?: $Enums.LoadStatus
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type TruckUpdateManyWithoutCurrentLoadNestedInput = {
    create?: XOR<TruckCreateWithoutCurrentLoadInput, TruckUncheckedCreateWithoutCurrentLoadInput> | TruckCreateWithoutCurrentLoadInput[] | TruckUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentLoadInput | TruckCreateOrConnectWithoutCurrentLoadInput[]
    upsert?: TruckUpsertWithWhereUniqueWithoutCurrentLoadInput | TruckUpsertWithWhereUniqueWithoutCurrentLoadInput[]
    createMany?: TruckCreateManyCurrentLoadInputEnvelope
    set?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    disconnect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    delete?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    update?: TruckUpdateWithWhereUniqueWithoutCurrentLoadInput | TruckUpdateWithWhereUniqueWithoutCurrentLoadInput[]
    updateMany?: TruckUpdateManyWithWhereWithoutCurrentLoadInput | TruckUpdateManyWithWhereWithoutCurrentLoadInput[]
    deleteMany?: TruckScalarWhereInput | TruckScalarWhereInput[]
  }

  export type TrailerUpdateManyWithoutCurrentLoadNestedInput = {
    create?: XOR<TrailerCreateWithoutCurrentLoadInput, TrailerUncheckedCreateWithoutCurrentLoadInput> | TrailerCreateWithoutCurrentLoadInput[] | TrailerUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutCurrentLoadInput | TrailerCreateOrConnectWithoutCurrentLoadInput[]
    upsert?: TrailerUpsertWithWhereUniqueWithoutCurrentLoadInput | TrailerUpsertWithWhereUniqueWithoutCurrentLoadInput[]
    createMany?: TrailerCreateManyCurrentLoadInputEnvelope
    set?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    disconnect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    delete?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    update?: TrailerUpdateWithWhereUniqueWithoutCurrentLoadInput | TrailerUpdateWithWhereUniqueWithoutCurrentLoadInput[]
    updateMany?: TrailerUpdateManyWithWhereWithoutCurrentLoadInput | TrailerUpdateManyWithWhereWithoutCurrentLoadInput[]
    deleteMany?: TrailerScalarWhereInput | TrailerScalarWhereInput[]
  }

  export type DriverUpdateManyWithoutCurrentLoadNestedInput = {
    create?: XOR<DriverCreateWithoutCurrentLoadInput, DriverUncheckedCreateWithoutCurrentLoadInput> | DriverCreateWithoutCurrentLoadInput[] | DriverUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutCurrentLoadInput | DriverCreateOrConnectWithoutCurrentLoadInput[]
    upsert?: DriverUpsertWithWhereUniqueWithoutCurrentLoadInput | DriverUpsertWithWhereUniqueWithoutCurrentLoadInput[]
    createMany?: DriverCreateManyCurrentLoadInputEnvelope
    set?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    disconnect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    delete?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    update?: DriverUpdateWithWhereUniqueWithoutCurrentLoadInput | DriverUpdateWithWhereUniqueWithoutCurrentLoadInput[]
    updateMany?: DriverUpdateManyWithWhereWithoutCurrentLoadInput | DriverUpdateManyWithWhereWithoutCurrentLoadInput[]
    deleteMany?: DriverScalarWhereInput | DriverScalarWhereInput[]
  }

  export type TruckUncheckedUpdateManyWithoutCurrentLoadNestedInput = {
    create?: XOR<TruckCreateWithoutCurrentLoadInput, TruckUncheckedCreateWithoutCurrentLoadInput> | TruckCreateWithoutCurrentLoadInput[] | TruckUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutCurrentLoadInput | TruckCreateOrConnectWithoutCurrentLoadInput[]
    upsert?: TruckUpsertWithWhereUniqueWithoutCurrentLoadInput | TruckUpsertWithWhereUniqueWithoutCurrentLoadInput[]
    createMany?: TruckCreateManyCurrentLoadInputEnvelope
    set?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    disconnect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    delete?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    update?: TruckUpdateWithWhereUniqueWithoutCurrentLoadInput | TruckUpdateWithWhereUniqueWithoutCurrentLoadInput[]
    updateMany?: TruckUpdateManyWithWhereWithoutCurrentLoadInput | TruckUpdateManyWithWhereWithoutCurrentLoadInput[]
    deleteMany?: TruckScalarWhereInput | TruckScalarWhereInput[]
  }

  export type TrailerUncheckedUpdateManyWithoutCurrentLoadNestedInput = {
    create?: XOR<TrailerCreateWithoutCurrentLoadInput, TrailerUncheckedCreateWithoutCurrentLoadInput> | TrailerCreateWithoutCurrentLoadInput[] | TrailerUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutCurrentLoadInput | TrailerCreateOrConnectWithoutCurrentLoadInput[]
    upsert?: TrailerUpsertWithWhereUniqueWithoutCurrentLoadInput | TrailerUpsertWithWhereUniqueWithoutCurrentLoadInput[]
    createMany?: TrailerCreateManyCurrentLoadInputEnvelope
    set?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    disconnect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    delete?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    update?: TrailerUpdateWithWhereUniqueWithoutCurrentLoadInput | TrailerUpdateWithWhereUniqueWithoutCurrentLoadInput[]
    updateMany?: TrailerUpdateManyWithWhereWithoutCurrentLoadInput | TrailerUpdateManyWithWhereWithoutCurrentLoadInput[]
    deleteMany?: TrailerScalarWhereInput | TrailerScalarWhereInput[]
  }

  export type DriverUncheckedUpdateManyWithoutCurrentLoadNestedInput = {
    create?: XOR<DriverCreateWithoutCurrentLoadInput, DriverUncheckedCreateWithoutCurrentLoadInput> | DriverCreateWithoutCurrentLoadInput[] | DriverUncheckedCreateWithoutCurrentLoadInput[]
    connectOrCreate?: DriverCreateOrConnectWithoutCurrentLoadInput | DriverCreateOrConnectWithoutCurrentLoadInput[]
    upsert?: DriverUpsertWithWhereUniqueWithoutCurrentLoadInput | DriverUpsertWithWhereUniqueWithoutCurrentLoadInput[]
    createMany?: DriverCreateManyCurrentLoadInputEnvelope
    set?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    disconnect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    delete?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    connect?: DriverWhereUniqueInput | DriverWhereUniqueInput[]
    update?: DriverUpdateWithWhereUniqueWithoutCurrentLoadInput | DriverUpdateWithWhereUniqueWithoutCurrentLoadInput[]
    updateMany?: DriverUpdateManyWithWhereWithoutCurrentLoadInput | DriverUpdateManyWithWhereWithoutCurrentLoadInput[]
    deleteMany?: DriverScalarWhereInput | DriverScalarWhereInput[]
  }

  export type TruckCreateNestedManyWithoutAssignedYardInput = {
    create?: XOR<TruckCreateWithoutAssignedYardInput, TruckUncheckedCreateWithoutAssignedYardInput> | TruckCreateWithoutAssignedYardInput[] | TruckUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutAssignedYardInput | TruckCreateOrConnectWithoutAssignedYardInput[]
    createMany?: TruckCreateManyAssignedYardInputEnvelope
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
  }

  export type TrailerCreateNestedManyWithoutAssignedYardInput = {
    create?: XOR<TrailerCreateWithoutAssignedYardInput, TrailerUncheckedCreateWithoutAssignedYardInput> | TrailerCreateWithoutAssignedYardInput[] | TrailerUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutAssignedYardInput | TrailerCreateOrConnectWithoutAssignedYardInput[]
    createMany?: TrailerCreateManyAssignedYardInputEnvelope
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
  }

  export type TruckUncheckedCreateNestedManyWithoutAssignedYardInput = {
    create?: XOR<TruckCreateWithoutAssignedYardInput, TruckUncheckedCreateWithoutAssignedYardInput> | TruckCreateWithoutAssignedYardInput[] | TruckUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutAssignedYardInput | TruckCreateOrConnectWithoutAssignedYardInput[]
    createMany?: TruckCreateManyAssignedYardInputEnvelope
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
  }

  export type TrailerUncheckedCreateNestedManyWithoutAssignedYardInput = {
    create?: XOR<TrailerCreateWithoutAssignedYardInput, TrailerUncheckedCreateWithoutAssignedYardInput> | TrailerCreateWithoutAssignedYardInput[] | TrailerUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutAssignedYardInput | TrailerCreateOrConnectWithoutAssignedYardInput[]
    createMany?: TrailerCreateManyAssignedYardInputEnvelope
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
  }

  export type EnumLocationTypeFieldUpdateOperationsInput = {
    set?: $Enums.LocationType
  }

  export type TruckUpdateManyWithoutAssignedYardNestedInput = {
    create?: XOR<TruckCreateWithoutAssignedYardInput, TruckUncheckedCreateWithoutAssignedYardInput> | TruckCreateWithoutAssignedYardInput[] | TruckUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutAssignedYardInput | TruckCreateOrConnectWithoutAssignedYardInput[]
    upsert?: TruckUpsertWithWhereUniqueWithoutAssignedYardInput | TruckUpsertWithWhereUniqueWithoutAssignedYardInput[]
    createMany?: TruckCreateManyAssignedYardInputEnvelope
    set?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    disconnect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    delete?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    update?: TruckUpdateWithWhereUniqueWithoutAssignedYardInput | TruckUpdateWithWhereUniqueWithoutAssignedYardInput[]
    updateMany?: TruckUpdateManyWithWhereWithoutAssignedYardInput | TruckUpdateManyWithWhereWithoutAssignedYardInput[]
    deleteMany?: TruckScalarWhereInput | TruckScalarWhereInput[]
  }

  export type TrailerUpdateManyWithoutAssignedYardNestedInput = {
    create?: XOR<TrailerCreateWithoutAssignedYardInput, TrailerUncheckedCreateWithoutAssignedYardInput> | TrailerCreateWithoutAssignedYardInput[] | TrailerUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutAssignedYardInput | TrailerCreateOrConnectWithoutAssignedYardInput[]
    upsert?: TrailerUpsertWithWhereUniqueWithoutAssignedYardInput | TrailerUpsertWithWhereUniqueWithoutAssignedYardInput[]
    createMany?: TrailerCreateManyAssignedYardInputEnvelope
    set?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    disconnect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    delete?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    update?: TrailerUpdateWithWhereUniqueWithoutAssignedYardInput | TrailerUpdateWithWhereUniqueWithoutAssignedYardInput[]
    updateMany?: TrailerUpdateManyWithWhereWithoutAssignedYardInput | TrailerUpdateManyWithWhereWithoutAssignedYardInput[]
    deleteMany?: TrailerScalarWhereInput | TrailerScalarWhereInput[]
  }

  export type TruckUncheckedUpdateManyWithoutAssignedYardNestedInput = {
    create?: XOR<TruckCreateWithoutAssignedYardInput, TruckUncheckedCreateWithoutAssignedYardInput> | TruckCreateWithoutAssignedYardInput[] | TruckUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TruckCreateOrConnectWithoutAssignedYardInput | TruckCreateOrConnectWithoutAssignedYardInput[]
    upsert?: TruckUpsertWithWhereUniqueWithoutAssignedYardInput | TruckUpsertWithWhereUniqueWithoutAssignedYardInput[]
    createMany?: TruckCreateManyAssignedYardInputEnvelope
    set?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    disconnect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    delete?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    connect?: TruckWhereUniqueInput | TruckWhereUniqueInput[]
    update?: TruckUpdateWithWhereUniqueWithoutAssignedYardInput | TruckUpdateWithWhereUniqueWithoutAssignedYardInput[]
    updateMany?: TruckUpdateManyWithWhereWithoutAssignedYardInput | TruckUpdateManyWithWhereWithoutAssignedYardInput[]
    deleteMany?: TruckScalarWhereInput | TruckScalarWhereInput[]
  }

  export type TrailerUncheckedUpdateManyWithoutAssignedYardNestedInput = {
    create?: XOR<TrailerCreateWithoutAssignedYardInput, TrailerUncheckedCreateWithoutAssignedYardInput> | TrailerCreateWithoutAssignedYardInput[] | TrailerUncheckedCreateWithoutAssignedYardInput[]
    connectOrCreate?: TrailerCreateOrConnectWithoutAssignedYardInput | TrailerCreateOrConnectWithoutAssignedYardInput[]
    upsert?: TrailerUpsertWithWhereUniqueWithoutAssignedYardInput | TrailerUpsertWithWhereUniqueWithoutAssignedYardInput[]
    createMany?: TrailerCreateManyAssignedYardInputEnvelope
    set?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    disconnect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    delete?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    connect?: TrailerWhereUniqueInput | TrailerWhereUniqueInput[]
    update?: TrailerUpdateWithWhereUniqueWithoutAssignedYardInput | TrailerUpdateWithWhereUniqueWithoutAssignedYardInput[]
    updateMany?: TrailerUpdateManyWithWhereWithoutAssignedYardInput | TrailerUpdateManyWithWhereWithoutAssignedYardInput[]
    deleteMany?: TrailerScalarWhereInput | TrailerScalarWhereInput[]
  }

  export type TruckCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<TruckCreateWithoutDocumentsInput, TruckUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: TruckCreateOrConnectWithoutDocumentsInput
    connect?: TruckWhereUniqueInput
  }

  export type EnumDocumentTypeFieldUpdateOperationsInput = {
    set?: $Enums.DocumentType
  }

  export type TruckUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<TruckCreateWithoutDocumentsInput, TruckUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: TruckCreateOrConnectWithoutDocumentsInput
    upsert?: TruckUpsertWithoutDocumentsInput
    connect?: TruckWhereUniqueInput
    update?: XOR<XOR<TruckUpdateToOneWithWhereWithoutDocumentsInput, TruckUpdateWithoutDocumentsInput>, TruckUncheckedUpdateWithoutDocumentsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumTransmissionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransmissionType | EnumTransmissionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransmissionTypeFilter<$PrismaModel> | $Enums.TransmissionType
  }

  export type NestedEnumOwnershipTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OwnershipType | EnumOwnershipTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOwnershipTypeFilter<$PrismaModel> | $Enums.OwnershipType
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumTruckStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TruckStatus | EnumTruckStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTruckStatusFilter<$PrismaModel> | $Enums.TruckStatus
  }

  export type NestedEnumDistanceUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitFilter<$PrismaModel> | $Enums.DistanceUnit
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumTransmissionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransmissionType | EnumTransmissionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransmissionType[] | ListEnumTransmissionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransmissionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransmissionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransmissionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransmissionTypeFilter<$PrismaModel>
  }

  export type NestedEnumOwnershipTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OwnershipType | EnumOwnershipTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OwnershipType[] | ListEnumOwnershipTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOwnershipTypeWithAggregatesFilter<$PrismaModel> | $Enums.OwnershipType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOwnershipTypeFilter<$PrismaModel>
    _max?: NestedEnumOwnershipTypeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumTruckStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TruckStatus | EnumTruckStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TruckStatus[] | ListEnumTruckStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTruckStatusWithAggregatesFilter<$PrismaModel> | $Enums.TruckStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTruckStatusFilter<$PrismaModel>
    _max?: NestedEnumTruckStatusFilter<$PrismaModel>
  }

  export type NestedEnumDistanceUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DistanceUnit | EnumDistanceUnitFieldRefInput<$PrismaModel>
    in?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.DistanceUnit[] | ListEnumDistanceUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumDistanceUnitWithAggregatesFilter<$PrismaModel> | $Enums.DistanceUnit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDistanceUnitFilter<$PrismaModel>
    _max?: NestedEnumDistanceUnitFilter<$PrismaModel>
  }

  export type NestedEnumTrailerStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TrailerStatus | EnumTrailerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTrailerStatusFilter<$PrismaModel> | $Enums.TrailerStatus
  }

  export type NestedEnumTrailerStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TrailerStatus | EnumTrailerStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TrailerStatus[] | ListEnumTrailerStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTrailerStatusWithAggregatesFilter<$PrismaModel> | $Enums.TrailerStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTrailerStatusFilter<$PrismaModel>
    _max?: NestedEnumTrailerStatusFilter<$PrismaModel>
  }

  export type NestedEnumDriverStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusFilter<$PrismaModel> | $Enums.DriverStatus
  }

  export type NestedEnumDriverStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDriverStatusWithAggregatesFilter<$PrismaModel> | $Enums.DriverStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDriverStatusFilter<$PrismaModel>
    _max?: NestedEnumDriverStatusFilter<$PrismaModel>
  }

  export type NestedEnumLoadStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LoadStatus | EnumLoadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLoadStatusFilter<$PrismaModel> | $Enums.LoadStatus
  }

  export type NestedEnumLoadStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LoadStatus | EnumLoadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoadStatus[] | ListEnumLoadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLoadStatusWithAggregatesFilter<$PrismaModel> | $Enums.LoadStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLoadStatusFilter<$PrismaModel>
    _max?: NestedEnumLoadStatusFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumLocationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LocationType | EnumLocationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLocationTypeFilter<$PrismaModel> | $Enums.LocationType
  }

  export type NestedEnumLocationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LocationType | EnumLocationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LocationType[] | ListEnumLocationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLocationTypeWithAggregatesFilter<$PrismaModel> | $Enums.LocationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLocationTypeFilter<$PrismaModel>
    _max?: NestedEnumLocationTypeFilter<$PrismaModel>
  }

  export type NestedEnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type LocationCreateWithoutAssignedTrucksInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    locationId: string
    name: string
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    locationType?: $Enums.LocationType
    lastUpdated?: Date | string
    assignedTrailers?: TrailerCreateNestedManyWithoutAssignedYardInput
  }

  export type LocationUncheckedCreateWithoutAssignedTrucksInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    locationId: string
    name: string
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    locationType?: $Enums.LocationType
    lastUpdated?: Date | string
    assignedTrailers?: TrailerUncheckedCreateNestedManyWithoutAssignedYardInput
  }

  export type LocationCreateOrConnectWithoutAssignedTrucksInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutAssignedTrucksInput, LocationUncheckedCreateWithoutAssignedTrucksInput>
  }

  export type DriverCreateWithoutAssignedTrucksInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    lastUpdated?: Date | string
    currentLoad?: LoadCreateNestedOneWithoutAssignedDriversInput
  }

  export type DriverUncheckedCreateWithoutAssignedTrucksInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type DriverCreateOrConnectWithoutAssignedTrucksInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutAssignedTrucksInput, DriverUncheckedCreateWithoutAssignedTrucksInput>
  }

  export type TrailerCreateWithoutAttachedTruckInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrailersInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrailersInput
  }

  export type TrailerUncheckedCreateWithoutAttachedTruckInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TrailerCreateOrConnectWithoutAttachedTruckInput = {
    where: TrailerWhereUniqueInput
    create: XOR<TrailerCreateWithoutAttachedTruckInput, TrailerUncheckedCreateWithoutAttachedTruckInput>
  }

  export type LoadCreateWithoutAssignedTrucksInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrailers?: TrailerCreateNestedManyWithoutCurrentLoadInput
    assignedDrivers?: DriverCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadUncheckedCreateWithoutAssignedTrucksInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrailers?: TrailerUncheckedCreateNestedManyWithoutCurrentLoadInput
    assignedDrivers?: DriverUncheckedCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadCreateOrConnectWithoutAssignedTrucksInput = {
    where: LoadWhereUniqueInput
    create: XOR<LoadCreateWithoutAssignedTrucksInput, LoadUncheckedCreateWithoutAssignedTrucksInput>
  }

  export type TruckDocumentCreateWithoutTruckInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    documentType: $Enums.DocumentType
    fileName: string
    filePath: string
    fileSize?: number | null
    mimeType?: string | null
    description?: string | null
    uploadedBy?: string | null
    lastUpdated?: Date | string
  }

  export type TruckDocumentUncheckedCreateWithoutTruckInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    documentType: $Enums.DocumentType
    fileName: string
    filePath: string
    fileSize?: number | null
    mimeType?: string | null
    description?: string | null
    uploadedBy?: string | null
    lastUpdated?: Date | string
  }

  export type TruckDocumentCreateOrConnectWithoutTruckInput = {
    where: TruckDocumentWhereUniqueInput
    create: XOR<TruckDocumentCreateWithoutTruckInput, TruckDocumentUncheckedCreateWithoutTruckInput>
  }

  export type TruckDocumentCreateManyTruckInputEnvelope = {
    data: TruckDocumentCreateManyTruckInput | TruckDocumentCreateManyTruckInput[]
    skipDuplicates?: boolean
  }

  export type LocationUpsertWithoutAssignedTrucksInput = {
    update: XOR<LocationUpdateWithoutAssignedTrucksInput, LocationUncheckedUpdateWithoutAssignedTrucksInput>
    create: XOR<LocationCreateWithoutAssignedTrucksInput, LocationUncheckedCreateWithoutAssignedTrucksInput>
    where?: LocationWhereInput
  }

  export type LocationUpdateToOneWithWhereWithoutAssignedTrucksInput = {
    where?: LocationWhereInput
    data: XOR<LocationUpdateWithoutAssignedTrucksInput, LocationUncheckedUpdateWithoutAssignedTrucksInput>
  }

  export type LocationUpdateWithoutAssignedTrucksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrailers?: TrailerUpdateManyWithoutAssignedYardNestedInput
  }

  export type LocationUncheckedUpdateWithoutAssignedTrucksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrailers?: TrailerUncheckedUpdateManyWithoutAssignedYardNestedInput
  }

  export type DriverUpsertWithoutAssignedTrucksInput = {
    update: XOR<DriverUpdateWithoutAssignedTrucksInput, DriverUncheckedUpdateWithoutAssignedTrucksInput>
    create: XOR<DriverCreateWithoutAssignedTrucksInput, DriverUncheckedCreateWithoutAssignedTrucksInput>
    where?: DriverWhereInput
  }

  export type DriverUpdateToOneWithWhereWithoutAssignedTrucksInput = {
    where?: DriverWhereInput
    data: XOR<DriverUpdateWithoutAssignedTrucksInput, DriverUncheckedUpdateWithoutAssignedTrucksInput>
  }

  export type DriverUpdateWithoutAssignedTrucksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    currentLoad?: LoadUpdateOneWithoutAssignedDriversNestedInput
  }

  export type DriverUncheckedUpdateWithoutAssignedTrucksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerUpsertWithoutAttachedTruckInput = {
    update: XOR<TrailerUpdateWithoutAttachedTruckInput, TrailerUncheckedUpdateWithoutAttachedTruckInput>
    create: XOR<TrailerCreateWithoutAttachedTruckInput, TrailerUncheckedCreateWithoutAttachedTruckInput>
    where?: TrailerWhereInput
  }

  export type TrailerUpdateToOneWithWhereWithoutAttachedTruckInput = {
    where?: TrailerWhereInput
    data: XOR<TrailerUpdateWithoutAttachedTruckInput, TrailerUncheckedUpdateWithoutAttachedTruckInput>
  }

  export type TrailerUpdateWithoutAttachedTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrailersNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrailersNestedInput
  }

  export type TrailerUncheckedUpdateWithoutAttachedTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LoadUpsertWithoutAssignedTrucksInput = {
    update: XOR<LoadUpdateWithoutAssignedTrucksInput, LoadUncheckedUpdateWithoutAssignedTrucksInput>
    create: XOR<LoadCreateWithoutAssignedTrucksInput, LoadUncheckedCreateWithoutAssignedTrucksInput>
    where?: LoadWhereInput
  }

  export type LoadUpdateToOneWithWhereWithoutAssignedTrucksInput = {
    where?: LoadWhereInput
    data: XOR<LoadUpdateWithoutAssignedTrucksInput, LoadUncheckedUpdateWithoutAssignedTrucksInput>
  }

  export type LoadUpdateWithoutAssignedTrucksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrailers?: TrailerUpdateManyWithoutCurrentLoadNestedInput
    assignedDrivers?: DriverUpdateManyWithoutCurrentLoadNestedInput
  }

  export type LoadUncheckedUpdateWithoutAssignedTrucksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrailers?: TrailerUncheckedUpdateManyWithoutCurrentLoadNestedInput
    assignedDrivers?: DriverUncheckedUpdateManyWithoutCurrentLoadNestedInput
  }

  export type TruckDocumentUpsertWithWhereUniqueWithoutTruckInput = {
    where: TruckDocumentWhereUniqueInput
    update: XOR<TruckDocumentUpdateWithoutTruckInput, TruckDocumentUncheckedUpdateWithoutTruckInput>
    create: XOR<TruckDocumentCreateWithoutTruckInput, TruckDocumentUncheckedCreateWithoutTruckInput>
  }

  export type TruckDocumentUpdateWithWhereUniqueWithoutTruckInput = {
    where: TruckDocumentWhereUniqueInput
    data: XOR<TruckDocumentUpdateWithoutTruckInput, TruckDocumentUncheckedUpdateWithoutTruckInput>
  }

  export type TruckDocumentUpdateManyWithWhereWithoutTruckInput = {
    where: TruckDocumentScalarWhereInput
    data: XOR<TruckDocumentUpdateManyMutationInput, TruckDocumentUncheckedUpdateManyWithoutTruckInput>
  }

  export type TruckDocumentScalarWhereInput = {
    AND?: TruckDocumentScalarWhereInput | TruckDocumentScalarWhereInput[]
    OR?: TruckDocumentScalarWhereInput[]
    NOT?: TruckDocumentScalarWhereInput | TruckDocumentScalarWhereInput[]
    id?: StringFilter<"TruckDocument"> | string
    createdAt?: DateTimeFilter<"TruckDocument"> | Date | string
    updatedAt?: DateTimeFilter<"TruckDocument"> | Date | string
    documentType?: EnumDocumentTypeFilter<"TruckDocument"> | $Enums.DocumentType
    fileName?: StringFilter<"TruckDocument"> | string
    filePath?: StringFilter<"TruckDocument"> | string
    fileSize?: IntNullableFilter<"TruckDocument"> | number | null
    mimeType?: StringNullableFilter<"TruckDocument"> | string | null
    description?: StringNullableFilter<"TruckDocument"> | string | null
    uploadedBy?: StringNullableFilter<"TruckDocument"> | string | null
    truckId?: StringFilter<"TruckDocument"> | string
    lastUpdated?: DateTimeFilter<"TruckDocument"> | Date | string
  }

  export type LocationCreateWithoutAssignedTrailersInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    locationId: string
    name: string
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    locationType?: $Enums.LocationType
    lastUpdated?: Date | string
    assignedTrucks?: TruckCreateNestedManyWithoutAssignedYardInput
  }

  export type LocationUncheckedCreateWithoutAssignedTrailersInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    locationId: string
    name: string
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    locationType?: $Enums.LocationType
    lastUpdated?: Date | string
    assignedTrucks?: TruckUncheckedCreateNestedManyWithoutAssignedYardInput
  }

  export type LocationCreateOrConnectWithoutAssignedTrailersInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutAssignedTrailersInput, LocationUncheckedCreateWithoutAssignedTrailersInput>
  }

  export type TruckCreateWithoutAttachedTrailerInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrucksInput
    currentDriver?: DriverCreateNestedOneWithoutAssignedTrucksInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrucksInput
    documents?: TruckDocumentCreateNestedManyWithoutTruckInput
  }

  export type TruckUncheckedCreateWithoutAttachedTrailerInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
    documents?: TruckDocumentUncheckedCreateNestedManyWithoutTruckInput
  }

  export type TruckCreateOrConnectWithoutAttachedTrailerInput = {
    where: TruckWhereUniqueInput
    create: XOR<TruckCreateWithoutAttachedTrailerInput, TruckUncheckedCreateWithoutAttachedTrailerInput>
  }

  export type LoadCreateWithoutAssignedTrailersInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrucks?: TruckCreateNestedManyWithoutCurrentLoadInput
    assignedDrivers?: DriverCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadUncheckedCreateWithoutAssignedTrailersInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrucks?: TruckUncheckedCreateNestedManyWithoutCurrentLoadInput
    assignedDrivers?: DriverUncheckedCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadCreateOrConnectWithoutAssignedTrailersInput = {
    where: LoadWhereUniqueInput
    create: XOR<LoadCreateWithoutAssignedTrailersInput, LoadUncheckedCreateWithoutAssignedTrailersInput>
  }

  export type LocationUpsertWithoutAssignedTrailersInput = {
    update: XOR<LocationUpdateWithoutAssignedTrailersInput, LocationUncheckedUpdateWithoutAssignedTrailersInput>
    create: XOR<LocationCreateWithoutAssignedTrailersInput, LocationUncheckedCreateWithoutAssignedTrailersInput>
    where?: LocationWhereInput
  }

  export type LocationUpdateToOneWithWhereWithoutAssignedTrailersInput = {
    where?: LocationWhereInput
    data: XOR<LocationUpdateWithoutAssignedTrailersInput, LocationUncheckedUpdateWithoutAssignedTrailersInput>
  }

  export type LocationUpdateWithoutAssignedTrailersInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUpdateManyWithoutAssignedYardNestedInput
  }

  export type LocationUncheckedUpdateWithoutAssignedTrailersInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    locationId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationType?: EnumLocationTypeFieldUpdateOperationsInput | $Enums.LocationType
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUncheckedUpdateManyWithoutAssignedYardNestedInput
  }

  export type TruckUpsertWithoutAttachedTrailerInput = {
    update: XOR<TruckUpdateWithoutAttachedTrailerInput, TruckUncheckedUpdateWithoutAttachedTrailerInput>
    create: XOR<TruckCreateWithoutAttachedTrailerInput, TruckUncheckedCreateWithoutAttachedTrailerInput>
    where?: TruckWhereInput
  }

  export type TruckUpdateToOneWithWhereWithoutAttachedTrailerInput = {
    where?: TruckWhereInput
    data: XOR<TruckUpdateWithoutAttachedTrailerInput, TruckUncheckedUpdateWithoutAttachedTrailerInput>
  }

  export type TruckUpdateWithoutAttachedTrailerInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrucksNestedInput
    currentDriver?: DriverUpdateOneWithoutAssignedTrucksNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrucksNestedInput
    documents?: TruckDocumentUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateWithoutAttachedTrailerInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: TruckDocumentUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type LoadUpsertWithoutAssignedTrailersInput = {
    update: XOR<LoadUpdateWithoutAssignedTrailersInput, LoadUncheckedUpdateWithoutAssignedTrailersInput>
    create: XOR<LoadCreateWithoutAssignedTrailersInput, LoadUncheckedCreateWithoutAssignedTrailersInput>
    where?: LoadWhereInput
  }

  export type LoadUpdateToOneWithWhereWithoutAssignedTrailersInput = {
    where?: LoadWhereInput
    data: XOR<LoadUpdateWithoutAssignedTrailersInput, LoadUncheckedUpdateWithoutAssignedTrailersInput>
  }

  export type LoadUpdateWithoutAssignedTrailersInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUpdateManyWithoutCurrentLoadNestedInput
    assignedDrivers?: DriverUpdateManyWithoutCurrentLoadNestedInput
  }

  export type LoadUncheckedUpdateWithoutAssignedTrailersInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUncheckedUpdateManyWithoutCurrentLoadNestedInput
    assignedDrivers?: DriverUncheckedUpdateManyWithoutCurrentLoadNestedInput
  }

  export type TruckCreateWithoutCurrentDriverInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrucksInput
    attachedTrailer?: TrailerCreateNestedOneWithoutAttachedTruckInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrucksInput
    documents?: TruckDocumentCreateNestedManyWithoutTruckInput
  }

  export type TruckUncheckedCreateWithoutCurrentDriverInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
    attachedTrailer?: TrailerUncheckedCreateNestedOneWithoutAttachedTruckInput
    documents?: TruckDocumentUncheckedCreateNestedManyWithoutTruckInput
  }

  export type TruckCreateOrConnectWithoutCurrentDriverInput = {
    where: TruckWhereUniqueInput
    create: XOR<TruckCreateWithoutCurrentDriverInput, TruckUncheckedCreateWithoutCurrentDriverInput>
  }

  export type TruckCreateManyCurrentDriverInputEnvelope = {
    data: TruckCreateManyCurrentDriverInput | TruckCreateManyCurrentDriverInput[]
    skipDuplicates?: boolean
  }

  export type LoadCreateWithoutAssignedDriversInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrucks?: TruckCreateNestedManyWithoutCurrentLoadInput
    assignedTrailers?: TrailerCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadUncheckedCreateWithoutAssignedDriversInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    loadId: string
    reference: string
    status?: $Enums.LoadStatus
    trackingNumber: string
    customerId: string
    customerName: string
    originAddress: string
    originLat?: number | null
    originLng?: number | null
    destinationAddress: string
    destinationLat?: number | null
    destinationLng?: number | null
    scheduledPickup: Date | string
    scheduledDelivery: Date | string
    lastUpdated?: Date | string
    assignedTrucks?: TruckUncheckedCreateNestedManyWithoutCurrentLoadInput
    assignedTrailers?: TrailerUncheckedCreateNestedManyWithoutCurrentLoadInput
  }

  export type LoadCreateOrConnectWithoutAssignedDriversInput = {
    where: LoadWhereUniqueInput
    create: XOR<LoadCreateWithoutAssignedDriversInput, LoadUncheckedCreateWithoutAssignedDriversInput>
  }

  export type TruckUpsertWithWhereUniqueWithoutCurrentDriverInput = {
    where: TruckWhereUniqueInput
    update: XOR<TruckUpdateWithoutCurrentDriverInput, TruckUncheckedUpdateWithoutCurrentDriverInput>
    create: XOR<TruckCreateWithoutCurrentDriverInput, TruckUncheckedCreateWithoutCurrentDriverInput>
  }

  export type TruckUpdateWithWhereUniqueWithoutCurrentDriverInput = {
    where: TruckWhereUniqueInput
    data: XOR<TruckUpdateWithoutCurrentDriverInput, TruckUncheckedUpdateWithoutCurrentDriverInput>
  }

  export type TruckUpdateManyWithWhereWithoutCurrentDriverInput = {
    where: TruckScalarWhereInput
    data: XOR<TruckUpdateManyMutationInput, TruckUncheckedUpdateManyWithoutCurrentDriverInput>
  }

  export type TruckScalarWhereInput = {
    AND?: TruckScalarWhereInput | TruckScalarWhereInput[]
    OR?: TruckScalarWhereInput[]
    NOT?: TruckScalarWhereInput | TruckScalarWhereInput[]
    id?: StringFilter<"Truck"> | string
    createdAt?: DateTimeFilter<"Truck"> | Date | string
    updatedAt?: DateTimeFilter<"Truck"> | Date | string
    vehicleId?: StringFilter<"Truck"> | string
    name?: StringNullableFilter<"Truck"> | string | null
    vin?: StringFilter<"Truck"> | string
    make?: StringFilter<"Truck"> | string
    model?: StringFilter<"Truck"> | string
    year?: IntFilter<"Truck"> | number
    color?: StringNullableFilter<"Truck"> | string | null
    engineMake?: StringNullableFilter<"Truck"> | string | null
    engineModel?: StringNullableFilter<"Truck"> | string | null
    horsepower?: IntNullableFilter<"Truck"> | number | null
    transmissionType?: EnumTransmissionTypeFilter<"Truck"> | $Enums.TransmissionType
    numGears?: IntNullableFilter<"Truck"> | number | null
    ownershipType?: EnumOwnershipTypeFilter<"Truck"> | $Enums.OwnershipType
    purchaseDate?: DateTimeNullableFilter<"Truck"> | Date | string | null
    leaseEndDate?: DateTimeNullableFilter<"Truck"> | Date | string | null
    purchasePrice?: DecimalNullableFilter<"Truck"> | Decimal | DecimalJsLike | number | string | null
    licensePlate?: StringNullableFilter<"Truck"> | string | null
    issuingState?: StringNullableFilter<"Truck"> | string | null
    registrationExp?: DateTimeNullableFilter<"Truck"> | Date | string | null
    insurancePolicy?: StringNullableFilter<"Truck"> | string | null
    insuranceExp?: DateTimeNullableFilter<"Truck"> | Date | string | null
    jurisdiction?: StringFilter<"Truck"> | string
    gvwr?: IntNullableFilter<"Truck"> | number | null
    gcwr?: IntNullableFilter<"Truck"> | number | null
    dotNumber?: StringNullableFilter<"Truck"> | string | null
    status?: EnumTruckStatusFilter<"Truck"> | $Enums.TruckStatus
    currentLocation?: StringNullableFilter<"Truck"> | string | null
    assignedYardId?: StringNullableFilter<"Truck"> | string | null
    odometer?: IntNullableFilter<"Truck"> | number | null
    odometerUnit?: EnumDistanceUnitFilter<"Truck"> | $Enums.DistanceUnit
    engineHours?: IntNullableFilter<"Truck"> | number | null
    currentDriverId?: StringNullableFilter<"Truck"> | string | null
    attachedTrailerId?: StringNullableFilter<"Truck"> | string | null
    currentLoadId?: StringNullableFilter<"Truck"> | string | null
    lastUpdated?: DateTimeFilter<"Truck"> | Date | string
  }

  export type LoadUpsertWithoutAssignedDriversInput = {
    update: XOR<LoadUpdateWithoutAssignedDriversInput, LoadUncheckedUpdateWithoutAssignedDriversInput>
    create: XOR<LoadCreateWithoutAssignedDriversInput, LoadUncheckedCreateWithoutAssignedDriversInput>
    where?: LoadWhereInput
  }

  export type LoadUpdateToOneWithWhereWithoutAssignedDriversInput = {
    where?: LoadWhereInput
    data: XOR<LoadUpdateWithoutAssignedDriversInput, LoadUncheckedUpdateWithoutAssignedDriversInput>
  }

  export type LoadUpdateWithoutAssignedDriversInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUpdateManyWithoutCurrentLoadNestedInput
    assignedTrailers?: TrailerUpdateManyWithoutCurrentLoadNestedInput
  }

  export type LoadUncheckedUpdateWithoutAssignedDriversInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    loadId?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    status?: EnumLoadStatusFieldUpdateOperationsInput | $Enums.LoadStatus
    trackingNumber?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    customerName?: StringFieldUpdateOperationsInput | string
    originAddress?: StringFieldUpdateOperationsInput | string
    originLat?: NullableFloatFieldUpdateOperationsInput | number | null
    originLng?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationAddress?: StringFieldUpdateOperationsInput | string
    destinationLat?: NullableFloatFieldUpdateOperationsInput | number | null
    destinationLng?: NullableFloatFieldUpdateOperationsInput | number | null
    scheduledPickup?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDelivery?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUncheckedUpdateManyWithoutCurrentLoadNestedInput
    assignedTrailers?: TrailerUncheckedUpdateManyWithoutCurrentLoadNestedInput
  }

  export type TruckCreateWithoutCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrucksInput
    currentDriver?: DriverCreateNestedOneWithoutAssignedTrucksInput
    attachedTrailer?: TrailerCreateNestedOneWithoutAttachedTruckInput
    documents?: TruckDocumentCreateNestedManyWithoutTruckInput
  }

  export type TruckUncheckedCreateWithoutCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
    attachedTrailer?: TrailerUncheckedCreateNestedOneWithoutAttachedTruckInput
    documents?: TruckDocumentUncheckedCreateNestedManyWithoutTruckInput
  }

  export type TruckCreateOrConnectWithoutCurrentLoadInput = {
    where: TruckWhereUniqueInput
    create: XOR<TruckCreateWithoutCurrentLoadInput, TruckUncheckedCreateWithoutCurrentLoadInput>
  }

  export type TruckCreateManyCurrentLoadInputEnvelope = {
    data: TruckCreateManyCurrentLoadInput | TruckCreateManyCurrentLoadInput[]
    skipDuplicates?: boolean
  }

  export type TrailerCreateWithoutCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrailersInput
    attachedTruck?: TruckCreateNestedOneWithoutAttachedTrailerInput
  }

  export type TrailerUncheckedCreateWithoutCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    attachedTruckId?: string | null
    lastUpdated?: Date | string
  }

  export type TrailerCreateOrConnectWithoutCurrentLoadInput = {
    where: TrailerWhereUniqueInput
    create: XOR<TrailerCreateWithoutCurrentLoadInput, TrailerUncheckedCreateWithoutCurrentLoadInput>
  }

  export type TrailerCreateManyCurrentLoadInputEnvelope = {
    data: TrailerCreateManyCurrentLoadInput | TrailerCreateManyCurrentLoadInput[]
    skipDuplicates?: boolean
  }

  export type DriverCreateWithoutCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    lastUpdated?: Date | string
    assignedTrucks?: TruckCreateNestedManyWithoutCurrentDriverInput
  }

  export type DriverUncheckedCreateWithoutCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    lastUpdated?: Date | string
    assignedTrucks?: TruckUncheckedCreateNestedManyWithoutCurrentDriverInput
  }

  export type DriverCreateOrConnectWithoutCurrentLoadInput = {
    where: DriverWhereUniqueInput
    create: XOR<DriverCreateWithoutCurrentLoadInput, DriverUncheckedCreateWithoutCurrentLoadInput>
  }

  export type DriverCreateManyCurrentLoadInputEnvelope = {
    data: DriverCreateManyCurrentLoadInput | DriverCreateManyCurrentLoadInput[]
    skipDuplicates?: boolean
  }

  export type TruckUpsertWithWhereUniqueWithoutCurrentLoadInput = {
    where: TruckWhereUniqueInput
    update: XOR<TruckUpdateWithoutCurrentLoadInput, TruckUncheckedUpdateWithoutCurrentLoadInput>
    create: XOR<TruckCreateWithoutCurrentLoadInput, TruckUncheckedCreateWithoutCurrentLoadInput>
  }

  export type TruckUpdateWithWhereUniqueWithoutCurrentLoadInput = {
    where: TruckWhereUniqueInput
    data: XOR<TruckUpdateWithoutCurrentLoadInput, TruckUncheckedUpdateWithoutCurrentLoadInput>
  }

  export type TruckUpdateManyWithWhereWithoutCurrentLoadInput = {
    where: TruckScalarWhereInput
    data: XOR<TruckUpdateManyMutationInput, TruckUncheckedUpdateManyWithoutCurrentLoadInput>
  }

  export type TrailerUpsertWithWhereUniqueWithoutCurrentLoadInput = {
    where: TrailerWhereUniqueInput
    update: XOR<TrailerUpdateWithoutCurrentLoadInput, TrailerUncheckedUpdateWithoutCurrentLoadInput>
    create: XOR<TrailerCreateWithoutCurrentLoadInput, TrailerUncheckedCreateWithoutCurrentLoadInput>
  }

  export type TrailerUpdateWithWhereUniqueWithoutCurrentLoadInput = {
    where: TrailerWhereUniqueInput
    data: XOR<TrailerUpdateWithoutCurrentLoadInput, TrailerUncheckedUpdateWithoutCurrentLoadInput>
  }

  export type TrailerUpdateManyWithWhereWithoutCurrentLoadInput = {
    where: TrailerScalarWhereInput
    data: XOR<TrailerUpdateManyMutationInput, TrailerUncheckedUpdateManyWithoutCurrentLoadInput>
  }

  export type TrailerScalarWhereInput = {
    AND?: TrailerScalarWhereInput | TrailerScalarWhereInput[]
    OR?: TrailerScalarWhereInput[]
    NOT?: TrailerScalarWhereInput | TrailerScalarWhereInput[]
    id?: StringFilter<"Trailer"> | string
    createdAt?: DateTimeFilter<"Trailer"> | Date | string
    updatedAt?: DateTimeFilter<"Trailer"> | Date | string
    trailerId?: StringFilter<"Trailer"> | string
    name?: StringNullableFilter<"Trailer"> | string | null
    vin?: StringFilter<"Trailer"> | string
    year?: IntNullableFilter<"Trailer"> | number | null
    trailerType?: StringNullableFilter<"Trailer"> | string | null
    length?: IntNullableFilter<"Trailer"> | number | null
    capacity?: IntNullableFilter<"Trailer"> | number | null
    axleCount?: IntNullableFilter<"Trailer"> | number | null
    status?: EnumTrailerStatusFilter<"Trailer"> | $Enums.TrailerStatus
    currentLocation?: StringNullableFilter<"Trailer"> | string | null
    assignedYardId?: StringNullableFilter<"Trailer"> | string | null
    attachedTruckId?: StringNullableFilter<"Trailer"> | string | null
    currentLoadId?: StringNullableFilter<"Trailer"> | string | null
    lastUpdated?: DateTimeFilter<"Trailer"> | Date | string
  }

  export type DriverUpsertWithWhereUniqueWithoutCurrentLoadInput = {
    where: DriverWhereUniqueInput
    update: XOR<DriverUpdateWithoutCurrentLoadInput, DriverUncheckedUpdateWithoutCurrentLoadInput>
    create: XOR<DriverCreateWithoutCurrentLoadInput, DriverUncheckedCreateWithoutCurrentLoadInput>
  }

  export type DriverUpdateWithWhereUniqueWithoutCurrentLoadInput = {
    where: DriverWhereUniqueInput
    data: XOR<DriverUpdateWithoutCurrentLoadInput, DriverUncheckedUpdateWithoutCurrentLoadInput>
  }

  export type DriverUpdateManyWithWhereWithoutCurrentLoadInput = {
    where: DriverScalarWhereInput
    data: XOR<DriverUpdateManyMutationInput, DriverUncheckedUpdateManyWithoutCurrentLoadInput>
  }

  export type DriverScalarWhereInput = {
    AND?: DriverScalarWhereInput | DriverScalarWhereInput[]
    OR?: DriverScalarWhereInput[]
    NOT?: DriverScalarWhereInput | DriverScalarWhereInput[]
    id?: StringFilter<"Driver"> | string
    createdAt?: DateTimeFilter<"Driver"> | Date | string
    updatedAt?: DateTimeFilter<"Driver"> | Date | string
    driverId?: StringFilter<"Driver"> | string
    name?: StringFilter<"Driver"> | string
    email?: StringNullableFilter<"Driver"> | string | null
    phone?: StringNullableFilter<"Driver"> | string | null
    status?: EnumDriverStatusFilter<"Driver"> | $Enums.DriverStatus
    operatingBaseCity?: StringNullableFilter<"Driver"> | string | null
    operatingBaseState?: StringNullableFilter<"Driver"> | string | null
    assignedFleetId?: StringNullableFilter<"Driver"> | string | null
    currentLoadId?: StringNullableFilter<"Driver"> | string | null
    lastUpdated?: DateTimeFilter<"Driver"> | Date | string
  }

  export type TruckCreateWithoutAssignedYardInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
    currentDriver?: DriverCreateNestedOneWithoutAssignedTrucksInput
    attachedTrailer?: TrailerCreateNestedOneWithoutAttachedTruckInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrucksInput
    documents?: TruckDocumentCreateNestedManyWithoutTruckInput
  }

  export type TruckUncheckedCreateWithoutAssignedYardInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
    attachedTrailer?: TrailerUncheckedCreateNestedOneWithoutAttachedTruckInput
    documents?: TruckDocumentUncheckedCreateNestedManyWithoutTruckInput
  }

  export type TruckCreateOrConnectWithoutAssignedYardInput = {
    where: TruckWhereUniqueInput
    create: XOR<TruckCreateWithoutAssignedYardInput, TruckUncheckedCreateWithoutAssignedYardInput>
  }

  export type TruckCreateManyAssignedYardInputEnvelope = {
    data: TruckCreateManyAssignedYardInput | TruckCreateManyAssignedYardInput[]
    skipDuplicates?: boolean
  }

  export type TrailerCreateWithoutAssignedYardInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    lastUpdated?: Date | string
    attachedTruck?: TruckCreateNestedOneWithoutAttachedTrailerInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrailersInput
  }

  export type TrailerUncheckedCreateWithoutAssignedYardInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    attachedTruckId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TrailerCreateOrConnectWithoutAssignedYardInput = {
    where: TrailerWhereUniqueInput
    create: XOR<TrailerCreateWithoutAssignedYardInput, TrailerUncheckedCreateWithoutAssignedYardInput>
  }

  export type TrailerCreateManyAssignedYardInputEnvelope = {
    data: TrailerCreateManyAssignedYardInput | TrailerCreateManyAssignedYardInput[]
    skipDuplicates?: boolean
  }

  export type TruckUpsertWithWhereUniqueWithoutAssignedYardInput = {
    where: TruckWhereUniqueInput
    update: XOR<TruckUpdateWithoutAssignedYardInput, TruckUncheckedUpdateWithoutAssignedYardInput>
    create: XOR<TruckCreateWithoutAssignedYardInput, TruckUncheckedCreateWithoutAssignedYardInput>
  }

  export type TruckUpdateWithWhereUniqueWithoutAssignedYardInput = {
    where: TruckWhereUniqueInput
    data: XOR<TruckUpdateWithoutAssignedYardInput, TruckUncheckedUpdateWithoutAssignedYardInput>
  }

  export type TruckUpdateManyWithWhereWithoutAssignedYardInput = {
    where: TruckScalarWhereInput
    data: XOR<TruckUpdateManyMutationInput, TruckUncheckedUpdateManyWithoutAssignedYardInput>
  }

  export type TrailerUpsertWithWhereUniqueWithoutAssignedYardInput = {
    where: TrailerWhereUniqueInput
    update: XOR<TrailerUpdateWithoutAssignedYardInput, TrailerUncheckedUpdateWithoutAssignedYardInput>
    create: XOR<TrailerCreateWithoutAssignedYardInput, TrailerUncheckedCreateWithoutAssignedYardInput>
  }

  export type TrailerUpdateWithWhereUniqueWithoutAssignedYardInput = {
    where: TrailerWhereUniqueInput
    data: XOR<TrailerUpdateWithoutAssignedYardInput, TrailerUncheckedUpdateWithoutAssignedYardInput>
  }

  export type TrailerUpdateManyWithWhereWithoutAssignedYardInput = {
    where: TrailerScalarWhereInput
    data: XOR<TrailerUpdateManyMutationInput, TrailerUncheckedUpdateManyWithoutAssignedYardInput>
  }

  export type TruckCreateWithoutDocumentsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
    assignedYard?: LocationCreateNestedOneWithoutAssignedTrucksInput
    currentDriver?: DriverCreateNestedOneWithoutAssignedTrucksInput
    attachedTrailer?: TrailerCreateNestedOneWithoutAttachedTruckInput
    currentLoad?: LoadCreateNestedOneWithoutAssignedTrucksInput
  }

  export type TruckUncheckedCreateWithoutDocumentsInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
    attachedTrailer?: TrailerUncheckedCreateNestedOneWithoutAttachedTruckInput
  }

  export type TruckCreateOrConnectWithoutDocumentsInput = {
    where: TruckWhereUniqueInput
    create: XOR<TruckCreateWithoutDocumentsInput, TruckUncheckedCreateWithoutDocumentsInput>
  }

  export type TruckUpsertWithoutDocumentsInput = {
    update: XOR<TruckUpdateWithoutDocumentsInput, TruckUncheckedUpdateWithoutDocumentsInput>
    create: XOR<TruckCreateWithoutDocumentsInput, TruckUncheckedCreateWithoutDocumentsInput>
    where?: TruckWhereInput
  }

  export type TruckUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: TruckWhereInput
    data: XOR<TruckUpdateWithoutDocumentsInput, TruckUncheckedUpdateWithoutDocumentsInput>
  }

  export type TruckUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrucksNestedInput
    currentDriver?: DriverUpdateOneWithoutAssignedTrucksNestedInput
    attachedTrailer?: TrailerUpdateOneWithoutAttachedTruckNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrucksNestedInput
  }

  export type TruckUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    attachedTrailer?: TrailerUncheckedUpdateOneWithoutAttachedTruckNestedInput
  }

  export type TruckDocumentCreateManyTruckInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    documentType: $Enums.DocumentType
    fileName: string
    filePath: string
    fileSize?: number | null
    mimeType?: string | null
    description?: string | null
    uploadedBy?: string | null
    lastUpdated?: Date | string
  }

  export type TruckDocumentUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    fileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckDocumentUncheckedUpdateWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    fileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckDocumentUncheckedUpdateManyWithoutTruckInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documentType?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    fileName?: StringFieldUpdateOperationsInput | string
    filePath?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedBy?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckCreateManyCurrentDriverInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TruckUpdateWithoutCurrentDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrucksNestedInput
    attachedTrailer?: TrailerUpdateOneWithoutAttachedTruckNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrucksNestedInput
    documents?: TruckDocumentUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateWithoutCurrentDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    attachedTrailer?: TrailerUncheckedUpdateOneWithoutAttachedTruckNestedInput
    documents?: TruckDocumentUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateManyWithoutCurrentDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckCreateManyCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    lastUpdated?: Date | string
  }

  export type TrailerCreateManyCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    assignedYardId?: string | null
    attachedTruckId?: string | null
    lastUpdated?: Date | string
  }

  export type DriverCreateManyCurrentLoadInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driverId: string
    name: string
    email?: string | null
    phone?: string | null
    status?: $Enums.DriverStatus
    operatingBaseCity?: string | null
    operatingBaseState?: string | null
    assignedFleetId?: string | null
    lastUpdated?: Date | string
  }

  export type TruckUpdateWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrucksNestedInput
    currentDriver?: DriverUpdateOneWithoutAssignedTrucksNestedInput
    attachedTrailer?: TrailerUpdateOneWithoutAttachedTruckNestedInput
    documents?: TruckDocumentUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    attachedTrailer?: TrailerUncheckedUpdateOneWithoutAttachedTruckNestedInput
    documents?: TruckDocumentUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateManyWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerUpdateWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedYard?: LocationUpdateOneWithoutAssignedTrailersNestedInput
    attachedTruck?: TruckUpdateOneWithoutAttachedTrailerNestedInput
  }

  export type TrailerUncheckedUpdateWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTruckId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerUncheckedUpdateManyWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    assignedYardId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTruckId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DriverUpdateWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUpdateManyWithoutCurrentDriverNestedInput
  }

  export type DriverUncheckedUpdateWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTrucks?: TruckUncheckedUpdateManyWithoutCurrentDriverNestedInput
  }

  export type DriverUncheckedUpdateManyWithoutCurrentLoadInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus
    operatingBaseCity?: NullableStringFieldUpdateOperationsInput | string | null
    operatingBaseState?: NullableStringFieldUpdateOperationsInput | string | null
    assignedFleetId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TruckCreateManyAssignedYardInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    vehicleId: string
    name?: string | null
    vin: string
    make: string
    model: string
    year: number
    color?: string | null
    engineMake?: string | null
    engineModel?: string | null
    horsepower?: number | null
    transmissionType?: $Enums.TransmissionType
    numGears?: number | null
    ownershipType?: $Enums.OwnershipType
    purchaseDate?: Date | string | null
    leaseEndDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    licensePlate?: string | null
    issuingState?: string | null
    registrationExp?: Date | string | null
    insurancePolicy?: string | null
    insuranceExp?: Date | string | null
    jurisdiction?: string
    gvwr?: number | null
    gcwr?: number | null
    dotNumber?: string | null
    status?: $Enums.TruckStatus
    currentLocation?: string | null
    odometer?: number | null
    odometerUnit?: $Enums.DistanceUnit
    engineHours?: number | null
    currentDriverId?: string | null
    attachedTrailerId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TrailerCreateManyAssignedYardInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    trailerId: string
    name?: string | null
    vin: string
    year?: number | null
    trailerType?: string | null
    length?: number | null
    capacity?: number | null
    axleCount?: number | null
    status?: $Enums.TrailerStatus
    currentLocation?: string | null
    attachedTruckId?: string | null
    currentLoadId?: string | null
    lastUpdated?: Date | string
  }

  export type TruckUpdateWithoutAssignedYardInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    currentDriver?: DriverUpdateOneWithoutAssignedTrucksNestedInput
    attachedTrailer?: TrailerUpdateOneWithoutAttachedTruckNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrucksNestedInput
    documents?: TruckDocumentUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateWithoutAssignedYardInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    attachedTrailer?: TrailerUncheckedUpdateOneWithoutAttachedTruckNestedInput
    documents?: TruckDocumentUncheckedUpdateManyWithoutTruckNestedInput
  }

  export type TruckUncheckedUpdateManyWithoutAssignedYardInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    vehicleId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    make?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    color?: NullableStringFieldUpdateOperationsInput | string | null
    engineMake?: NullableStringFieldUpdateOperationsInput | string | null
    engineModel?: NullableStringFieldUpdateOperationsInput | string | null
    horsepower?: NullableIntFieldUpdateOperationsInput | number | null
    transmissionType?: EnumTransmissionTypeFieldUpdateOperationsInput | $Enums.TransmissionType
    numGears?: NullableIntFieldUpdateOperationsInput | number | null
    ownershipType?: EnumOwnershipTypeFieldUpdateOperationsInput | $Enums.OwnershipType
    purchaseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leaseEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    licensePlate?: NullableStringFieldUpdateOperationsInput | string | null
    issuingState?: NullableStringFieldUpdateOperationsInput | string | null
    registrationExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insurancePolicy?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    jurisdiction?: StringFieldUpdateOperationsInput | string
    gvwr?: NullableIntFieldUpdateOperationsInput | number | null
    gcwr?: NullableIntFieldUpdateOperationsInput | number | null
    dotNumber?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTruckStatusFieldUpdateOperationsInput | $Enums.TruckStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    odometer?: NullableIntFieldUpdateOperationsInput | number | null
    odometerUnit?: EnumDistanceUnitFieldUpdateOperationsInput | $Enums.DistanceUnit
    engineHours?: NullableIntFieldUpdateOperationsInput | number | null
    currentDriverId?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTrailerId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerUpdateWithoutAssignedYardInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    attachedTruck?: TruckUpdateOneWithoutAttachedTrailerNestedInput
    currentLoad?: LoadUpdateOneWithoutAssignedTrailersNestedInput
  }

  export type TrailerUncheckedUpdateWithoutAssignedYardInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTruckId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrailerUncheckedUpdateManyWithoutAssignedYardInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    trailerId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    vin?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    trailerType?: NullableStringFieldUpdateOperationsInput | string | null
    length?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    axleCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumTrailerStatusFieldUpdateOperationsInput | $Enums.TrailerStatus
    currentLocation?: NullableStringFieldUpdateOperationsInput | string | null
    attachedTruckId?: NullableStringFieldUpdateOperationsInput | string | null
    currentLoadId?: NullableStringFieldUpdateOperationsInput | string | null
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use TruckCountOutputTypeDefaultArgs instead
     */
    export type TruckCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TruckCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DriverCountOutputTypeDefaultArgs instead
     */
    export type DriverCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DriverCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LoadCountOutputTypeDefaultArgs instead
     */
    export type LoadCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LoadCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocationCountOutputTypeDefaultArgs instead
     */
    export type LocationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TruckDefaultArgs instead
     */
    export type TruckArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TruckDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TrailerDefaultArgs instead
     */
    export type TrailerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TrailerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DriverDefaultArgs instead
     */
    export type DriverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DriverDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LoadDefaultArgs instead
     */
    export type LoadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LoadDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocationDefaultArgs instead
     */
    export type LocationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TruckDocumentDefaultArgs instead
     */
    export type TruckDocumentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TruckDocumentDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}