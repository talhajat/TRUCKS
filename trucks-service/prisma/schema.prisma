// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// TRUCKS-SERVICE SCHEMA
// Cleaned up to support ONLY the two core features:
// 1. Truck Creation (form → database)
// 2. Truck Display (database → table)

model Truck {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Identification & Basic Details (Required for table display)
  vehicleId String  @unique // Unit Number (e.g., T101) - maps to ID/UNIT column
  name      String? // User-friendly name
  vin       String  @unique // maps to VIN column
  make      String  // maps to MAKE & MODEL column (part 1)
  model     String  // maps to MAKE & MODEL column (part 2)
  year      Int     // maps to YEAR column
  color     String?

  // Engine & Powertrain (from form)
  engineMake       String?
  engineModel      String?
  horsepower       Int?
  transmissionType TransmissionType @default(MANUAL)
  numGears         Int?

  // Ownership & Financials (from form)
  ownershipType OwnershipType @default(OWNED)
  purchaseDate  DateTime?
  leaseEndDate  DateTime?
  purchasePrice Decimal?

  // Registration & Compliance (from form)
  licensePlate     String?
  issuingState     String?
  registrationExp  DateTime?
  insurancePolicy  String?
  insuranceExp     DateTime?
  jurisdiction     String @default("IFTA")
  gvwr             Int? // Gross Vehicle Weight Rating (lbs)
  gcwr             Int? // Gross Combined Weight Rating (lbs)
  dotNumber        String?

  // Status & Location (Required for table display)
  status          TruckStatus @default(available) // maps to STATUS column
  currentLocation String? // maps to CURRENT LOCATION column
  assignedYardId  String? // Simple ID reference (no foreign key)

  // Operational Data (Required for table display)
  odometer     Int? // maps to ODOMETER/ENG HRS column (part 1)
  odometerUnit DistanceUnit @default(MILES)
  engineHours  Int? // Always displayed as "NA" in table

  // Simple Trailer Reference (Required for table display)
  // Store ONLY trailer ID - no complex relationship
  // Maps to ATTACHED TRAILER column
  attachedTrailerId String? // Show "None" if null, trailer ID if assigned

  // Documents (keep for form uploads)
  documents TruckDocument[]

  // Audit
  lastUpdated DateTime @default(now())

  @@map("trucks")
}

model TruckDocument {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Document Info
  documentType DocumentType
  fileName     String
  filePath     String
  fileSize     Int?
  mimeType     String?

  // Metadata
  description String?
  uploadedBy  String?

  // Relationships
  truckId String
  truck   Truck  @relation(fields: [truckId], references: [id], onDelete: Cascade)

  // Audit
  lastUpdated DateTime @default(now())

  @@map("truck_documents")
}

// ENUMS - Keep only truck-related enums
enum TruckStatus {
  available
  maintenance
  out_of_service
}

enum TransmissionType {
  MANUAL
  AUTOMATIC
  AUTOMATED_MANUAL
}

enum OwnershipType {
  OWNED
  LEASED
  RENTED
}

enum DistanceUnit {
  MILES
  KILOMETERS
}

enum DocumentType {
  VEHICLE_TITLE
  LEASE_AGREEMENT
  REGISTRATION
  INSURANCE_CERTIFICATE
  INSPECTION_REPORT
}