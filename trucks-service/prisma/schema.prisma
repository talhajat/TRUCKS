// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Truck {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Identification & Basic Details
  vehicleId String  @unique // Unit Number (e.g., T101)
  name      String? // User-friendly name
  vin       String  @unique
  make      String
  model     String
  year      Int
  color     String?

  // Engine & Powertrain
  engineMake       String?
  engineModel      String?
  horsepower       Int?
  transmissionType TransmissionType @default(MANUAL)
  numGears         Int?

  // Ownership & Financials
  ownershipType OwnershipType @default(OWNED)
  purchaseDate  DateTime?
  leaseEndDate  DateTime?
  purchasePrice Decimal?

  // Registration & Compliance
  licensePlate     String?
  issuingState     String?
  registrationExp  DateTime?
  insurancePolicy  String?
  insuranceExp     DateTime?
  jurisdiction     String    @default("IFTA")
  gvwr             Int? // Gross Vehicle Weight Rating (lbs)
  gcwr             Int? // Gross Combined Weight Rating (lbs)
  dotNumber        String?

  // Status & Location
  status          TruckStatus @default(available)
  currentLocation String?
  assignedYardId  String?
  assignedYard    Location?   @relation(fields: [assignedYardId], references: [id])

  // Operational Data
  odometer     Int? // in miles or km
  odometerUnit DistanceUnit @default(MILES)
  engineHours  Int? // in hours

  // Relationships
  currentDriverId     String?
  currentDriver       Driver?  @relation(fields: [currentDriverId], references: [id])
  attachedTrailerId   String?  @unique
  attachedTrailer     Trailer? @relation("TruckTrailer")
  currentLoadId       String?
  currentLoad         Load?    @relation(fields: [currentLoadId], references: [id])

  // Documents
  documents TruckDocument[]

  // Audit
  lastUpdated DateTime @default(now())

  @@map("trucks")
}

model Trailer {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Basic Details
  trailerId String @unique
  name      String?
  vin       String @unique
  year      Int?

  // Trailer Specifications
  trailerType String? // dry_van, reefer, flatbed, tanker
  length      Int? // in feet
  capacity    Int? // in lbs
  axleCount   Int?

  // Status & Location
  status          TrailerStatus @default(AVAILABLE)
  currentLocation String?
  assignedYardId  String?
  assignedYard    Location?     @relation(fields: [assignedYardId], references: [id])

  // Relationships
  attachedTruckId String?  @unique
  attachedTruck   Truck?   @relation("TruckTrailer", fields: [attachedTruckId], references: [id])
  currentLoadId   String?
  currentLoad     Load?   @relation(fields: [currentLoadId], references: [id])

  // Audit
  lastUpdated DateTime @default(now())

  @@map("trailers")
}

model Driver {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Basic Info
  driverId String @unique
  name     String
  email    String?
  phone    String?

  // Status
  status DriverStatus @default(AVAILABLE)

  // Location
  operatingBaseCity  String?
  operatingBaseState String?
  assignedFleetId    String?

  // Relationships
  assignedTrucks Truck[]
  currentLoadId  String?
  currentLoad    Load?   @relation(fields: [currentLoadId], references: [id])

  // Audit
  lastUpdated DateTime @default(now())

  @@map("drivers")
}

model Load {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Basic Info
  loadId         String     @unique
  reference      String
  status         LoadStatus @default(PENDING)
  trackingNumber String     @unique

  // Customer
  customerId   String
  customerName String

  // Route
  originAddress      String
  originLat          Float?
  originLng          Float?
  destinationAddress String
  destinationLat     Float?
  destinationLng     Float?

  // Schedule
  scheduledPickup   DateTime
  scheduledDelivery DateTime

  // Assignments
  assignedTrucks   Truck[]
  assignedTrailers Trailer[]
  assignedDrivers  Driver[]

  // Audit
  lastUpdated DateTime @default(now())

  @@map("loads")
}

model Location {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Basic Info
  locationId String @unique
  name       String
  address    String?
  city       String?
  state      String?
  zipCode    String?
  country    String? @default("US")

  // Coordinates
  latitude  Float?
  longitude Float?

  // Type
  locationType LocationType @default(YARD)

  // Relationships
  assignedTrucks   Truck[]
  assignedTrailers Trailer[]

  // Audit
  lastUpdated DateTime @default(now())

  @@map("locations")
}

model TruckDocument {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Document Info
  documentType DocumentType
  fileName     String
  filePath     String
  fileSize     Int?
  mimeType     String?

  // Metadata
  description String?
  uploadedBy  String?

  // Relationships
  truckId String
  truck   Truck  @relation(fields: [truckId], references: [id], onDelete: Cascade)

  // Audit
  lastUpdated DateTime @default(now())

  @@map("truck_documents")
}

// Enums
enum TruckStatus {
  available
  assigned
  maintenance
  out_of_service
}

enum TrailerStatus {
  AVAILABLE
  ASSIGNED
  MAINTENANCE
  OUT_OF_SERVICE
}

enum DriverStatus {
  AVAILABLE
  DRIVING
  ON_BREAK
  LOADING
  UNLOADING
  MAINTENANCE
  AWAY
  OFF_DUTY
}

enum LoadStatus {
  PENDING
  ASSIGNED
  IN_TRANSIT
  DELIVERED
  CANCELLED
}

enum TransmissionType {
  MANUAL
  AUTOMATIC
  AUTOMATED_MANUAL
}

enum OwnershipType {
  OWNED
  LEASED
  RENTED
}

enum DistanceUnit {
  MILES
  KILOMETERS
}

enum LocationType {
  YARD
  TERMINAL
  SHOP
  CUSTOMER_SITE
  DROP_YARD
}

enum DocumentType {
  VEHICLE_TITLE
  LEASE_AGREEMENT
  REGISTRATION
  INSURANCE_CERTIFICATE
  INSPECTION_REPORT
}