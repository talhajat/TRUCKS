import { VehicleId } from '../value-objects/vehicle-id.vo';
import { VIN } from '../value-objects/vin.vo';
import { TruckDocument } from './truck-document.entity';
export interface TruckProps {
    vehicleId: VehicleId;
    name?: string;
    vin: VIN;
    make: string;
    model: string;
    year: number;
    color?: string;
    engineMake?: string;
    engineModel?: string;
    horsepower?: number;
    transmissionType: string;
    numGears?: number;
    ownershipType: string;
    purchaseDate?: Date;
    leaseEndDate?: Date;
    purchasePrice?: number;
    licensePlate?: string;
    issuingState?: string;
    registrationExp?: Date;
    insurancePolicy?: string;
    insuranceExp?: Date;
    jurisdiction: string;
    gvwr?: number;
    gcwr?: number;
    dotNumber?: string;
    status: string;
    currentLocation?: string;
    assignedYardId?: string;
    odometer?: number;
    odometerUnit: string;
    engineHours?: number;
    currentDriverId?: string;
    attachedTrailerId?: string;
    currentLoadId?: string;
    documents?: TruckDocument[];
    createdAt?: Date;
    updatedAt?: Date;
    lastUpdated: Date;
}
export declare class Truck {
    private readonly _id;
    private _props;
    private constructor();
    static create(props: TruckProps, id?: string): Truck;
    static fromPersistence(id: string, props: TruckProps): Truck;
    private validate;
    assignDriver(driverId: string): void;
    unassignDriver(): void;
    attachTrailer(trailerId: string): void;
    detachTrailer(): void;
    updateOdometer(newReading: number): void;
    changeStatus(newStatus: string): void;
    updateLocation(location: string, yardId?: string): void;
    addDocument(document: TruckDocument): void;
    removeDocument(documentId: string): void;
    getDocumentsByType(documentType: string): TruckDocument[];
    getDocuments(): TruckDocument[];
    hasRequiredDocuments(): boolean;
    isReadyForOperation(): boolean;
    get id(): string;
    get vehicleId(): VehicleId;
    get vehicleIdValue(): string;
    get name(): string | undefined;
    get vin(): VIN;
    get vinValue(): string;
    get make(): string;
    get model(): string;
    get year(): number;
    get color(): string | undefined;
    get status(): string;
    get currentLocation(): string | undefined;
    get odometer(): number | undefined;
    get engineHours(): number | undefined;
    get currentDriverId(): string | undefined;
    get attachedTrailerId(): string | undefined;
    get lastUpdated(): Date;
    get props(): TruckProps;
    private updateTimestamp;
    private static generateId;
    isAvailable(): boolean;
    isAssigned(): boolean;
    isInMaintenance(): boolean;
    isOutOfService(): boolean;
}
